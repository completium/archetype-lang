{ parameter
    (or (or (or (pair %burn (nat %amount) (address %tr_to))
                (pair %mint (nat %amount) (address %tr_to)))
            (or (pair %setAllowTransferFrom
                   (pair (address %authority) (nat %prev_amount))
                   (pair (bool %remove)
                         (pair %transfer_from_info (nat %amount) (address %transfer_for))))
                (list %transfer (pair (nat %amount) (address %tr_to)))))
        (list %transferFrom (pair (pair (nat %amount) (address %tr_from)) (address %tr_to)))) ;
  storage
    (pair (pair (pair (pair (bool %agreement_procedure)
                            (big_map %allow_transfer_from (pair address address) nat))
                      (pair (big_map %balances address nat) (address %issuer)))
                (pair (pair (string %name) (address %owner)) (pair (string %symbol) (nat %tokens))))
          (nat %total_supply)) ;
  code { NIL operation ;
         LAMBDA
           (pair (pair bool bool) (pair address address))
           (list operation)
           { DUP ;
             CDR ;
             CDR ;
             CONTRACT %modifyTokenTotalSupply
               (pair (pair (address %investor) (bool %is_balance_zero)) (bool %was_balance_zero)) ;
             IF_NONE
               { PUSH string "bad address for get_entrypoint (%modifyTokenTotalSupply)" ;
                 FAILWITH }
               {} ;
             NIL operation ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PUSH mutez 0 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CDR ;
             CAR ;
             PAIR ;
             PAIR ;
             TRANSFER_TOKENS ;
             CONS ;
             DIP { DROP 2 } } ;
         LAMBDA
           (pair (pair (pair nat address) address)
                 (pair (pair (pair (pair bool (big_map (pair address address) nat))
                                   (pair (big_map address nat) address))
                             (pair (pair string address) (pair string nat)))
                       nat))
           (pair operation
                 (pair (pair (pair (pair bool (big_map (pair address address) nat))
                                   (pair (big_map address nat) address))
                             (pair (pair string address) (pair string nat)))
                       nat))
           { DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             PAIR ;
             DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             LT ;
             IF { PUSH string "32" ; FAILWITH }
                { DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CAR ;
                  CAR ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  SUB ;
                  ABS ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CAR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  CDR ;
                  GET ;
                  IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                  ADD ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  SOME ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  CAR ;
                  CDR ;
                  UPDATE ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  SOME ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  CDR ;
                  UPDATE ;
                  DIP { DROP 2 } } ;
             DIP { DROP 4 } ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CDR ;
             GET ;
             IF_NONE
               { PUSH bool True }
               { PUSH nat 0 ; DIG 1 ; DUP ; DUG 2 ; COMPARE ; EQ ; DIP { DROP } } ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             GET ;
             IF_NONE
               { PUSH bool True }
               { PUSH nat 0 ; DIG 1 ; DUP ; DUG 2 ; COMPARE ; EQ ; DIP { DROP } } ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             CDR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             CONTRACT %transferTokens
               (pair (pair (address %tr_from) (address %tr_to))
                     (pair %zero_balances (bool %receiver) (bool %sender))) ;
             IF_NONE
               { PUSH string "bad address for get_entrypoint (%transferTokens)" ; FAILWITH }
               {} ;
             DUP ;
             PUSH mutez 0 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             TRANSFER_TOKENS ;
             DIP { DROP 2 } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             PAIR ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             CAR ;
             CAR ;
             CDR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIP { DROP 5 } } ;
         LAMBDA
           (pair (pair (pair address bool) (pair nat address))
                 (pair (pair (pair (pair bool (big_map (pair address address) nat))
                                   (pair (big_map address nat) address))
                             (pair (pair string address) (pair string nat)))
                       nat))
           (pair (list operation)
                 (pair (pair (pair (pair bool (big_map (pair address address) nat))
                                   (pair (big_map address nat) address))
                             (pair (pair string address) (pair string nat)))
                       nat))
           { DUP ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             IF { DUP ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CAR ;
                  CAR ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CDR ;
                  CDR ;
                  PAIR ;
                  NONE nat ;
                  SWAP ;
                  UPDATE }
                { DUP ;
                  CAR ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CDR ;
                  CAR ;
                  SOME ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CAR ;
                  CAR ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  CDR ;
                  CDR ;
                  PAIR ;
                  UPDATE } ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CDR ;
             CAR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CDR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             CDR ;
             CDR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CAR ;
             CAR ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CAR ;
             CAR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             PAIR ;
             NIL operation ;
             PAIR ;
             DIP { DROP 4 } } ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         CDR ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     AND ;
                     IF { PUSH string "31" ; FAILWITH } { UNIT } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH string "MAP FIND" ; FAILWITH } {} ;
                     DUP ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "33" ; FAILWITH }
                        { DIG 3 ; DUP ; DUG 4 ; CAR ; DIG 1 ; DUP ; DUG 2 ; SUB ; ABS } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     SOME ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     UPDATE ;
                     DIP { DROP 2 } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     PAIR ;
                     PUSH bool True ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { PUSH bool True }
                       { PUSH nat 0 ; DIG 1 ; DUP ; DUG 2 ; COMPARE ; EQ ; DIP { DROP } } ;
                     PAIR ;
                     PAIR ;
                     DIG 12 ;
                     DUP ;
                     DUG 13 ;
                     SWAP ;
                     EXEC ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     PUSH int 0 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     SUB ;
                     COMPARE ;
                     GE ;
                     IF { DUP ; DIG 2 ; DUP ; DUG 3 ; SUB ; ABS } { PUSH nat 0 } ;
                     DIP { DROP 3 } ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     PAIR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DIP { DROP 8 } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     AND ;
                     IF { PUSH string "31" ; FAILWITH } { UNIT } ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     COMPARE ;
                     GT ;
                     IF { PUSH string "34" ; FAILWITH }
                        { DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          CDR ;
                          SUB ;
                          ABS } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         SOME ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CDR ;
                         UPDATE }
                       { DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         ADD ;
                         SOME ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         UPDATE ;
                         DIP { DROP } } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { PUSH bool True }
                       { PUSH nat 0 ; DIG 1 ; DUP ; DUG 2 ; COMPARE ; EQ ; DIP { DROP } } ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     CDR ;
                     GET ;
                     IF_NONE
                       { PUSH bool True }
                       { PUSH nat 0 ; DIG 1 ; DUP ; DUG 2 ; COMPARE ; EQ ; DIP { DROP } } ;
                     PAIR ;
                     PAIR ;
                     DIG 13 ;
                     DUP ;
                     DUG 14 ;
                     SWAP ;
                     EXEC ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     ADD ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     PAIR ;
                     DIG 7 ;
                     DUP ;
                     DUG 8 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 8 ;
                     DUP ;
                     DUG 9 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     PAIR ;
                     DIP { DROP 9 } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     PAIR ;
                     GET ;
                     IF_NONE
                       { PUSH unit Unit }
                       { DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH unit Unit } { PUSH string "38" ; FAILWITH } ;
                         DIP { DROP } } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     AND ;
                     AND ;
                     IF { PUSH string "35" ; FAILWITH } { UNIT } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CDR ;
                     CAR ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 10 ;
                     DUP ;
                     DUG 11 ;
                     SWAP ;
                     EXEC ;
                     DIP { DROP 6 } }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     NIL operation ;
                     PAIR ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     ITER { SWAP ;
                            PAIR ;
                            DUP ;
                            CAR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            DIG 1 ;
                            DUP ;
                            DUG 2 ;
                            CDR ;
                            SENDER ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            DIG 10 ;
                            DUP ;
                            DUG 11 ;
                            SWAP ;
                            EXEC ;
                            DUP ;
                            CDR ;
                            DIG 3 ;
                            DUP ;
                            DUG 4 ;
                            CAR ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CAR ;
                            CONS ;
                            PAIR ;
                            DIP { DROP 4 } } ;
                     DIP { DROP 2 } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DUP ;
             CDR ;
             DUP ;
             NIL operation ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             ITER { SWAP ;
                    PAIR ;
                    DUP ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CDR ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    CAR ;
                    CAR ;
                    CAR ;
                    CDR ;
                    SENDER ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    CDR ;
                    PAIR ;
                    GET ;
                    IF_NONE { PUSH string "36" ; FAILWITH } { DUP ; DIP { DROP } } ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    CAR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    COMPARE ;
                    GE ;
                    IF { PUSH unit Unit } { PUSH string "37" ; FAILWITH } ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    CDR ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    CAR ;
                    CAR ;
                    DIG 3 ;
                    DUP ;
                    DUG 4 ;
                    SUB ;
                    ABS ;
                    PAIR ;
                    DIG 4 ;
                    DUP ;
                    DUG 5 ;
                    CDR ;
                    DIG 1 ;
                    DUP ;
                    DUG 2 ;
                    PUSH bool False ;
                    SENDER ;
                    PAIR ;
                    PAIR ;
                    PAIR ;
                    DIG 11 ;
                    DUP ;
                    DUG 12 ;
                    SWAP ;
                    EXEC ;
                    DUP ;
                    CDR ;
                    DIG 5 ;
                    DUP ;
                    DUG 6 ;
                    CDR ;
                    DIG 6 ;
                    DUP ;
                    DUG 7 ;
                    CAR ;
                    CDR ;
                    DIG 7 ;
                    DUP ;
                    DUG 8 ;
                    CAR ;
                    CAR ;
                    PAIR ;
                    PAIR ;
                    PAIR ;
                    DIG 13 ;
                    DUP ;
                    DUG 14 ;
                    SWAP ;
                    EXEC ;
                    DUP ;
                    CDR ;
                    DIG 7 ;
                    DUP ;
                    DUG 8 ;
                    CAR ;
                    DIG 2 ;
                    DUP ;
                    DUG 3 ;
                    CAR ;
                    CONS ;
                    PAIR ;
                    DIP { DROP 8 } } ;
             DIP { DROP 3 } } ;
         DIP { DROP 6 } } }