{ parameter
    (or (or (or (or (pair %approve (address %spender) (nat %value)) (unit %finishIssuance))
                (or (pair %getAllowance
                       (pair (address %owner) (address %spender))
                       (contract %callback nat))
                    (pair %getBalance (address %owner) (contract %callback nat))))
            (or (or (pair %getTotalSupply unit (contract nat)) (nat %issueTokens))
                (or (address %setAdmin) (address %setIssuer))))
        (or (or (or (bool %setPaused) (address %setRegistry))
                (or (address %setRules)
                    (pair %transfer (pair (address %from) (address %to)) (nat %value))))
            (pair %transferOverride (pair (address %from) (address %to)) (nat %value)))) ;
  storage
    (pair (pair (pair (pair (set %admins address) (big_map %allowances (pair address address) nat))
                      (pair (big_map %balances address nat) (string %description)))
                (pair (pair (bool %issuance_finished) (address %issuer))
                      (pair (bool %paused) (address %registry))))
          (pair (pair (address %rules) (string %symbol)) (nat %total_supply))) ;
  code { LAMBDA
           (pair address (big_map address nat))
           nat
           { DUP ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET ;
             IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
             DIP { DROP } } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair address (big_map address nat)) nat)
                 (pair (pair (pair (pair (address %from) (address %to)) (nat %value)) nat)
                       (big_map address nat)))
           (pair (pair nat nat) (big_map address nat))
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             DUP ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CAR ;
             PAIR ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             LT ;
             IF { PUSH string "NotEnoughBalance" ; FAILWITH }
                { DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CDR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  SUB ;
                  ABS ;
                  SOME ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  CAR ;
                  CAR ;
                  UPDATE ;
                  DUP ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  CAR ;
                  CDR ;
                  PAIR ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  SWAP ;
                  EXEC ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIG 5 ;
                  DUP ;
                  DUG 6 ;
                  CDR ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  ADD ;
                  SOME ;
                  DIG 6 ;
                  DUP ;
                  DUG 7 ;
                  CAR ;
                  CDR ;
                  UPDATE ;
                  DIG 1 ;
                  DUP ;
                  DUG 2 ;
                  DIG 4 ;
                  DUP ;
                  DUG 5 ;
                  PAIR ;
                  PAIR ;
                  DIP { DROP 2 } } ;
             DIP { DROP 5 } } ;
         SWAP ;
         APPLY ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF { PUSH string "Paused" ; FAILWITH }
                            { DUP ;
                              CAR ;
                              SOURCE ;
                              PAIR ;
                              PUSH nat 0 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              COMPARE ;
                              GT ;
                              PUSH nat 0 ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              GET ;
                              IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                              COMPARE ;
                              GT ;
                              AND ;
                              IF { PUSH string "UnsafeAllowanceChange" ; FAILWITH }
                                 { DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   DIG 6 ;
                                   DUP ;
                                   DUG 7 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   CDR ;
                                   SOME ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   UPDATE ;
                                   DIP { DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         CAR } ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   NIL operation ;
                                   PAIR } ;
                              DIP { DROP } } ;
                         DIP { DROP } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF { PUSH string "Paused" ; FAILWITH }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              SOURCE ;
                              COMPARE ;
                              NEQ ;
                              OR ;
                              IF { PUSH string "NotAllowed" ; FAILWITH }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   DUP ;
                                   CDR ;
                                   SWAP ;
                                   CAR ;
                                   DUP ;
                                   CAR ;
                                   SWAP ;
                                   CDR ;
                                   DUP ;
                                   CDR ;
                                   SWAP ;
                                   CAR ;
                                   CDR ;
                                   PUSH bool True ;
                                   PAIR ;
                                   PAIR ;
                                   SWAP ;
                                   PAIR ;
                                   PAIR ;
                                   NIL operation ;
                                   PAIR } } ;
                         DIP { DROP } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CDR ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         GET ;
                         IF_NONE { PUSH nat 0 } { DUP ; DIP { DROP } } ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR ;
                         DIP { DROP } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         PAIR ;
                         DIG 11 ;
                         DUP ;
                         DUG 12 ;
                         SWAP ;
                         EXEC ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CDR ;
                         CDR ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         PAIR ;
                         DIP { DROP } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF { PUSH string "Paused" ; FAILWITH }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CAR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              SOURCE ;
                              COMPARE ;
                              NEQ ;
                              OR ;
                              IF { PUSH string "NotAllowed" ; FAILWITH }
                                 { PUSH nat 0 ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   COMPARE ;
                                   LE ;
                                   IF { DIG 4 ; DUP ; DUG 5 ; NIL operation ; PAIR }
                                      { DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        DIG 1 ;
                                        DUP ;
                                        DUG 2 ;
                                        DIG 6 ;
                                        DUP ;
                                        DUG 7 ;
                                        CDR ;
                                        CDR ;
                                        ADD ;
                                        DIP { DUP ; CAR ; SWAP ; CDR ; CAR } ;
                                        SWAP ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        DIG 5 ;
                                        DUP ;
                                        DUG 6 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        DIG 7 ;
                                        DUP ;
                                        DUG 8 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        DIG 8 ;
                                        DUP ;
                                        DUG 9 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        PAIR ;
                                        DIG 10 ;
                                        DUP ;
                                        DUG 11 ;
                                        SWAP ;
                                        EXEC ;
                                        ADD ;
                                        SOME ;
                                        DIG 7 ;
                                        DUP ;
                                        DUG 8 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        UPDATE ;
                                        DIP { DUP ;
                                              CDR ;
                                              SWAP ;
                                              CAR ;
                                              DUP ;
                                              CDR ;
                                              SWAP ;
                                              CAR ;
                                              DUP ;
                                              CAR ;
                                              SWAP ;
                                              CDR ;
                                              CDR } ;
                                        PAIR ;
                                        SWAP ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } } } ;
                         DIP { DROP } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { PUSH bool False ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SOURCE ;
                         MEM ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "NotAllowed" ; FAILWITH }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              CAR ;
                              CAR ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              MEM ;
                              IF { PUSH nat 1 ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   SIZE ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH string "SoloAdmin" ; FAILWITH }
                                      { DIG 4 ;
                                        DUP ;
                                        DUG 5 ;
                                        DIG 5 ;
                                        DUP ;
                                        DUG 6 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        DIG 2 ;
                                        DUP ;
                                        DUG 3 ;
                                        PUSH bool False ;
                                        SWAP ;
                                        UPDATE ;
                                        DIP { DUP ;
                                              CDR ;
                                              SWAP ;
                                              CAR ;
                                              DUP ;
                                              CDR ;
                                              SWAP ;
                                              CAR ;
                                              DUP ;
                                              CDR ;
                                              SWAP ;
                                              CAR ;
                                              CDR } ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        PAIR ;
                                        NIL operation ;
                                        PAIR } }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   PUSH bool True ;
                                   SWAP ;
                                   UPDATE ;
                                   DIP { DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         DUP ;
                                         CDR ;
                                         SWAP ;
                                         CAR ;
                                         CDR } ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   PAIR ;
                                   NIL operation ;
                                   PAIR } } ;
                         DIP { DROP } }
                       { PUSH bool False ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SOURCE ;
                         MEM ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "NotAllowed" ; FAILWITH }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } }
           { DUP ;
             IF_LEFT
               { DUP ;
                 IF_LEFT
                   { DUP ;
                     IF_LEFT
                       { PUSH bool False ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SOURCE ;
                         MEM ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "NotAllowed" ; FAILWITH }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } ;
                         DIP { DROP } }
                       { PUSH bool False ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SOURCE ;
                         MEM ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "NotAllowed" ; FAILWITH }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CAR } ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } ;
                         DIP { DROP } } ;
                     DIP { DROP } }
                   { DUP ;
                     IF_LEFT
                       { PUSH bool False ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SOURCE ;
                         MEM ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH string "NotAllowed" ; FAILWITH }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIP { DUP ; CAR ; SWAP ; CDR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              NIL operation ;
                              PAIR } ;
                         DIP { DROP } }
                       { DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         IF { PUSH string "Paused" ; FAILWITH }
                            { SOURCE ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CAR ;
                              CAR ;
                              COMPARE ;
                              NEQ ;
                              IF { SOURCE ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   CAR ;
                                   CAR ;
                                   PAIR ;
                                   DIG 5 ;
                                   DUP ;
                                   DUG 6 ;
                                   CAR ;
                                   CAR ;
                                   CAR ;
                                   CDR ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   GET ;
                                   IF_NONE
                                     { PUSH string "NotEnoughAllowance" ; FAILWITH }
                                     { DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       CDR ;
                                       DIG 1 ;
                                       DUP ;
                                       DUG 2 ;
                                       COMPARE ;
                                       LT ;
                                       IF { PUSH string "NotEnoughAllowance" ; FAILWITH }
                                          { DIG 6 ;
                                            DUP ;
                                            DUG 7 ;
                                            DIG 7 ;
                                            DUP ;
                                            DUG 8 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            CDR ;
                                            DIG 3 ;
                                            DUP ;
                                            DUG 4 ;
                                            SUB ;
                                            ABS ;
                                            SOME ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            UPDATE ;
                                            DIP { DUP ;
                                                  CDR ;
                                                  SWAP ;
                                                  CAR ;
                                                  DUP ;
                                                  CDR ;
                                                  SWAP ;
                                                  CAR ;
                                                  DUP ;
                                                  CDR ;
                                                  SWAP ;
                                                  CAR ;
                                                  CAR } ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR } ;
                                       DIP { DROP } } ;
                                   DIP { DROP } }
                                 { DIG 4 ; DUP ; DUG 5 } ;
                              DUP ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CAR ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CDR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              PAIR ;
                              PAIR ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              SWAP ;
                              EXEC ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              CONTRACT %validateRules
                                (pair (pair (pair (pair %accounts
                                                     (pair (pair (pair (option %accreditation nat) (string %domicile))
                                                                 (pair (bool %frozen) (address %parent)))
                                                           (nat %role))
                                                     (pair (pair (pair (option %accreditation nat) (string %domicile))
                                                                 (pair (bool %frozen) (address %parent)))
                                                           (nat %role)))
                                                  (pair %addresses address address))
                                            (pair (pair %balances nat nat) (bool %issuance)))
                                      (pair (address %sender) (pair %values nat nat))) ;
                              IF_NONE { PUSH string "InvalidRules" ; FAILWITH } { DUP ; DIP { DROP } } ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CDR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CDR ;
                              PAIR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              SOURCE ;
                              COMPARE ;
                              EQ ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CDR ;
                              CAR ;
                              CDR ;
                              SOURCE ;
                              COMPARE ;
                              EQ ;
                              AND ;
                              PAIR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CAR ;
                              CDR ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              DIP { DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    CDR } ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              CDR ;
                              PAIR ;
                              DUP ;
                              CAR ;
                              CONTRACT %validateAccounts
                                (pair (pair (pair (pair %addresses address address) (pair %balances nat nat))
                                            (pair (bool %issuance) (pair %values nat nat)))
                                      (contract %callback
                                         (pair (pair (pair (pair %accounts
                                                              (pair (pair (pair (option %accreditation nat) (string %domicile))
                                                                          (pair (bool %frozen) (address %parent)))
                                                                    (nat %role))
                                                              (pair (pair (pair (option %accreditation nat) (string %domicile))
                                                                          (pair (bool %frozen) (address %parent)))
                                                                    (nat %role)))
                                                           (pair %addresses address address))
                                                     (pair (pair %balances nat nat) (bool %issuance)))
                                               (pair (address %sender) (pair %values nat nat))))) ;
                              IF_NONE
                                { PUSH string "InvalidRegistry" ; FAILWITH }
                                { DUP ;
                                  PUSH mutez 0 ;
                                  DIG 3 ;
                                  DUP ;
                                  DUG 4 ;
                                  CDR ;
                                  TRANSFER_TOKENS ;
                                  DIP { DROP } } ;
                              DIP { DROP } ;
                              CONS ;
                              PAIR ;
                              DIP { DROP 3 } } ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP } }
               { PUSH bool False ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SOURCE ;
                 MEM ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "NotAllowed" ; FAILWITH }
                    { DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      PAIR ;
                      PAIR ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      SWAP ;
                      EXEC ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      NIL operation ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      CDR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      CONTRACT %validateAccount address ;
                      IF_NONE
                        { PUSH string "InvalidRegistry" ; FAILWITH }
                        { DUP ;
                          PUSH mutez 0 ;
                          DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          TRANSFER_TOKENS ;
                          DIP { DROP } } ;
                      DIP { DROP } ;
                      CONS ;
                      PAIR ;
                      DIP { DROP } } ;
                 DIP { DROP } } ;
             DIP { DROP } } ;
         DIP { DROP 4 } } }