{ parameter (or (unit %joinGame) (list %payoutToWinners address)) ;
  storage
    (pair (pair (pair (mutez %maxBalance) (address %owner)) (mutez %price)) (nat %value)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { { SWAP ;
               DUP ;
               DUG 2 ;
               CAR ;
               CDR ;
               AMOUNT ;
               COMPARE ;
               EQ ;
               IF { {} }
                  { { PUSH string "WrongCondition: sp.amount == self.data.price" ; FAILWITH } } ;
               DROP ;
               NIL operation } }
           { { SENDER ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CAR ;
               CAR ;
               CDR ;
               COMPARE ;
               EQ ;
               IF { {} }
                  { { PUSH string "WrongCondition: self.data.owner == sp.sender" ; FAILWITH } } ;
               DUP ;
               ITER { DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      PUSH nat 1 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      CDR ;
                      ADD ;
                      SWAP ;
                      PAIR ;
                      DUG 3 ;
                      DROP ;
                      SWAP ;
                      DROP } ;
               PUSH nat 0 ;
               DIG 2 ;
               DUP ;
               DUG 3 ;
               CDR ;
               COMPARE ;
               GT ;
               IF { {} }
                  { { PUSH string "WrongCondition: self.data.value > 0" ; FAILWITH } } ;
               SWAP ;
               DUP ;
               DUG 2 ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               DUP ;
               CDR ;
               SWAP ;
               CAR ;
               CDR ;
               BALANCE ;
               PAIR ;
               PAIR ;
               PAIR ;
               DUG 2 ;
               SWAP ;
               DROP ;
               DUP ;
               NIL operation ;
               SWAP ;
               ITER { SWAP ;
                      DUP ;
                      DUG 2 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CONTRACT unit ;
                      IF_NONE { { PUSH unit Unit ; FAILWITH } } { {} } ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      CDR ;
                      DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      PUSH nat 1 ;
                      MUL ;
                      EDIV ;
                      IF_NONE { { PUSH string "split_tokens" ; FAILWITH } } {} ;
                      CAR ;
                      PUSH unit Unit ;
                      TRANSFER_TOKENS ;
                      CONS ;
                      DUG 2 ;
                      DROP ;
                      DROP } ;
               SWAP ;
               DROP } } ;
         PAIR } }