{ parameter
    (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))
        (or (pair %getBalance (address %owner) (contract nat))
            (or (pair %getTotalSupply unit (contract nat))
                (or (pair %transfer (address %from) (pair (address %to) (nat %value)))
                    (pair %approve (address %spender) (nat %value)))))) ;
  storage
    (pair (nat %onetoken)
          (pair (big_map %allowance (pair address address) nat)
                (pair (big_map %ledger address nat) (big_map %metadata string bytes)))) ;
  code { NIL operation ;
         DIG 1 ;
         { { DUP ; CAR ; DIP { CDR } } } ;
         DIP { { { DUP ; CAR ; DIP { CDR } } } ;
               SWAP ;
               { { DUP ; CAR ; DIP { CDR } } } ;
               SWAP ;
               { { DUP ; CAR ; DIP { CDR } } } ;
               SWAP } ;
         IF_LEFT
           { { { DUP ; CAR ; DIP { CDR } } } ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             SWAP ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             PUSH mutez 0 ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
             TRANSFER_TOKENS ;
             CONS ;
             DIP { DIG 7 ; DROP } ;
             DUG 7 ;
             DROP 3 ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             DIG 1 ;
             PAIR }
           { IF_LEFT
               { { { DUP ; CAR ; DIP { CDR } } } ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PUSH mutez 0 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 GET ;
                 IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 DIP { DIG 6 ; DROP } ;
                 DUG 6 ;
                 DROP 2 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DIG 1 ;
                 PAIR }
               { IF_LEFT
                   { { { DUP ; CAR ; DIP { CDR } } } ;
                     DROP ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     DIG 1 ;
                     DUP ;
                     DUG 2 ;
                     PUSH mutez 0 ;
                     PUSH nat 1000000000000000000 ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     DIP { DIG 5 ; DROP } ;
                     DUG 5 ;
                     DROP ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     DIG 1 ;
                     PAIR }
                   { IF_LEFT
                       { { { DUP ; CAR ; DIP { CDR } } } ;
                         SWAP ;
                         { { DUP ; CAR ; DIP { CDR } } } ;
                         SWAP ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         GET ;
                         IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                         COMPARE ;
                         GE ;
                         NOT ;
                         IF { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              SENDER ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              PAIR ;
                              GET ;
                              IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              COMPARE ;
                              LT ;
                              IF { DUP ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   PAIR ;
                                   PUSH string "NotEnoughAllowance" ;
                                   PAIR ;
                                   FAILWITH }
                                 {} ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              PUSH nat 0 ;
                              SOME ;
                              SENDER ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              PAIR ;
                              UPDATE ;
                              DIP { DIG 6 ; DROP } ;
                              DUG 6 ;
                              DROP }
                            {} ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         GET ;
                         IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         PUSH int 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         INT ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         SUB ;
                         COMPARE ;
                         GE ;
                         IF { DIG 2 ; DUP ; DUG 3 ; INT ; DIG 2 ; DUP ; DUG 3 ; SUB ; ABS }
                            { PUSH string "AssignNat" ; FAILWITH } ;
                         SOME ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         UPDATE ;
                         DIP { DIG 5 ; DROP } ;
                         DUG 5 ;
                         DROP ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         MEM ;
                         IF { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              GET ;
                              IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              ADD ;
                              SOME ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              UPDATE ;
                              DIP { DIG 5 ; DROP } ;
                              DUG 5 ;
                              DROP }
                            { DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              MEM ;
                              IF { PUSH string "KeyAlreadyExists" ; FAILWITH }
                                 { DIG 4 ;
                                   DUP ;
                                   DUG 5 ;
                                   DIG 1 ;
                                   DUP ;
                                   DUG 2 ;
                                   PUSH nat 0 ;
                                   ADD ;
                                   SOME ;
                                   DIG 3 ;
                                   DUP ;
                                   DUG 4 ;
                                   UPDATE ;
                                   DIP { DIG 4 ; DROP } ;
                                   DUG 4 } } ;
                         DROP 3 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR }
                       { { { DUP ; CAR ; DIP { CDR } } } ;
                         SWAP ;
                         DUP ;
                         DIG 4 ;
                         DUP ;
                         DUG 5 ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                         COMPARE ;
                         GE ;
                         NOT ;
                         IF { PUSH string "NotEnoughBalance" ; FAILWITH } {} ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         SENDER ;
                         PAIR ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 1 ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF { DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              DIG 1 ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH string "GetNoneValue" ; FAILWITH } {} ;
                              PUSH nat 0 ;
                              DIG 3 ;
                              DUP ;
                              DUG 4 ;
                              COMPARE ;
                              GT ;
                              PUSH nat 0 ;
                              DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              COMPARE ;
                              GT ;
                              AND ;
                              IF { DUP ; PUSH string "UnsafeAllowanceChange" ; PAIR ; FAILWITH } {} ;
                              DROP }
                            {} ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         SOME ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         UPDATE ;
                         DIP { DIG 5 ; DROP } ;
                         DUG 5 ;
                         DROP 3 ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DIG 1 ;
                         PAIR } } } } } }