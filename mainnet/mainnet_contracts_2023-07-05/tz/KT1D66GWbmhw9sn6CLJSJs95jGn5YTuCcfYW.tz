{ parameter (or (unit %bid) (or (unit %cancel_auction) (unit %resolve_auction))) ;
  storage
    (pair (pair (pair (nat %asset_id) (mutez %current_bid))
                (bool %ended)
                (bool %first_bid_placed)
                (address %highest_bidder))
          (pair (address %master_auction_contract) (nat %min_increase) (address %owner))
          (int %round_time)
          (timestamp %start_time)
          (bool %started)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DROP ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             IF {} { PUSH string "WrongCondition: self.data.started" ; FAILWITH } ;
             DUP ;
             CAR ;
             CDR ;
             CAR ;
             IF { PUSH string "WrongCondition: ~ self.data.ended" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             CAR ;
             CDR ;
             CDR ;
             SOURCE ;
             COMPARE ;
             EQ ;
             IF { PUSH string "bidder matches NFT owner" ; FAILWITH } {} ;
             DUP ;
             CAR ;
             CDR ;
             CDR ;
             CDR ;
             SOURCE ;
             COMPARE ;
             EQ ;
             IF { PUSH string "bidder matches highest bidder of current round" ; FAILWITH }
                {} ;
             DUP ;
             CDR ;
             CAR ;
             CDR ;
             CAR ;
             PUSH mutez 1 ;
             MUL ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             AMOUNT ;
             SUB ;
             COMPARE ;
             GE ;
             IF {}
                { PUSH string
                       "WrongCondition: (sp.amount - self.data.current_bid) >= sp.mutez(self.data.min_increase)" ;
                  FAILWITH } ;
             DUP ;
             CDR ;
             CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {}
                { PUSH string "WrongCondition: sp.sender == self.data.master_auction_contract" ;
                  FAILWITH } ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             ADD ;
             NOW ;
             COMPARE ;
             LT ;
             IF {} { PUSH string "auction finished" ; FAILWITH } ;
             DUP ;
             CAR ;
             CDR ;
             CDR ;
             CAR ;
             IF { DUP ;
                  CAR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CONTRACT unit ;
                  IF_NONE { PUSH int 1098 ; FAILWITH } {} ;
                  NIL operation ;
                  SWAP ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  UNIT ;
                  TRANSFER_TOKENS ;
                  CONS }
                { DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  CDR ;
                  PUSH bool True ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  NIL operation } ;
             SWAP ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             CAR ;
             AMOUNT ;
             SWAP ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             CAR ;
             SOURCE ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             SWAP }
           { IF_LEFT
               { DROP ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 IF {} { PUSH string "WrongCondition: self.data.started" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 IF { PUSH string "WrongCondition: ~ self.data.ended" ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.master_auction_contract" ;
                      FAILWITH } ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SOURCE ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "only nft owner can cancel auction" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 IF { DUP ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      ADD ;
                      NOW ;
                      COMPARE ;
                      LT ;
                      IF {} { PUSH string "round has finished with bids placed" ; FAILWITH } ;
                      DUP ;
                      CAR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CONTRACT unit ;
                      IF_NONE { PUSH int 1157 ; FAILWITH } {} ;
                      NIL operation ;
                      SWAP ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      UNIT ;
                      TRANSFER_TOKENS ;
                      CONS }
                    { NIL operation } ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 CAR ;
                 PUSH mutez 0 ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 CAR ;
                 SENDER ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 CDR ;
                 PUSH bool True ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP }
               { DROP ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 IF {} { PUSH string "WrongCondition: self.data.started" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.first_bid_placed" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 IF { PUSH string "WrongCondition: ~ self.data.ended" ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.master_auction_contract" ;
                      FAILWITH } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 SOURCE ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH bool True }
                    { DUP ; CDR ; CAR ; CDR ; CDR ; SOURCE ; COMPARE ; EQ } ;
                 IF {}
                    { PUSH string "only nft owner or highest_bidder can resolve auction" ;
                      FAILWITH } ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 SOURCE ;
                 COMPARE ;
                 EQ ;
                 IF { DUP ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      ADD ;
                      NOW ;
                      COMPARE ;
                      GT ;
                      IF {}
                         { PUSH string "highest bidder can only resolve after round finishes" ;
                           FAILWITH } }
                    {} ;
                 DUP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 CAR ;
                 DIG 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CONTRACT %end_auction (pair (address %highest_bidder) (nat %token_id)) ;
                 IF_NONE { PUSH int 1133 ; FAILWITH } {} ;
                 NIL operation ;
                 SWAP ;
                 DIG 2 ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 5 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PAIR %highest_bidder %token_id ;
                 TRANSFER_TOKENS ;
                 CONS ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 CDR ;
                 PUSH bool True ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SWAP } } ;
         PAIR } }