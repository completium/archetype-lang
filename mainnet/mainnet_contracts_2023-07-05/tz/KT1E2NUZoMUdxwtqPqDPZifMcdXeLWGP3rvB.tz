{ parameter
    (or (pair %burn (address %address) (pair (string %symbol) (nat %value)))
        (or (pair %mint (address %address) (pair (string %symbol) (nat %value)))
            (address %setAdministrator))) ;
  storage
    (pair (address %administrator)
          (big_map %balances (pair (address %address) (string %symbol)) nat)) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF {}
                { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                  FAILWITH } ;
             DUP ;
             CDR ;
             CAR ;
             PUSH string "" ;
             COMPARE ;
             NEQ ;
             IF {} { PUSH string "WrongCondition: params.symbol != ''" ; FAILWITH } ;
             DUP ;
             CDR ;
             CDR ;
             PUSH nat 0 ;
             COMPARE ;
             LT ;
             IF {} { PUSH string "WrongCondition: params.value > 0" ; FAILWITH } ;
             DUP ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             DIG 2 ;
             DUP ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 4 ;
             CAR ;
             PAIR %address %symbol ;
             GET ;
             IF_NONE { PUSH int 56 ; FAILWITH } {} ;
             COMPARE ;
             GE ;
             IF {}
                { PUSH string
                       "WrongCondition: self.data.balances[sp.record(address = params.address, symbol = params.symbol)] >= params.value" ;
                  FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIG 2 ;
             DUP ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 4 ;
             CAR ;
             PAIR %address %symbol ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             CDR ;
             DIG 5 ;
             CDR ;
             DIG 5 ;
             DUP ;
             CDR ;
             CAR ;
             SWAP ;
             CAR ;
             PAIR %address %symbol ;
             GET ;
             IF_NONE { PUSH int 59 ; FAILWITH } {} ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH int 59 ; FAILWITH } {} ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                      FAILWITH } ;
                 DUP ;
                 CDR ;
                 CAR ;
                 PUSH string "" ;
                 COMPARE ;
                 NEQ ;
                 IF {} { PUSH string "WrongCondition: params.symbol != ''" ; FAILWITH } ;
                 DUP ;
                 CDR ;
                 CDR ;
                 PUSH nat 0 ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "WrongCondition: params.value > 0" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 PAIR %address %symbol ;
                 MEM ;
                 IF {}
                    { SWAP ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      CDR ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      PAIR %address %symbol ;
                      PUSH (option nat) (Some 0) ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      PAIR ;
                      SWAP } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 PAIR %address %symbol ;
                 MEM ;
                 IF { SWAP ;
                      DUP ;
                      DUG 2 ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      CDR ;
                      CAR ;
                      SWAP ;
                      DUP ;
                      DUG 4 ;
                      CAR ;
                      PAIR %address %symbol ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CDR ;
                      DIG 5 ;
                      CDR ;
                      DIG 5 ;
                      DUP ;
                      CDR ;
                      CAR ;
                      SWAP ;
                      CAR ;
                      PAIR %address %symbol ;
                      GET ;
                      IF_NONE { PUSH int 34 ; FAILWITH } {} ;
                      ADD ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      SWAP ;
                      PAIR }
                    { DROP } }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                      FAILWITH } ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 PAIR } } ;
         NIL operation ;
         PAIR } }