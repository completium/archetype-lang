{ parameter
    (or (or (or (pair %approve (address %spender) (nat %value))
                (pair %getAdministrator unit (contract address)))
            (or (unit %getAllBalance)
                (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat))
                    (pair %getBalance address (contract nat)))))
        (or (or (pair %getTotalSupply unit (contract nat))
                (or (pair %mint (address %address) (nat %value))
                    (pair %provableTransfer
                       (pair (address %from_) (pair (list %msg string) (key %publicKey)))
                       (pair (signature %signature) (pair (address %to_) (nat %value))))))
            (or (address %setAdministrator)
                (or (bool %setPause) (pair %transfer (address %from) (pair (address %to) (nat %value))))))) ;
  storage
    (pair (pair (pair (address %administrator)
                      (map %balances
                         address
                         (pair (map %approvals address nat) (pair (nat %balance) (set %used bytes)))))
                (pair (int %decimals) (string %name)))
          (pair (pair (bool %paused) (string %symbol))
                (pair (nat %totalSupply) (address %whitelist)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     IF { PUSH string "WrongCondition: ~ self.data.paused" ; FAILWITH } {} ;
                     PUSH nat 0 ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     GET ;
                     IF_NONE { PUSH int 516 ; FAILWITH } {} ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH nat 0 } {} ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH bool True } { DUP ; CDR ; PUSH nat 0 ; COMPARE ; EQ } ;
                     IF {} { PUSH string "UnsafeAllowanceChange" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     SENDER ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 518 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DIG 7 ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS } }
               { IF_LEFT
                   { NIL (pair (nat %balance) (address %holder)) ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     ITER { CAR ;
                            PUSH nat 0 ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            CAR ;
                            CAR ;
                            CDR ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            GET ;
                            IF_NONE { PUSH int 556 ; FAILWITH } {} ;
                            CDR ;
                            CAR ;
                            COMPARE ;
                            GT ;
                            IF { DIG 3 ;
                                 DUP ;
                                 DUG 4 ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 SWAP ;
                                 DUP ;
                                 DUG 2 ;
                                 GET ;
                                 IF_NONE { PUSH int 557 ; FAILWITH } {} ;
                                 CDR ;
                                 CAR ;
                                 PAIR %balance %holder ;
                                 CONS }
                               { DROP } } ;
                     SWAP ;
                     DROP ;
                     NIL operation ;
                     SENDER ;
                     CONTRACT %registerHolders
                       (pair (list %holders (pair (nat %balance) (address %holder))) (nat %totalSupply)) ;
                     IF_NONE { PUSH int 560 ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 4 ;
                     PAIR %holders %totalSupply ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 538 ; FAILWITH } {} ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 538 ; FAILWITH } {} ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 534 ; FAILWITH } {} ;
                         CDR ;
                         CAR ;
                         NIL operation ;
                         DIG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         TRANSFER_TOKENS ;
                         CONS } } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     NIL operation ;
                     DIG 2 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 3 ;
                     TRANSFER_TOKENS ;
                     CONS }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CONTRACT %assertTransfer (pair (address %from_) (address %to_)) ;
                         IF_NONE { PUSH int 475 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         SENDER ;
                         PAIR %from_ %to_ ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         MEM ;
                         IF {}
                            { DIG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              PUSH (option (pair (map %approvals address nat) (pair (nat %balance) (set %used bytes))))
                                   (Some (Pair {} 0 {})) ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUG 2 } ;
                         DIG 2 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 569 ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         CDR ;
                         ADD ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DIG 5 ;
                         CDR ;
                         ADD ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "only admin may update" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 465 ; FAILWITH } {} ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CONCAT ;
                         PACK ;
                         SHA256 ;
                         MEM ;
                         IF { PUSH string "used signature" ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CONCAT ;
                         PACK ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CHECK_SIGNATURE ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: sp.check_signature(params.publicKey, params.signature, sp.pack(sp.concat(params.msg)))" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 5 ;
                         DUP ;
                         DUG 6 ;
                         CAR ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 470 ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         PUSH bool True ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CONCAT ;
                         PACK ;
                         SHA256 ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CONTRACT %assertTransfer (pair (address %from_) (address %to_)) ;
                         IF_NONE { PUSH int 475 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         CAR ;
                         PAIR %from_ %to_ ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              IF { PUSH bool False }
                                 { SENDER ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CAR ;
                                   CAR ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH bool True }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        CDR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 482 ; FAILWITH } {} ;
                                        CAR ;
                                        SENDER ;
                                        GET ;
                                        IF_NONE { PUSH int 482 ; FAILWITH } {} ;
                                        COMPARE ;
                                        GE } } } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (sp.sender == self.data.administrator) | ((~ self.data.paused) & ((params.from_ == sp.sender) | (self.data.balances[params.from_].approvals[sp.sender] >= params.value)))" ;
                              FAILWITH } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         MEM ;
                         IF {}
                            { DIG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PUSH (option (pair (map %approvals address nat) (pair (nat %balance) (set %used bytes))))
                                   (Some (Pair {} 0 {})) ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUG 2 } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 487 ; FAILWITH } {} ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         GE ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: self.data.balances[params.from_].balance >= params.value" ;
                              FAILWITH } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 488 ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 10 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         CAR ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 488 ; FAILWITH } {} ;
                         CDR ;
                         CAR ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 488 ; FAILWITH } {} ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 489 ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         ADD ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         SENDER ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         NEQ ;
                         IF { SENDER ; DIG 3 ; DUP ; DUG 4 ; CAR ; CAR ; CAR ; COMPARE ; NEQ }
                            { PUSH bool False } ;
                         IF { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              CAR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 491 ; FAILWITH } {} ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              SENDER ;
                              DIG 9 ;
                              DUP ;
                              DUG 10 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              DIG 11 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 11 ;
                              CAR ;
                              CAR ;
                              GET ;
                              IF_NONE { PUSH int 491 ; FAILWITH } {} ;
                              CAR ;
                              SENDER ;
                              GET ;
                              IF_NONE { PUSH int 491 ; FAILWITH } {} ;
                              SUB ;
                              ISNAT ;
                              IF_NONE { PUSH int 491 ; FAILWITH } {} ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            { SWAP ; DROP } } } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {}
                        { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     NIL operation }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "WrongCondition: sp.sender == self.data.administrator" ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         NIL operation }
                       { NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CONTRACT %assertTransfer (pair (address %from_) (address %to_)) ;
                         IF_NONE { PUSH int 475 ; FAILWITH } {} ;
                         PUSH mutez 0 ;
                         DIG 3 ;
                         DUP ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 5 ;
                         CAR ;
                         PAIR %from_ %to_ ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { PUSH bool True }
                            { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              CDR ;
                              CAR ;
                              CAR ;
                              IF { PUSH bool False }
                                 { SENDER ;
                                   DIG 2 ;
                                   DUP ;
                                   DUG 3 ;
                                   CAR ;
                                   COMPARE ;
                                   EQ ;
                                   IF { PUSH bool True }
                                      { SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        CDR ;
                                        CDR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        DIG 3 ;
                                        DUP ;
                                        DUG 4 ;
                                        CAR ;
                                        GET ;
                                        IF_NONE { PUSH int 482 ; FAILWITH } {} ;
                                        CAR ;
                                        SENDER ;
                                        GET ;
                                        IF_NONE { PUSH int 482 ; FAILWITH } {} ;
                                        COMPARE ;
                                        GE } } } ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: (sp.sender == self.data.administrator) | ((~ self.data.paused) & ((params.from_ == sp.sender) | (self.data.balances[params.from_].approvals[sp.sender] >= params.value)))" ;
                              FAILWITH } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CAR ;
                         MEM ;
                         IF {}
                            { DIG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CAR ;
                              PUSH (option (pair (map %approvals address nat) (pair (nat %balance) (set %used bytes))))
                                   (Some (Pair {} 0 {})) ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DUG 2 } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 487 ; FAILWITH } {} ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         GE ;
                         IF {}
                            { PUSH string
                                   "WrongCondition: self.data.balances[params.from_].balance >= params.value" ;
                              FAILWITH } ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 488 ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         CDR ;
                         CDR ;
                         DIG 10 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 10 ;
                         DUP ;
                         DUG 11 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 488 ; FAILWITH } {} ;
                         CDR ;
                         CAR ;
                         SUB ;
                         ISNAT ;
                         IF_NONE { PUSH int 488 ; FAILWITH } {} ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         CDR ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 489 ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DIG 9 ;
                         DUP ;
                         DUG 10 ;
                         CDR ;
                         CDR ;
                         ADD ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUG 2 ;
                         SENDER ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         COMPARE ;
                         NEQ ;
                         IF { SENDER ; DIG 3 ; DUP ; DUG 4 ; CAR ; CAR ; CAR ; COMPARE ; NEQ }
                            { PUSH bool False } ;
                         IF { DIG 2 ;
                              DUP ;
                              DUG 3 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              DIG 6 ;
                              DUP ;
                              DUG 7 ;
                              CAR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 491 ; FAILWITH } {} ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              SENDER ;
                              DIG 9 ;
                              DUP ;
                              DUG 10 ;
                              CDR ;
                              CDR ;
                              DIG 11 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              DIG 11 ;
                              CAR ;
                              GET ;
                              IF_NONE { PUSH int 491 ; FAILWITH } {} ;
                              CAR ;
                              SENDER ;
                              GET ;
                              IF_NONE { PUSH int 491 ; FAILWITH } {} ;
                              SUB ;
                              ISNAT ;
                              IF_NONE { PUSH int 491 ; FAILWITH } {} ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            { SWAP ; DROP } } } } } ;
         PAIR } }