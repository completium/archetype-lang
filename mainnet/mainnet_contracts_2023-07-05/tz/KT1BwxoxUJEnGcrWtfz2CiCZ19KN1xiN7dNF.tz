{ parameter
    (or (or (or (pair %addDeposit (nat %claim) (nat %puzzle_id)) (address %approveContract))
            (or (pair %grantReward (pair (address %addr) (nat %claim)) (nat %puzzle_id))
                (address %rejectContract)))
        (or (address %setNft) (address %setOracle))) ;
  storage
    (pair (pair (pair (address %contractNft) (address %contractOracle))
                (pair (address %contractOwner) (map %deposits nat (map nat mutez))))
          (set %trustedContracts address)) ;
  code { NIL operation ;
         SWAP ;
         DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     GET ;
                     IF_NONE { EMPTY_MAP nat mutez } {} ;
                     DUP ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     GET ;
                     IF_NONE { AMOUNT } { AMOUNT ; ADD } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DIG 3 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIG 3 ;
                     CDR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SOURCE ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOPERM" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     PUSH bool True ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } }
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOPERM" ; FAILWITH } {} ;
                     NIL operation ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     GET ;
                     IF_NONE { EMPTY_MAP nat mutez } {} ;
                     DUP ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH mutez 0 } {} ;
                     PUSH mutez 0 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GT ;
                     IF { DIG 3 ;
                          DUP ;
                          DUG 4 ;
                          CAR ;
                          CAR ;
                          CONTRACT unit ;
                          IF_NONE { PUSH string "bad address for get_contract" ; FAILWITH } {} ;
                          SWAP ;
                          UNIT ;
                          TRANSFER_TOKENS ;
                          SWAP ;
                          PUSH mutez 0 ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CAR ;
                          CDR ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          DIG 4 ;
                          DUP ;
                          DUG 5 ;
                          CDR ;
                          DIG 5 ;
                          DUP ;
                          DUG 6 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 2 ;
                          DUP ;
                          DUG 3 ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          CDR ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          DIG 6 ;
                          DUP ;
                          DUG 7 ;
                          CAR ;
                          CDR ;
                          CAR ;
                          PAIR ;
                          DIG 6 ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          SWAP ;
                          DIG 3 ;
                          DIG 3 ;
                          CONS ;
                          PAIR ;
                          PAIR }
                        { DROP ; DIG 3 ; SWAP ; DIG 2 ; PAIR ; PAIR } ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     CONTRACT %grantNft (pair (pair (address %addr) (nat %claim)) (nat %puzzleId)) ;
                     IF_NONE { PUSH string "bad address for get_entrypoint" ; FAILWITH } {} ;
                     PUSH mutez 0 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     DIG 5 ;
                     DUP ;
                     DUG 6 ;
                     CAR ;
                     CDR ;
                     DIG 6 ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     DIG 2 ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     SOURCE ;
                     COMPARE ;
                     NEQ ;
                     IF { PUSH string "NOPERM" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     PUSH bool False ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     PAIR } } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SOURCE ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "NOPERM" ; FAILWITH } {} ;
                 PUSH bool False ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 MEM ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "NOPERM" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SOURCE ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "NOPERM" ; FAILWITH } {} ;
                 PUSH bool False ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 MEM ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "NOPERM" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 PAIR } } } }