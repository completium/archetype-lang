{ parameter
    (or (or (or (pair %assertTransfer (address %from_) (address %to_))
                (list %assertTransfers (pair (address %from_) (address %to_))))
            (or (pair %changeGrade (address %confirmedAddress) (nat %newGrade))
                (pair %changeStatus (bool %activate) (address %address))))
        (or (or (address %deleteConfirmedAddress) (address %isConfiremdAddress))
            (or (pair %setConfirmedAddress
                   (signature %migration_sig)
                   (pair (address %new_user) (key %new_user_public)))
                (address %setConfirmedContract)))) ;
  storage
    (pair (address %admin)
          (big_map %confirmedAddress
             address
             (pair (bool %confirmed) (pair (nat %grade) (signature %migration_sig))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     IF_NONE { PUSH int 36 ; FAILWITH } {} ;
                     CAR ;
                     IF {} { PUSH string "This address is not in whitelist" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 36 ; FAILWITH } {} ;
                     CAR ;
                     IF {} { PUSH string "This address is not in whitelist" ; FAILWITH } }
                   { DUP ;
                     ITER { DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            CAR ;
                            GET ;
                            IF_NONE { PUSH int 36 ; FAILWITH } {} ;
                            CAR ;
                            IF {} { PUSH string "This address is not in whitelist" ; FAILWITH } ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            CDR ;
                            SWAP ;
                            CDR ;
                            GET ;
                            IF_NONE { PUSH int 36 ; FAILWITH } {} ;
                            CAR ;
                            IF {} { PUSH string "This address is not in whitelist" ; FAILWITH } } ;
                     DROP } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "only admin may update" ; FAILWITH } ;
                     DUP ;
                     CDR ;
                     PUSH nat 3 ;
                     SWAP ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH string "out of grade" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 86 ; FAILWITH } {} ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     CDR ;
                     DIG 5 ;
                     CDR ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "only admin may update" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 43 ; FAILWITH } {} ;
                     CDR ;
                     DIG 4 ;
                     CAR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR } } }
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "only admin may update" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     NONE (pair (bool %confirmed) (pair (nat %grade) (signature %migration_sig))) ;
                     DIG 3 ;
                     UPDATE ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     GET ;
                     IF_NONE { PUSH int 36 ; FAILWITH } {} ;
                     CAR ;
                     IF {} { PUSH string "This address is not in whitelist" ; FAILWITH } } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "only admin may update" ; FAILWITH } ;
                     PUSH bytes 0x4920616772656520746f206d6967726174696f6e ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CHECK_SIGNATURE ;
                     IF {}
                        { PUSH string
                               "WrongCondition: sp.check_signature(params.new_user_public, params.migration_sig, sp.bytes('0x4920616772656520746f206d6967726174696f6e'))" ;
                          FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     MEM ;
                     IF { PUSH string "already registered" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DIG 2 ;
                     DUP ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     CAR ;
                     PUSH nat 1 ;
                     PAIR %grade %migration_sig ;
                     PUSH bool True ;
                     PAIR %confirmed ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "only admin may update" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     MEM ;
                     IF { PUSH string "already registered" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DIG 2 ;
                     PUSH (option (pair (bool %confirmed) (pair (nat %grade) (signature %migration_sig))))
                          (Some (Pair True
                                      1
                                      "edsigtzwHreWjuq5ELiYgHs9vADFwdGavAFRDwpZi89gezQHH1RcnnDoDg2fCewqyS1AQwkPLXRxkdhw44ZxvnHh6H2cA9R3ouJ")) ;
                     SWAP ;
                     UPDATE ;
                     SWAP ;
                     PAIR } } } ;
         NIL operation ;
         PAIR } }