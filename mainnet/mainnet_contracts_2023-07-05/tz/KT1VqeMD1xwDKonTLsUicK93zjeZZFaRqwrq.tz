{ parameter
    (or (pair %originate_sell_order
           (pair (mutez %price_per_tk) (option %timeframe int))
           (pair (nat %tk_amount) (nat %tk_id)))
        (pair %swap (address %destination) (nat %tk_amount))) ;
  storage
    (pair (address %fa2)
          (big_map %sell_orders
             address
             (pair (pair (mutez %fee) (address %issuer))
                   (pair (timestamp %timeframe) (pair (nat %tk_amount) (nat %tk_id)))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { DUP ;
             { CAR ; CDR } ;
             PUSH mutez 10000 ;
             SWAP ;
             { IF_NONE { PUSH int 82 ; FAILWITH } {} } ;
             ISNAT ;
             { IF_NONE { PUSH int 82 ; FAILWITH } {} } ;
             MUL ;
             AMOUNT ;
             COMPARE ;
             GE ;
             IF {}
                { PUSH string
                       "WrongCondition: sp.amount >= sp.split_tokens(sp.mutez(10000), sp.as_nat(params.timeframe.open_some()), 1)" ;
                  FAILWITH } ;
             DUP ;
             { CDR ; CDR } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             { CDR ; CAR } ;
             PAIR %tk_amount %tk_id ;
             NOW ;
             PUSH int 60 ;
             DUP ;
             PUSH int 24 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             { CAR ; CDR } ;
             { IF_NONE { PUSH int 82 ; FAILWITH } {} } ;
             MUL ;
             MUL ;
             MUL ;
             ADD ;
             PAIR %timeframe ;
             SELF ;
             ADDRESS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             { CAR ; CAR } ;
             PAIR %price_per_tk %protocol ;
             SENDER ;
             PAIR %issuer ;
             PAIR ;
             PUSH mutez 0 ;
             NONE key_hash ;
             CREATE_CONTRACT
               { parameter unit ;
                 storage
                   (pair (pair (address %issuer) (pair (mutez %price_per_tk) (address %protocol)))
                         (pair (timestamp %timeframe) (pair (nat %tk_amount) (nat %tk_id)))) ;
                 code { CDR ;
                        DUP ;
                        { CAR ; CDR ; CAR } ;
                        AMOUNT ;
                        COMPARE ;
                        GE ;
                        IF {}
                           { PUSH string "WrongCondition: sp.amount >= self.data.price_per_tk" ;
                             FAILWITH } ;
                        DUP ;
                        { CDR ; CAR } ;
                        NOW ;
                        COMPARE ;
                        LE ;
                        IF {}
                           { PUSH string "WrongCondition: sp.now <= self.data.timeframe" ; FAILWITH } ;
                        DUP ;
                        { CAR ; CDR ; CDR } ;
                        CONTRACT %swap (pair (address %destination) (nat %tk_amount)) ;
                        NIL operation ;
                        SWAP ;
                        { IF_NONE { PUSH int 65 ; FAILWITH } {} } ;
                        PUSH mutez 0 ;
                        PUSH mutez 1000000 ;
                        DUP ;
                        DIG 5 ;
                        DUP ;
                        DUG 6 ;
                        { CAR ; CDR ; CAR } ;
                        EDIV ;
                        { IF_NONE { PUSH int 59 ; FAILWITH } {} } ;
                        CAR ;
                        AMOUNT ;
                        PUSH nat 1 ;
                        MUL ;
                        EDIV ;
                        { IF_NONE { PUSH int 59 ; FAILWITH } {} } ;
                        CAR ;
                        EDIV ;
                        { IF_NONE { PUSH int 59 ; FAILWITH } {} } ;
                        CAR ;
                        SENDER ;
                        PAIR %destination %tk_amount ;
                        TRANSFER_TOKENS ;
                        CONS ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        { CAR ; CAR } ;
                        CONTRACT unit ;
                        { IF_NONE { PUSH int 61 ; FAILWITH } {} } ;
                        AMOUNT ;
                        UNIT ;
                        TRANSFER_TOKENS ;
                        CONS ;
                        NIL operation ;
                        SWAP ;
                        ITER { CONS } ;
                        PAIR } } ;
             PAIR ;
             DUP ;
             CAR ;
             NIL operation ;
             SWAP ;
             CONS ;
             DIG 3 ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DIG 3 ;
             CDR ;
             SOME ;
             { IF_NONE { PUSH int 86 ; FAILWITH } {} } ;
             DIG 4 ;
             DUP ;
             { CDR ; CDR } ;
             SWAP ;
             DUP ;
             DUG 6 ;
             { CDR ; CAR } ;
             PAIR %tk_amount %tk_id ;
             NOW ;
             PUSH int 60 ;
             DUP ;
             PUSH int 24 ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             { CAR ; CDR } ;
             { IF_NONE { PUSH int 82 ; FAILWITH } {} } ;
             MUL ;
             MUL ;
             MUL ;
             ADD ;
             PAIR %timeframe ;
             SENDER ;
             PUSH mutez 10000 ;
             DIG 7 ;
             { CAR ; CDR } ;
             { IF_NONE { PUSH int 82 ; FAILWITH } {} } ;
             ISNAT ;
             { IF_NONE { PUSH int 82 ; FAILWITH } {} } ;
             MUL ;
             PAIR %fee %issuer ;
             PAIR ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             SWAP }
           { SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SENDER ;
             GET ;
             { IF_NONE { PUSH int 109 ; FAILWITH } {} } ;
             { CDR ; CAR } ;
             NOW ;
             COMPARE ;
             LE ;
             IF { DUP ;
                  CDR ;
                  PUSH nat 0 ;
                  SWAP ;
                  DIG 3 ;
                  DUP ;
                  DUG 4 ;
                  CDR ;
                  SENDER ;
                  GET ;
                  { IF_NONE { PUSH int 109 ; FAILWITH } {} } ;
                  { CDR ; CDR ; CAR } ;
                  SUB ;
                  ABS ;
                  COMPARE ;
                  GE }
                { PUSH bool False } ;
             IF {}
                { PUSH string
                       "WrongCondition: (sp.now <= self.data.sell_orders[sp.sender].timeframe) & ((abs(self.data.sell_orders[sp.sender].tk_amount - params.tk_amount)) >= 0)" ;
                  FAILWITH } ;
             NIL operation ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             { IF_NONE { PUSH int 102 ; FAILWITH } {} } ;
             PUSH mutez 0 ;
             NIL (pair (address %from_)
                       (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))) ;
             NIL (pair (address %to_) (pair (nat %token_id) (nat %amount))) ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             CDR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CDR ;
             SENDER ;
             GET ;
             { IF_NONE { PUSH int 110 ; FAILWITH } {} } ;
             { CDR ; CDR ; CDR } ;
             PAIR %token_id %amount ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CAR ;
             PAIR %to_ ;
             CONS ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             CDR ;
             SENDER ;
             GET ;
             { IF_NONE { PUSH int 110 ; FAILWITH } {} } ;
             { CAR ; CDR } ;
             PAIR %from_ %txs ;
             CONS ;
             TRANSFER_TOKENS ;
             CONS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             SENDER ;
             DUP ;
             DUG 2 ;
             GET ;
             { IF_NONE { PUSH int 111 ; FAILWITH } {} } ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             SWAP ;
             { CDR ; CDR } ;
             DIG 7 ;
             CDR ;
             DIG 8 ;
             CDR ;
             SENDER ;
             GET ;
             { IF_NONE { PUSH int 111 ; FAILWITH } {} } ;
             { CDR ; CDR ; CAR } ;
             SUB ;
             ABS ;
             PAIR ;
             SWAP ;
             PAIR ;
             SWAP ;
             PAIR ;
             SOME ;
             SWAP ;
             UPDATE ;
             SWAP ;
             PAIR ;
             SWAP } ;
         PAIR } }