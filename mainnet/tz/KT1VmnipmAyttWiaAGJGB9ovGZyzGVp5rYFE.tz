{ parameter (pair (bytes %pack) (signature %signature)) ;
  storage
    (pair (pair (pair (pair (pair (pair (int %counter) (key %pk)) (pair (string %string01) (string %string02)))
                            (pair (pair (string %string03) (string %string04))
                                  (pair (string %string05) (string %string06))))
                      (pair (pair (pair (string %string07) (string %string08))
                                  (pair (string %string09) (string %string10)))
                            (pair (pair (string %string11) (string %string12))
                                  (pair (string %string13) (string %string14)))))
                (pair (pair (pair (pair (string %string15) (string %string16))
                                  (pair (string %string17) (string %string18)))
                            (pair (pair (string %string19) (string %string20))
                                  (pair (string %string21) (string %string22))))
                      (pair (pair (pair (string %string23) (string %string24))
                                  (pair (string %string25) (string %string26)))
                            (pair (pair (string %string27) (string %string28))
                                  (pair (string %string29) (string %string30))))))
          (pair (pair (pair (pair (pair (string %string31) (string %string32))
                                  (pair (string %string33) (string %string34)))
                            (pair (pair (string %string35) (string %string36))
                                  (pair (string %string37) (string %string38))))
                      (pair (pair (pair (string %string39) (string %string40))
                                  (pair (string %string41) (string %string42)))
                            (pair (pair (string %string43) (string %string44))
                                  (pair (string %string45) (string %string46)))))
                (pair (string %string47) (string %string48)))) ;
  code { NIL operation ;
         DIG 1 ;
         DUP ;
         DUG 2 ;
         CAR ;
         CAR ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         CDR ;
         PUSH bool True ;
         DIG 2 ;
         DUP ;
         DUG 3 ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CAR ;
         CDR ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         CAR ;
         CAR ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         CHECK_SIGNATURE ;
         COMPARE ;
         EQ ;
         IF { DIG 1 ;
              DUP ;
              DUG 2 ;
              UNPACK
                (pair (pair (pair (pair (pair (pair (int %counter) (key %pk)) (pair (string %string01) (string %string02)))
                                        (pair (pair (string %string03) (string %string04))
                                              (pair (string %string05) (string %string06))))
                                  (pair (pair (pair (string %string07) (string %string08))
                                              (pair (string %string09) (string %string10)))
                                        (pair (pair (string %string11) (string %string12))
                                              (pair (string %string13) (string %string14)))))
                            (pair (pair (pair (pair (string %string15) (string %string16))
                                              (pair (string %string17) (string %string18)))
                                        (pair (pair (string %string19) (string %string20))
                                              (pair (string %string21) (string %string22))))
                                  (pair (pair (pair (string %string23) (string %string24))
                                              (pair (string %string25) (string %string26)))
                                        (pair (pair (string %string27) (string %string28))
                                              (pair (string %string29) (string %string30))))))
                      (pair (pair (pair (pair (pair (string %string31) (string %string32))
                                              (pair (string %string33) (string %string34)))
                                        (pair (pair (string %string35) (string %string36))
                                              (pair (string %string37) (string %string38))))
                                  (pair (pair (pair (string %string39) (string %string40))
                                              (pair (string %string41) (string %string42)))
                                        (pair (pair (string %string43) (string %string44))
                                              (pair (string %string45) (string %string46)))))
                            (pair (string %string47) (string %string48)))) ;
              IF_NONE
                { PUSH string "no storage object" ; FAILWITH }
                { DUP ; DIP { DROP } } ;
              DIG 1 ;
              DUP ;
              DUG 2 ;
              CAR ;
              CAR ;
              CAR ;
              CAR ;
              CAR ;
              CAR ;
              DIG 1 ;
              DUP ;
              DUG 2 ;
              CAR ;
              CAR ;
              CAR ;
              CAR ;
              CAR ;
              CAR ;
              COMPARE ;
              EQ ;
              IF { DUP ;
                   PUSH int 1 ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   CAR ;
                   ADD ;
                   DIP { DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CDR } ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   PAIR ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DIG 2 ;
                   DUP ;
                   DUG 3 ;
                   DIP { DROP } ;
                   DIG 1 ;
                   DUP ;
                   DUG 2 ;
                   DIP { DROP 2 } }
                 { PUSH string "counter wrong" ; FAILWITH } ;
              DIG 2 ;
              DUP ;
              DUG 3 ;
              DIG 1 ;
              DUP ;
              DUG 2 ;
              DIP { DROP 3 } }
            { PUSH string "invalid signature" ; FAILWITH } ;
         DUP ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         PAIR ;
         DIP { DROP 5 } } }