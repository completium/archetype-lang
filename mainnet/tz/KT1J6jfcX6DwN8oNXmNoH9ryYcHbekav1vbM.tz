{ parameter
    (or (or (pair %init (pair address address) address)
            (pair %initToken (pair (pair address nat) (pair address string)) address))
        (pair %registerSymbol (pair string string) (pair nat nat))) ;
  storage
    (pair (pair (pair (address %allowable) (option %documentManager address))
                (pair (set %symbols string) (option %tokenHolders address)))
          (big_map %tokens
             string
             (pair (pair (nat %decimals) (string %name))
                   (pair (option %tokenAddress address) (nat %totalSupply))))) ;
  code { LAMBDA
           (pair (pair address string) address)
           operation
           { DUP ;
             CDR ;
             CONTRACT
               (or (or (or (pair %init_ address address) (address %notStopped))
                       (or (pair %onlyAdmin address address) (pair %onlyOwner address address)))
                   (or (pair %onlyRole (pair address address) string)
                       (pair %updateStorage
                          address
                          (pair (pair (pair (pair (list %adminRoles string) (address %owner))
                                            (pair (bool %roleApproval) (set %roleNames string)))
                                      (pair (pair (map %roleUsers
                                                     string
                                                     (pair (pair (map %addRoleInitiators address address)
                                                                 (map %removeRoleInitiators address address))
                                                           (set %users address)))
                                                  (option %startInitiator address))
                                            (pair (option %stopInitiator address) (bool %stopped))))
                                (pair (bool %transferOwnershipApproval)
                                      (map %transferOwnershipInitiator address address)))))) ;
             IF_NONE
               { PUSH string "Allowable contract not found" ; FAILWITH }
               { DUP ; DIP { DROP } } ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CDR ;
             SENDER ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             LEFT (pair address
                        (pair (pair (pair (pair (list %adminRoles string) (address %owner))
                                          (pair (bool %roleApproval) (set %roleNames string)))
                                    (pair (pair (map %roleUsers
                                                   string
                                                   (pair (pair (map %addRoleInitiators address address)
                                                               (map %removeRoleInitiators address address))
                                                         (set %users address)))
                                                (option %startInitiator address))
                                          (pair (option %stopInitiator address) (bool %stopped))))
                              (pair (bool %transferOwnershipApproval)
                                    (map %transferOwnershipInitiator address address)))) ;
             RIGHT
               (or (or (pair address address) address) (or (pair address address) (pair address address))) ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             PUSH mutez 0 ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             TRANSFER_TOKENS ;
             DUP ;
             DIP { DROP 4 } } ;
         PUSH string "Contract not found" ;
         DUP ;
         PUSH string "Already initialized" ;
         SWAP ;
         PUSH string "INDIVIDUAL_ISSUE_TOKEN_OWNER" ;
         SWAP ;
         LAMBDA
           (pair string
                 (pair (pair (pair address (option address)) (pair (set string) (option address)))
                       (big_map string (pair (pair nat string) (pair (option address) nat)))))
           (contract (or address (pair (pair (pair address nat) (pair address nat)) address)))
           { DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CAR ;
             CDR ;
             CDR ;
             IF_NONE { DIG 1 ; DUP ; DUG 2 ; FAILWITH } { DUP ; DIP { DROP } } ;
             DUP ;
             CONTRACT
               (or (address %addToken_)
                   (pair %afterTransfer (pair (pair address nat) (pair address nat)) address)) ;
             IF_NONE { DIG 2 ; DUP ; DUG 3 ; FAILWITH } { DUP ; DIP { DROP } } ;
             DUP ;
             DIP { DROP 4 } } ;
         SWAP ;
         APPLY ;
         DIG 5 ;
         DUP ;
         DUG 6 ;
         CDR ;
         DIG 6 ;
         DUP ;
         DUG 7 ;
         CAR ;
         IF_LEFT
           { DUP ;
             IF_LEFT
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "Access is denied" ; FAILWITH } { PUSH unit Unit } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 IF_NONE { PUSH unit Unit } { DIG 9 ; DUP ; DUG 10 ; FAILWITH } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 IF_NONE { PUSH unit Unit } { DIG 10 ; DUP ; DUG 11 ; FAILWITH } ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CAR ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CDR } ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CDR ;
                 SOME ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CDR ; SWAP ; CAR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CDR ;
                 CAR ;
                 SOME ;
                 DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CAR } ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DIP { DROP 5 } ;
                 NIL operation ;
                 PAIR ;
                 DIP { DROP } }
               { DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 PAIR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE
                   { DUP ; PUSH string "Token symbol is not registered: " ; CONCAT ; FAILWITH }
                   { DUP ; DIP { DROP } } ;
                 DUP ;
                 DIP { DROP 3 } ;
                 DUP ;
                 CDR ;
                 CAR ;
                 IF_NONE
                   { PUSH unit Unit }
                   { DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     PUSH string "Token is already deployed: " ;
                     CONCAT ;
                     FAILWITH } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 7 ;
                 DUP ;
                 DUG 8 ;
                 CAR ;
                 CDR ;
                 SOME ;
                 DIP { DUP ; CAR ; SWAP ; CDR ; CDR } ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 UPDATE ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DIP { DROP 5 } ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 10 ;
                 DUP ;
                 DUG 11 ;
                 SELF ;
                 ADDRESS ;
                 PAIR ;
                 PAIR ;
                 DIG 13 ;
                 DUP ;
                 DUG 14 ;
                 SWAP ;
                 EXEC ;
                 NIL operation ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CONS ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 DIG 12 ;
                 DUP ;
                 DUG 13 ;
                 SWAP ;
                 EXEC ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 LEFT (pair (pair (pair address nat) (pair address nat)) address) ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 TRANSFER_TOKENS ;
                 DUP ;
                 DIP { DROP 4 } ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 IF_NONE { DIG 15 ; DUP ; DUG 16 ; FAILWITH } { DUP ; DIP { DROP } } ;
                 DUP ;
                 CONTRACT
                   (or (or (address %addToken)
                           (pair %setDocument_
                              (pair (pair (pair string string) (pair string string))
                                    (pair (pair string string) (pair string string)))
                              string))
                       (nat %setSaveDataFlag)) ;
                 IF_NONE { DIG 16 ; DUP ; DUG 17 ; FAILWITH } { DUP ; DIP { DROP } } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 LEFT (pair (pair (pair (pair string string) (pair string string))
                                  (pair (pair string string) (pair string string)))
                            string) ;
                 LEFT nat ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PUSH mutez 0 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 TRANSFER_TOKENS ;
                 DUP ;
                 DIP { DROP 5 } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CONS ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 CONS ;
                 PUSH nat 0 ;
                 DIG 9 ;
                 DUP ;
                 DUG 10 ;
                 COMPARE ;
                 GT ;
                 IF { DIG 6 ;
                      DUP ;
                      DUG 7 ;
                      DIG 8 ;
                      DUP ;
                      DUG 9 ;
                      PAIR ;
                      DIG 9 ;
                      DUP ;
                      DUG 10 ;
                      DIG 11 ;
                      DUP ;
                      DUG 12 ;
                      CAR ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      DUP ;
                      CAR ;
                      CAR ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      CDR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      CDR ;
                      CDR ;
                      DIG 17 ;
                      DUP ;
                      DUG 18 ;
                      SWAP ;
                      EXEC ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      CDR ;
                      CAR ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      PAIR ;
                      DIG 3 ;
                      DUP ;
                      DUG 4 ;
                      DIG 5 ;
                      DUP ;
                      DUG 6 ;
                      PAIR ;
                      PAIR ;
                      PAIR ;
                      RIGHT address ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      PUSH mutez 0 ;
                      DIG 2 ;
                      DUP ;
                      DUG 3 ;
                      TRANSFER_TOKENS ;
                      DUP ;
                      DIP { DROP 6 } ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      DIG 1 ;
                      DUP ;
                      DUG 2 ;
                      CONS ;
                      DIP { DROP } }
                    { DUP } ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 DIG 1 ;
                 DUP ;
                 DUG 2 ;
                 PAIR ;
                 DIP { DROP 12 } } ;
             DIP { DROP } }
           { DIG 1 ;
             DUP ;
             DUG 2 ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             PAIR ;
             DUP ;
             CAR ;
             CAR ;
             CAR ;
             DIG 1 ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 3 ;
             DUP ;
             DUG 4 ;
             CDR ;
             DUP ;
             CAR ;
             CAR ;
             CAR ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             SELF ;
             ADDRESS ;
             PAIR ;
             PAIR ;
             DIG 12 ;
             DUP ;
             DUG 13 ;
             SWAP ;
             EXEC ;
             PUSH nat 20 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             SIZE ;
             COMPARE ;
             GT ;
             PUSH nat 0 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             SIZE ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DIG 4 ; DUP ; DUG 5 ; PUSH string "Invalid symbol: " ; CONCAT ; FAILWITH }
                { PUSH unit Unit } ;
             PUSH nat 128 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             SIZE ;
             COMPARE ;
             GT ;
             PUSH nat 0 ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             SIZE ;
             COMPARE ;
             EQ ;
             OR ;
             IF { DIG 4 ; DUP ; DUG 5 ; PUSH string "Invalid name: " ; CONCAT ; FAILWITH }
                { PUSH unit Unit } ;
             PUSH nat 18 ;
             DIG 5 ;
             DUP ;
             DUG 6 ;
             COMPARE ;
             GT ;
             IF { PUSH string "Invalid decimals" ; FAILWITH } { PUSH unit Unit } ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             CDR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             GET ;
             IF_NONE
               { PUSH unit Unit }
               { DIG 8 ;
                 DUP ;
                 DUG 9 ;
                 PUSH string "Token symbol is already registered: " ;
                 CONCAT ;
                 FAILWITH } ;
             DIG 9 ;
             DUP ;
             DUG 10 ;
             CAR ;
             CDR ;
             CDR ;
             NONE address ;
             PAIR ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             DIG 8 ;
             DUP ;
             DUG 9 ;
             PAIR ;
             PAIR ;
             DIG 6 ;
             DUP ;
             DUG 7 ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CDR ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             SOME ;
             DIG 12 ;
             DUP ;
             DUG 13 ;
             UPDATE ;
             SWAP ;
             CAR ;
             PAIR ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 11 ;
             DUP ;
             DUG 12 ;
             PUSH bool True ;
             SWAP ;
             UPDATE ;
             DIP { DUP ; CDR ; SWAP ; CAR ; DUP ; CAR ; SWAP ; CDR ; CDR } ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             NIL operation ;
             DIG 7 ;
             DUP ;
             DUG 8 ;
             CONS ;
             PAIR ;
             DIP { DROP 12 } } ;
         DIP { DROP 7 } } }