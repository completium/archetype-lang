{ parameter
    (or (lambda %do unit (list operation))
        (or %default :_entries
           (address %_Liq_entry_change_owner)
           (or (pair %_Liq_entry_add_identity string bytes)
               (or (pair %_Liq_entry_update_identity string bytes)
                   (pair %_Liq_entry_add_client
                      string
                      (pair :client (bytes %encryptedName) (bytes %encryptedKey))))))) ;
  storage
    (pair key_hash
          (pair :storage
             (big_map
                string
                (pair :identity
                   (list %userRecord bytes)
                   (list %clients (pair :client (bytes %encryptedName) (bytes %encryptedKey)))))
             address)) ;
  code { DUP ;
         CAR ;
         IF_LEFT
           { PUSH mutez 0 ;
             AMOUNT ;
             { { COMPARE ; EQ } ; IF {} { { UNIT ; FAILWITH } } } ;
             { DIP { DUP } ; SWAP } ;
             CDR ;
             CAR ;
             IMPLICIT_ACCOUNT ;
             ADDRESS ;
             SENDER ;
             { COMPARE ;
               NEQ ;
               IF { SENDER ; PUSH string "Only the owner can operate." ; PAIR ; FAILWITH }
                  { UNIT ; EXEC ; DIP { CDR } ; PAIR } } }
           { DIP { CDR ; DUP ; CDR } ;
             PAIR ;
             { DUP ;
               DIP { CDR @storage_slash_1 } ;
               CAR @parameter_slash_2 ;
               LAMBDA @require_sender_is_owner
                 (pair :storage
                    (big_map
                       string
                       (pair :identity
                          (list %userRecord bytes)
                          (list %clients (pair :client (bytes %encryptedName) (bytes %encryptedKey)))))
                    address)
                 unit
                 { RENAME @storage_slash_3 ;
                   DUP @storage ;
                   CDR %owner ;
                   SENDER ;
                   COMPARE ;
                   NEQ ;
                   IF { PUSH string "only available to owner" ; FAILWITH } { UNIT } ;
                   DROP ;
                   DROP ;
                   UNIT } ;
               { DIP { DUP @parameter } ; SWAP } ;
               IF_LEFT
                 { RENAME @new_owner_slash_5 ;
                   { DIP { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ; SWAP } ;
                   { DIP { DIP { DUP @require_sender_is_owner } ; SWAP } ; SWAP } ;
                   { DIP { DUP @storage } ; SWAP } ;
                   EXEC @_ ;
                   DROP ;
                   DUP @storage ;
                   CAR %identitiesDirectory ;
                   SWAP ;
                   DROP ;
                   PAIR @storage %identitiesDirectory %owner ;
                   NIL operation ;
                   PAIR }
                 { IF_LEFT
                     { RENAME @_userKey_userRecordFile_slash_9 ;
                       { DIP { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ; SWAP } ;
                       { DIP { DUP } ; SWAP } ;
                       CAR @userKey ;
                       { DIP { DIP { DIP { DUP @require_sender_is_owner } ; SWAP } ; SWAP } ;
                         SWAP } ;
                       { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ;
                       EXEC @_ ;
                       DROP ;
                       { DIP { DUP @storage } ; SWAP } ;
                       CAR %identitiesDirectory ;
                       { DIP { DUP @userKey } ; SWAP } ;
                       MEM ;
                       IF { PUSH string "userKey already used" ; FAILWITH } { UNIT } ;
                       DROP ;
                       { DIP { DUP @storage } ; SWAP } ;
                       CDR %owner ;
                       { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ;
                       CAR %identitiesDirectory ;
                       NIL (pair :client (bytes %encryptedName) (bytes %encryptedKey)) ;
                       NIL bytes ;
                       { DIP { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
                                     SWAP } ;
                               SWAP } ;
                         SWAP } ;
                       CDR @userRecordFile ;
                       CONS ;
                       PAIR @identity %userRecord %clients ;
                       { DIP { DIP { DIP { DUP @userKey } ; SWAP } ; SWAP } ; SWAP } ;
                       DIP { SOME } ;
                       { DIP { DIP { DIP { DIP { DROP ; DROP ; DROP } } } } } ;
                       UPDATE @identitiesDirectory ;
                       PAIR @storage %identitiesDirectory %owner ;
                       NIL operation ;
                       PAIR }
                     { IF_LEFT
                         { RENAME @_userKey_userRecordFile_slash_17 ;
                           { DIP { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ; SWAP } ;
                           { DIP { DUP } ; SWAP } ;
                           CAR @userKey ;
                           { DIP { DIP { DIP { DUP @require_sender_is_owner } ; SWAP } ; SWAP } ;
                             SWAP } ;
                           { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ;
                           EXEC @_ ;
                           DROP ;
                           { DIP { DUP @storage } ; SWAP } ;
                           CAR %identitiesDirectory ;
                           { DIP { DUP @userKey } ; SWAP } ;
                           GET ;
                           IF_NONE { PUSH string "no user found for userKey" ; FAILWITH } {} ;
                           RENAME @identity ;
                           { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ;
                           CDR %owner ;
                           { DIP { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ; SWAP } ;
                           CAR %identitiesDirectory ;
                           { DIP { DIP { DUP @identity } ; SWAP } ; SWAP } ;
                           CDR %clients ;
                           { DIP { DIP { DIP { DUP @identity } ; SWAP } ; SWAP } ; SWAP } ;
                           { DIP { DIP { DIP { DIP { DROP } } } } } ;
                           { DIP { DIP { DIP { DIP { DIP { DROP } } } } } } ;
                           CAR %userRecord ;
                           { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
                                   SWAP } ;
                             SWAP } ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DROP } } } } } } } ;
                           CDR @userRecordFile ;
                           CONS ;
                           PAIR @identity %userRecord %clients ;
                           SOME ;
                           { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
                           { DIP { DIP { DIP { DIP { DROP } } } } } ;
                           UPDATE @identitiesDirectory ;
                           PAIR @storage %identitiesDirectory %owner ;
                           NIL operation ;
                           PAIR }
                         { RENAME @_userKey_client_slash_27 ;
                           { DIP { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ; SWAP } ;
                           { DIP { DUP } ; SWAP } ;
                           CAR @userKey ;
                           { DIP { DIP { DIP { DUP @require_sender_is_owner } ; SWAP } ; SWAP } ;
                             SWAP } ;
                           { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ;
                           EXEC @_ ;
                           DROP ;
                           { DIP { DUP @storage } ; SWAP } ;
                           CAR %identitiesDirectory ;
                           { DIP { DUP @userKey } ; SWAP } ;
                           GET ;
                           IF_NONE { PUSH string "no user found for userKey" ; FAILWITH } {} ;
                           RENAME @identity ;
                           { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ;
                           CDR %owner ;
                           { DIP { DIP { DIP { DUP @storage } ; SWAP } ; SWAP } ; SWAP } ;
                           CAR %identitiesDirectory ;
                           { DIP { DIP { DUP @identity } ; SWAP } ; SWAP } ;
                           CAR %userRecord ;
                           { DIP { DIP { DIP { DUP @identity } ; SWAP } ; SWAP } ; SWAP } ;
                           { DIP { DIP { DIP { DIP { DROP } } } } } ;
                           { DIP { DIP { DIP { DIP { DIP { DROP } } } } } } ;
                           CDR %clients ;
                           { DIP { DIP { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
                                   SWAP } ;
                             SWAP } ;
                           { DIP { DIP { DIP { DIP { DIP { DIP { DROP } } } } } } } ;
                           CDR @client ;
                           CONS ;
                           SWAP ;
                           PAIR @identity %userRecord %clients ;
                           SOME ;
                           { DIP { DIP { DIP { DUP } ; SWAP } ; SWAP } ; SWAP } ;
                           { DIP { DIP { DIP { DIP { DROP } } } } } ;
                           UPDATE @identitiesDirectory ;
                           PAIR @storage %identitiesDirectory %owner ;
                           NIL operation ;
                           PAIR } } } ;
               DIP { DROP ; DROP ; DROP } } ;
             SWAP ;
             CAR ;
             SWAP ;
             { { DUP ; CAR ; DIP { CDR } } } ;
             DIP { SWAP ; PAIR } ;
             PAIR } } }