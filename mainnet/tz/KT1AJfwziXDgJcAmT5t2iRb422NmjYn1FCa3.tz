{ parameter
    (or (pair %opensource_origin (nat %goal) (string %meta))
        (or (pair %pure_nfts (address %address) (pair (nat %amount) (nat %token_id)))
            (address %update_adm))) ;
  storage
    (pair (pair (big_map %auth address nat) (nat %counter))
          (pair (address %fa2) (address %oracle))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             { CAR ; CDR } ;
             SELF ;
             ADDRESS ;
             PAIR %protocol %token_id ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             { CDR ; CDR } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             CDR ;
             PAIR %meta %oracle ;
             PAIR ;
             PUSH mutez 1000000 ;
             DIG 2 ;
             CAR ;
             MUL ;
             NOW ;
             PUSH int 3888000 ;
             ADD ;
             PAIR %expire %goal ;
             SENDER ;
             PAIR %admin ;
             PAIR ;
             PUSH mutez 0 ;
             NONE key_hash ;
             CREATE_CONTRACT
               { parameter
                   (or (or (unit %contribute)
                           (pair %init
                              (pair (address %admin) (pair (timestamp %expire) (mutez %goal)))
                              (pair (pair (string %meta) (address %oracle)) (pair (address %protocol) (nat %token_id)))))
                       (or (option %oracle_delegation key_hash) (unit %withdraw))) ;
                 storage
                   (pair (pair (address %admin) (pair (timestamp %expire) (mutez %goal)))
                         (pair (pair (string %meta) (address %oracle)) (pair (address %protocol) (nat %token_id)))) ;
                 code { DUP ;
                        CDR ;
                        SWAP ;
                        CAR ;
                        IF_LEFT
                          { IF_LEFT
                              { DROP ;
                                DUP ;
                                { CAR ; CAR } ;
                                SENDER ;
                                COMPARE ;
                                NEQ ;
                                IF {}
                                   { PUSH string "WrongCondition: sp.sender != self.data.admin" ; FAILWITH } ;
                                PUSH mutez 5000000 ;
                                AMOUNT ;
                                COMPARE ;
                                GT ;
                                IF {} { PUSH string "WrongCondition: sp.amount > sp.tez(5)" ; FAILWITH } ;
                                DUP ;
                                { CDR ; CDR ; CAR } ;
                                CONTRACT %pure_nfts (pair (address %address) (pair (nat %amount) (nat %token_id))) ;
                                NIL operation ;
                                SWAP ;
                                { IF_NONE { PUSH int 51 ; FAILWITH } {} } ;
                                PUSH mutez 0 ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                { CDR ; CDR ; CDR } ;
                                PUSH mutez 1000000 ;
                                AMOUNT ;
                                EDIV ;
                                { IF_NONE { PUSH int 45 ; FAILWITH } {} } ;
                                CAR ;
                                PAIR %amount %token_id ;
                                SENDER ;
                                PAIR %address ;
                                TRANSFER_TOKENS ;
                                CONS }
                              { SWAP ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                { CDR ; CDR } ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                { CDR ; CDR ; CAR } ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                { CAR ; CDR } ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                { CAR ; CAR } ;
                                PAIR ;
                                PAIR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                { CAR ; CAR } ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                { CDR ; CAR ; CDR } ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                { CDR ; CAR } ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                { CDR ; CDR ; CDR } ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                { CAR ; CDR } ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                { CDR ; CAR ; CAR } ;
                                PAIR ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                { CDR ; CDR } ;
                                DIG 3 ;
                                DUP ;
                                DUG 4 ;
                                { CAR ; CDR ; CAR } ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                { CDR ; CAR } ;
                                DIG 3 ;
                                { CAR ; CDR ; CDR } ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                PAIR ;
                                NIL operation } }
                          { IF_LEFT
                              { SWAP ;
                                DUP ;
                                DUG 2 ;
                                { CDR ; CAR ; CDR } ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF {}
                                   { PUSH string "WrongCondition: sp.sender == self.data.oracle" ; FAILWITH } ;
                                SET_DELEGATE ;
                                NIL operation ;
                                SWAP ;
                                CONS }
                              { DROP ;
                                DUP ;
                                { CAR ; CAR } ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF {}
                                   { PUSH string "WrongCondition: self.data.admin == sp.sender" ; FAILWITH } ;
                                DUP ;
                                { CAR ; CDR ; CAR } ;
                                NOW ;
                                COMPARE ;
                                GT ;
                                IF {} { PUSH string "WrongCondition: self.data.expire < sp.now" ; FAILWITH } ;
                                NIL operation ;
                                SENDER ;
                                CONTRACT unit ;
                                { IF_NONE { PUSH int 71 ; FAILWITH } {} } ;
                                BALANCE ;
                                UNIT ;
                                TRANSFER_TOKENS ;
                                CONS } } ;
                        PAIR } } ;
             PAIR ;
             DUP ;
             CAR ;
             NIL operation ;
             SWAP ;
             CONS ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DIG 4 ;
             CDR ;
             DIG 5 ;
             { CAR ; CDR } ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             PAIR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             PUSH nat 1 ;
             ADD ;
             SWAP ;
             PAIR ;
             PAIR ;
             SWAP }
           { IF_LEFT
               { DUP ;
                 { CDR ; CDR } ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CAR ; CAR } ;
                 SENDER ;
                 GET ;
                 { IF_NONE { PUSH int 124 ; FAILWITH } {} } ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: self.data.auth[sp.sender] == params.token_id" ;
                      FAILWITH } ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CAR } ;
                 CONTRACT %mint
                   (pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id))) ;
                 { IF_NONE { PUSH int 139 ; FAILWITH } {} } ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 { CDR ; CDR } ;
                 PUSH string "pure" ;
                 PAIR %symbol %token_id ;
                 DIG 4 ;
                 DUP ;
                 { CDR ; CAR } ;
                 SWAP ;
                 CAR ;
                 PAIR %address %amount ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR } ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.oracle" ; FAILWITH } ;
                 NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CAR } ;
                 CONTRACT %set_administrator address ;
                 { IF_NONE { PUSH int 99 ; FAILWITH } {} } ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 TRANSFER_TOKENS ;
                 CONS } } ;
         PAIR } }