{ parameter
    (or :_entries
       (pair :order %demand
          (bytes %order_model)
          (pair (bytes %order_objective) (nat %order_cost)))
       (or (pair :order %offer
              (bytes %order_model)
              (pair (bytes %order_objective) (nat %order_cost)))
           (pair :report %finalize (nat %report_ix) (bytes %report_data)))) ;
  storage
    (pair :storage
       (map %asks
          bytes
          (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost)))
                address))
       (pair (map %bids
                bytes
                (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost)))
                      address))
             (map %deals
                nat
                (pair :liability
                   (pair :order %liability_params
                      (bytes %order_model)
                      (pair (bytes %order_objective) (nat %order_cost)))
                   (pair (address %liability_promisee)
                         (pair (address %liability_promisor) (option %liability_report bytes))))))) ;
  code { DUP ;
         DIP { CDR @storage_slash_1 } ;
         CAR @parameter_slash_2 ;
         LAMBDA @hash_order
           (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost)))
           bytes
           { RENAME @o_slash_3 ;
             NIL bytes ;
             { DIP { DUP @o } ; SWAP } ;
             { CDR ; CDR %order_cost } ;
             PACK ;
             BLAKE2B ;
             CONS ;
             { DIP { DUP @o } ; SWAP } ;
             { CDR ; CAR %order_objective } ;
             BLAKE2B ;
             CONS ;
             SWAP ;
             CAR %order_model ;
             BLAKE2B ;
             CONS ;
             CONCAT ;
             BLAKE2B } ;
         LAMBDA @new_liability
           (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost)))
                 (pair address address))
           (pair :liability
              (pair :order %liability_params
                 (bytes %order_model)
                 (pair (bytes %order_objective) (nat %order_cost)))
              (pair (address %liability_promisee)
                    (pair (address %liability_promisor) (option %liability_report bytes))))
           { RENAME @order_promisee_promisor_slash_5 ;
             NONE bytes ;
             { DIP { DUP @order_promisee_promisor } ; SWAP } ;
             { CDR ; CDR @promisor } ;
             PAIR %liability_promisor %liability_report ;
             { DIP { DUP @order_promisee_promisor } ; SWAP } ;
             { CDR ; CAR @promisee } ;
             PAIR %liability_promisee ;
             SWAP ;
             CAR @order ;
             PAIR %liability_params } ;
         { DIP 2 { DUP @parameter } ; DIG 3 } ;
         IF_LEFT
           { RENAME @order_slash_10 ;
             { DIP 4 { DUP @storage } ; DIG 5 } ;
             { DIP 3 { DUP @hash_order } ; DIG 4 } ;
             { DIP 2 { DUP @order } ; DIG 3 } ;
             EXEC @demand_hash ;
             { DIP { DUP @storage } ; SWAP } ;
             { CDR ; CAR %bids } ;
             { DIP { DUP @demand_hash } ; SWAP } ;
             GET ;
             IF_NONE
               { { DIP { DUP @storage } ; SWAP } ;
                 CDR ;
                 { DIP 2 { DUP @storage } ; DIG 3 } ;
                 CAR %asks ;
                 SENDER ;
                 { DIP 5 { DUP @order } ; DIG 6 } ;
                 PAIR ;
                 { DIP 3 { DUP @demand_hash } ; DIG 4 } ;
                 DIP { SOME } ;
                 UPDATE ;
                 PAIR %asks ;
                 NIL operation ;
                 PAIR }
               { { DIP 2 { DUP @storage } ; DIG 3 } ;
                 DUP ;
                 CAR %asks ;
                 SWAP ;
                 CDR ;
                 CAR %bids ;
                 { DIP 4 { DUP @storage } ; DIG 5 } ;
                 { CDR ; CDR %deals } ;
                 { DIP 7 { DUP @new_liability } ; DIG 8 } ;
                 { DIP 4 { DUP } ; DIG 5 } ;
                 CDR @promisor ;
                 SENDER ;
                 PAIR ;
                 { DIP 8 { DUP @order } ; DIG 9 } ;
                 PAIR ;
                 EXEC @liability ;
                 { DIP 6 { DUP @storage } ; DIG 7 } ;
                 { CDR ; CDR %deals } ;
                 SIZE ;
                 DIP { SOME } ;
                 UPDATE ;
                 SWAP ;
                 PAIR %bids %deals ;
                 SWAP ;
                 PAIR @storage %asks ;
                 DUP @storage ;
                 DUP ;
                 CAR %asks ;
                 SWAP ;
                 CDR ;
                 CDR %deals ;
                 { DIP 2 { DUP @storage } ; DIG 3 } ;
                 { CDR ; CAR %bids } ;
                 { DIP 5 { DUP @demand_hash } ; DIG 6 } ;
                 DIP { NONE (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost)))
                                  address) } ;
                 { DIP 5 { { DROP ; DROP } } } ;
                 UPDATE ;
                 PAIR %bids %deals ;
                 SWAP ;
                 PAIR @storage %asks ;
                 NIL operation ;
                 PAIR } ;
             DIP { DROP ; DROP ; DROP } }
           { IF_LEFT
               { RENAME @order_slash_19 ;
                 { DIP 4 { DUP @storage } ; DIG 5 } ;
                 { DIP 3 { DUP @hash_order } ; DIG 4 } ;
                 { DIP 2 { DUP @order } ; DIG 3 } ;
                 EXEC @offer_hash ;
                 { DIP { DUP @storage } ; SWAP } ;
                 CAR %asks ;
                 { DIP { DUP @offer_hash } ; SWAP } ;
                 GET ;
                 IF_NONE
                   { { DIP { DUP @storage } ; SWAP } ;
                     DUP ;
                     CAR %asks ;
                     SWAP ;
                     CDR ;
                     CDR %deals ;
                     { DIP 3 { DUP @storage } ; DIG 4 } ;
                     { CDR ; CAR %bids } ;
                     SENDER ;
                     { DIP 6 { DUP @order } ; DIG 7 } ;
                     PAIR ;
                     { DIP 4 { DUP @offer_hash } ; DIG 5 } ;
                     DIP { SOME } ;
                     UPDATE ;
                     PAIR %bids %deals ;
                     SWAP ;
                     PAIR %asks ;
                     NIL operation ;
                     PAIR }
                   { { DIP 2 { DUP @storage } ; DIG 3 } ;
                     DUP ;
                     CAR %asks ;
                     SWAP ;
                     CDR ;
                     CAR %bids ;
                     { DIP 4 { DUP @storage } ; DIG 5 } ;
                     { CDR ; CDR %deals } ;
                     { DIP 7 { DUP @new_liability } ; DIG 8 } ;
                     SENDER ;
                     { DIP 5 { DUP } ; DIG 6 } ;
                     CDR @promisee ;
                     PAIR ;
                     { DIP 8 { DUP @order } ; DIG 9 } ;
                     PAIR ;
                     EXEC @liability ;
                     { DIP 6 { DUP @storage } ; DIG 7 } ;
                     { CDR ; CDR %deals } ;
                     SIZE ;
                     DIP { SOME } ;
                     UPDATE ;
                     SWAP ;
                     PAIR %bids %deals ;
                     SWAP ;
                     PAIR @storage %asks ;
                     DUP @storage ;
                     CDR ;
                     { DIP { DUP @storage } ; SWAP } ;
                     CAR %asks ;
                     { DIP 4 { DUP @offer_hash } ; DIG 5 } ;
                     DIP { NONE (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost)))
                                      address) } ;
                     { DIP 4 { { DROP ; DROP } } } ;
                     UPDATE ;
                     PAIR @storage %asks ;
                     NIL operation ;
                     PAIR } ;
                 DIP { DROP ; DROP ; DROP } }
               { RENAME @report_slash_28 ;
                 { DIP 4 { DUP @storage } ; DIG 5 } ;
                 DUP @storage ;
                 { CDR ; CDR %deals } ;
                 { DIP 2 { DUP @report } ; DIG 3 } ;
                 CAR %report_ix ;
                 GET ;
                 IF_NONE
                   { PUSH string "Wrong liability index" ; FAILWITH }
                   { DUP @l ;
                     { CDR ; CDR ; CDR %liability_report } ;
                     IF_NONE
                       { PUSH string "Liability already finalized" ; FAILWITH }
                       { SENDER ;
                         { DIP 2 { DUP @l } ; DIG 3 } ;
                         { CDR ; CDR ; CAR %liability_promisor } ;
                         COMPARE ;
                         NEQ ;
                         IF { PUSH string "Wrong report sender" ; FAILWITH }
                            { { DIP 2 { DUP @storage } ; DIG 3 } ;
                              DUP ;
                              CAR %asks ;
                              SWAP ;
                              CDR ;
                              CAR %bids ;
                              { DIP 4 { DUP @storage } ; DIG 5 } ;
                              { CDR ; CDR %deals } ;
                              { DIP 4 { DUP @l } ; DIG 5 } ;
                              DUP ;
                              CAR %liability_params ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR %liability_promisee ;
                              SWAP ;
                              CDR ;
                              CAR %liability_promisor ;
                              { DIP 9 { DUP @report } ; DIG 10 } ;
                              CDR %report_data ;
                              SOME ;
                              SWAP ;
                              PAIR %liability_promisor %liability_report ;
                              SWAP ;
                              PAIR %liability_promisee ;
                              SWAP ;
                              PAIR @l %liability_params ;
                              SOME ;
                              { DIP 7 { DUP @report } ; DIG 8 } ;
                              CAR %report_ix ;
                              UPDATE ;
                              SWAP ;
                              PAIR %bids %deals ;
                              SWAP ;
                              PAIR %asks ;
                              NIL operation ;
                              PAIR } ;
                         DIP { DROP } } ;
                     DIP { DROP } } ;
                 DIP { DROP ; DROP } } } ;
         DIP { DROP ; DROP ; DROP ; DROP } } }