{
  storage (pair (pair (big_map %curations nat (pair (nat %hDAO_balance) (address %issuer))) (pair (address %fa2) (bool %locked))) (pair (address %manager) (pair (big_map %metadata string bytes) (address %protocol))));
  parameter (or (pair %claim_hDAO (nat %hDAO_amount) (nat %objkt_id)) (or (pair %configure (address %fa2) (address %protocol)) (pair %curate (nat %hDAO_amount) (pair (address %issuer) (nat %objkt_id)))));
  code { DUP;
         CDR;
         SWAP;
         CAR;
         IF_LEFT
           { SWAP;
             DUP;
             DUG 2;
             CAR;
             CAR;
             SWAP;
             DUP;
             DUG 2;
             CDR;
             GET;
             IF_NONE
               { PUSH int 90;
                 FAILWITH }
               {  };
             CDR;
             SENDER;
             COMPARE;
             EQ;
             IF
               { SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 CAR;
                 SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 GET;
                 IF_NONE
                   { PUSH int 90;
                     FAILWITH }
                   {  };
                 CAR;
                 SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 COMPARE;
                 LE }
               { PUSH bool False };
             IF
               {  }
               { PUSH string "WrongCondition: (sp.sender == self.data.curations[params.objkt_id].issuer) & (params.hDAO_amount <= self.data.curations[params.objkt_id].hDAO_balance)";
                 FAILWITH };
             NIL operation;
             DIG 2;
             DUP;
             DUG 3;
             CAR;
             CDR;
             CAR;
             CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))));
             IF_NONE
               { PUSH int 96;
                 FAILWITH }
               {  };
             PUSH mutez 0;
             NIL (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))));
             NIL (pair (address %to_) (pair (nat %token_id) (nat %amount)));
             DIG 5;
             DUP;
             DUG 6;
             CAR;
             PUSH nat 0;
             PAIR;
             SENDER;
             PAIR;
             CONS;
             SELF;
             ADDRESS;
             PAIR;
             CONS;
             TRANSFER_TOKENS;
             CONS;
             DIG 2;
             DUP;
             DUG 3;
             DUP;
             CDR;
             SWAP;
             CAR;
             DUP;
             CDR;
             SWAP;
             CAR;
             DUP;
             DIG 5;
             DUP;
             DUG 6;
             CDR;
             DUP;
             DUG 2;
             GET;
             IF_NONE
               { PUSH int 93;
                 FAILWITH }
               {  };
             CDR;
             DIG 6;
             DUP;
             DUG 7;
             CAR;
             DIG 8;
             CAR;
             CAR;
             DIG 8;
             CDR;
             GET;
             IF_NONE
               { PUSH int 93;
                 FAILWITH }
               {  };
             CAR;
             SUB;
             ABS;
             PAIR;
             SOME;
             SWAP;
             UPDATE;
             PAIR;
             PAIR;
             SWAP }
           { IF_LEFT
               { SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 CAR;
                 SENDER;
                 COMPARE;
                 EQ;
                 IF
                   { SWAP;
                     DUP;
                     DUG 2;
                     CAR;
                     CDR;
                     CDR;
                     NOT }
                   { PUSH bool False };
                 IF
                   {  }
                   { PUSH string "WrongCondition: (sp.sender == self.data.manager) & (~ self.data.locked)";
                     FAILWITH };
                 SWAP;
                 DUP;
                 CDR;
                 SWAP;
                 CAR;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 CDR;
                 DIG 3;
                 DUP;
                 DUG 4;
                 CAR;
                 PAIR;
                 SWAP;
                 PAIR;
                 PAIR;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 CAR;
                 DIG 3;
                 CDR;
                 SWAP;
                 PAIR;
                 SWAP;
                 PAIR;
                 SWAP;
                 PAIR;
                 DUP;
                 CDR;
                 SWAP;
                 CAR;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 CAR;
                 PUSH bool True;
                 SWAP;
                 PAIR;
                 SWAP;
                 PAIR;
                 PAIR }
               { SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 CDR;
                 CDR;
                 SENDER;
                 COMPARE;
                 EQ;
                 IF
                   {  }
                   { PUSH string "WrongCondition: sp.sender == self.data.protocol";
                     FAILWITH };
                 SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 CAR;
                 SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 CDR;
                 MEM;
                 IF
                   { SWAP;
                     DUP;
                     CDR;
                     SWAP;
                     CAR;
                     DUP;
                     CDR;
                     SWAP;
                     CAR;
                     DUP;
                     DIG 4;
                     DUP;
                     DUG 5;
                     CDR;
                     CDR;
                     DUP;
                     DUG 2;
                     GET;
                     IF_NONE
                       { PUSH int 103;
                         FAILWITH }
                       {  };
                     DUP;
                     CDR;
                     SWAP;
                     CAR;
                     DIG 6;
                     DUP;
                     DUG 7;
                     CAR;
                     ADD;
                     PAIR;
                     SOME;
                     SWAP;
                     UPDATE;
                     PAIR;
                     PAIR;
                     DUP;
                     CDR;
                     SWAP;
                     CAR;
                     DUP;
                     CDR;
                     SWAP;
                     CAR;
                     DUP;
                     DIG 4;
                     DUP;
                     DUG 5;
                     CDR;
                     CDR;
                     DUP;
                     DUG 2;
                     GET;
                     IF_NONE
                       { PUSH int 104;
                         FAILWITH }
                       {  };
                     CAR;
                     DIG 5;
                     CDR;
                     CAR;
                     SWAP;
                     PAIR;
                     SOME;
                     SWAP;
                     UPDATE;
                     PAIR;
                     PAIR }
                   { SWAP;
                     DUP;
                     CDR;
                     SWAP;
                     CAR;
                     DUP;
                     CDR;
                     SWAP;
                     CAR;
                     DIG 3;
                     DUP;
                     CDR;
                     CAR;
                     SWAP;
                     DUP;
                     DUG 5;
                     CAR;
                     PAIR;
                     SOME;
                     DIG 4;
                     CDR;
                     CDR;
                     UPDATE;
                     PAIR;
                     PAIR } };
             NIL operation };
         PAIR };
}
