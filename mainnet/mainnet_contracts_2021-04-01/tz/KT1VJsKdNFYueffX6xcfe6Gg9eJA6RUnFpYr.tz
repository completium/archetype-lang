{
  storage (pair (pair (bool %paused) (big_map %puzzles nat (pair (pair (pair (address %author) (map %claimed address nat)) (pair (nat %id) (nat %questions))) (pair (pair (nat %rewards) (bytes %rewards_h)) (pair %solver address timestamp))))) (pair (address %rewardProxy) (pair %roles (set %author address) (address %owner))));
  parameter (or (or (or (or (address %addAuthor) (pair %allowSolver (address %addr) (nat %id))) (or (pair %create (pair (nat %id) (nat %questions)) (pair (nat %rewards) (bytes %rewards_h))) (unit %pause))) (or (or (nat %raiseHand) (address %removeAuthor)) (or (unit %renounceAuthorship) (address %setProxy)))) (or (or (pair %solve (nat %id) (bytes %proof)) (unit %unpause)) (pair %update (pair (nat %id) (nat %questions)) (pair (nat %rewards) (bytes %rewards_h)))));
  code { NIL operation;
         LAMBDA
           (pair (pair bool (big_map nat (pair (pair (pair address (map address nat)) (pair nat nat)) (pair (pair nat bytes) (pair address timestamp))))) (pair address (pair (set address) address)))
           bool
           { SENDER;
             SWAP;
             CDR;
             CDR;
             CDR;
             COMPARE;
             EQ };
         LAMBDA
           (pair (pair bool (big_map nat (pair (pair (pair address (map address nat)) (pair nat nat)) (pair (pair nat bytes) (pair address timestamp))))) (pair address (pair (set address) address)))
           bool
           { CAR;
             CAR };
         LAMBDA
           (pair (pair (pair address (map address nat)) (pair nat nat)) (pair (pair nat bytes) (pair address timestamp)))
           bool
           { NOW;
             SWAP;
             CDR;
             CDR;
             CDR;
             COMPARE;
             GT };
         DUP;
         LAMBDA
           (pair (lambda (pair (pair (pair address (map address nat)) (pair nat nat)) (pair (pair nat bytes) (pair address timestamp))) bool) (pair (pair (pair address (map address nat)) (pair nat nat)) (pair (pair nat bytes) (pair address timestamp))))
           bool
           { DUP;
             CDR;
             SWAP;
             CAR;
             SWAP;
             PUSH bool True;
             SWAP;
             DUP;
             DUG 2;
             DIG 3;
             SWAP;
             EXEC;
             COMPARE;
             EQ;
             SENDER;
             DIG 2;
             CDR;
             CDR;
             CAR;
             COMPARE;
             EQ;
             AND };
         SWAP;
         APPLY;
         LAMBDA
           (pair address (pair (pair bool (big_map nat (pair (pair (pair address (map address nat)) (pair nat nat)) (pair (pair nat bytes) (pair address timestamp))))) (pair address (pair (set address) address))))
           bool
           { DUP;
             CDR;
             SWAP;
             CAR;
             SWAP;
             CDR;
             CDR;
             CAR;
             SWAP;
             MEM };
         DIG 6;
         DUP;
         CDR;
         SWAP;
         CAR;
         PUSH mutez 0;
         AMOUNT;
         COMPARE;
         GT;
         IF
           { PUSH string "This contract does not accept tokens.";
             FAILWITH }
           {  };
         IF_LEFT
           { IF_LEFT
               { DIG 3;
                 DROP;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 3;
                         DROP;
                         PUSH bool True;
                         DIG 2;
                         DUP;
                         DUG 3;
                         DIG 5;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "ContractPaused";
                             FAILWITH }
                           {  };
                         PUSH bool False;
                         DIG 2;
                         DUP;
                         DUG 3;
                         DIG 5;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "OperationNotAllowed";
                             FAILWITH }
                           {  };
                         PUSH bool True;
                         DIG 2;
                         DUP;
                         DUG 3;
                         DIG 2;
                         DUP;
                         DUG 3;
                         PAIR;
                         DIG 4;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "AuthorExists";
                             FAILWITH }
                           {  };
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         CDR;
                         CDR;
                         DIG 2;
                         DUP;
                         DUG 3;
                         CDR;
                         CDR;
                         CAR;
                         DIG 2;
                         PUSH bool True;
                         SWAP;
                         UPDATE;
                         PAIR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         CAR;
                         PAIR;
                         SWAP;
                         CAR;
                         PAIR;
                         SWAP;
                         PAIR }
                       { DIG 2;
                         DROP;
                         DIG 4;
                         DROP;
                         PUSH bool True;
                         DIG 2;
                         DUP;
                         DUG 3;
                         DIG 5;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "ContractPaused";
                             FAILWITH }
                           {  };
                         SWAP;
                         DUP;
                         DUG 2;
                         CAR;
                         CDR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         GET;
                         IF_NONE
                           { PUSH string "UnknownPuzzle";
                             FAILWITH }
                           {  };
                         DUP;
                         CAR;
                         CAR;
                         CAR;
                         SENDER;
                         COMPARE;
                         NEQ;
                         IF
                           { PUSH string "OperationNotAllowed";
                             FAILWITH }
                           {  };
                         PUSH bool True;
                         SWAP;
                         DUP;
                         DUG 2;
                         DIG 5;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "WaitYourTurn";
                             FAILWITH }
                           {  };
                         DUP;
                         CAR;
                         CAR;
                         CDR;
                         DIG 2;
                         DUP;
                         DUG 3;
                         CAR;
                         GET;
                         IF_NONE
                           {  }
                           { DROP;
                             PUSH string "AlreadyClaimed";
                             FAILWITH };
                         PUSH int 600;
                         NOW;
                         ADD;
                         DIG 2;
                         CAR;
                         PAIR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         CAR;
                         PAIR;
                         SWAP;
                         CAR;
                         PAIR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         DIG 2;
                         DUP;
                         DUG 3;
                         CAR;
                         CDR;
                         DIG 2;
                         DUP;
                         CAR;
                         CDR;
                         CAR;
                         SWAP;
                         SOME;
                         SWAP;
                         UPDATE;
                         DIG 2;
                         CAR;
                         CAR;
                         PAIR;
                         PAIR;
                         SWAP;
                         PAIR } }
                   { DIG 3;
                     DROP;
                     IF_LEFT
                       { DIG 4;
                         DROP;
                         PUSH bool True;
                         DIG 2;
                         DUP;
                         DUG 3;
                         DIG 5;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "ContractPaused";
                             FAILWITH }
                           {  };
                         PUSH bool False;
                         DIG 2;
                         DUP;
                         DUG 3;
                         SENDER;
                         PAIR;
                         DIG 4;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "OperationNotAllowed";
                             FAILWITH }
                           {  };
                         SWAP;
                         DUP;
                         DUG 2;
                         CAR;
                         CDR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CAR;
                         CAR;
                         GET;
                         IF_NONE
                           {  }
                           { DROP;
                             PUSH string "PuzzleExists";
                             FAILWITH };
                         NOW;
                         SENDER;
                         PAIR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         CDR;
                         DIG 2;
                         DUP;
                         DUG 3;
                         CDR;
                         CAR;
                         PAIR;
                         PAIR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CAR;
                         CDR;
                         DIG 2;
                         DUP;
                         DUG 3;
                         CAR;
                         CAR;
                         PAIR;
                         EMPTY_MAP address nat;
                         SENDER;
                         PAIR;
                         PAIR;
                         PAIR;
                         DIG 2;
                         DUP;
                         DUG 3;
                         CDR;
                         DIG 3;
                         DUP;
                         DUG 4;
                         CAR;
                         CDR;
                         DIG 2;
                         DIG 3;
                         CAR;
                         CAR;
                         SWAP;
                         SOME;
                         SWAP;
                         UPDATE;
                         DIG 2;
                         CAR;
                         CAR;
                         PAIR;
                         PAIR;
                         SWAP;
                         PAIR }
                       { DROP;
                         SWAP;
                         DROP;
                         SWAP;
                         DROP;
                         PUSH bool False;
                         SWAP;
                         DUP;
                         DUG 2;
                         DIG 3;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "OperationNotAllowed";
                             FAILWITH }
                           {  };
                         DUP;
                         CDR;
                         SWAP;
                         CAR;
                         CDR;
                         PUSH bool True;
                         PAIR;
                         PAIR;
                         SWAP;
                         PAIR } } }
               { IF_LEFT
                   { IF_LEFT
                       { DIG 2;
                         DROP;
                         DIG 5;
                         DROP;
                         PUSH bool True;
                         DIG 2;
                         DUP;
                         DUG 3;
                         DIG 6;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "ContractPaused";
                             FAILWITH }
                           {  };
                         SWAP;
                         DUP;
                         DUG 2;
                         CAR;
                         CDR;
                         SWAP;
                         GET;
                         IF_NONE
                           { PUSH string "UnknownPuzzle";
                             FAILWITH }
                           {  };
                         DUP;
                         CAR;
                         CAR;
                         CDR;
                         SENDER;
                         GET;
                         IF_NONE
                           {  }
                           { DROP;
                             PUSH string "AlreadyClaimed";
                             FAILWITH };
                         PUSH bool True;
                         SWAP;
                         DUP;
                         DUG 2;
                         DIG 4;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "HandAlreadyRaised";
                             FAILWITH }
                           {  };
                         PUSH bool True;
                         SWAP;
                         DUP;
                         DUG 2;
                         DIG 4;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "WaitYourTurn";
                             FAILWITH }
                           {  };
                         PUSH int 600;
                         NOW;
                         ADD;
                         SENDER;
                         PAIR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         CAR;
                         PAIR;
                         SWAP;
                         CAR;
                         PAIR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         DIG 2;
                         DUP;
                         DUG 3;
                         CAR;
                         CDR;
                         DIG 2;
                         DUP;
                         CAR;
                         CDR;
                         CAR;
                         SWAP;
                         SOME;
                         SWAP;
                         UPDATE;
                         DIG 2;
                         CAR;
                         CAR;
                         PAIR;
                         PAIR;
                         SWAP;
                         PAIR }
                       { DIG 3;
                         DROP;
                         DIG 3;
                         DROP;
                         PUSH bool True;
                         DIG 2;
                         DUP;
                         DUG 3;
                         DIG 5;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "ContractPaused";
                             FAILWITH }
                           {  };
                         PUSH bool False;
                         DIG 2;
                         DUP;
                         DUG 3;
                         DIG 5;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "OperationNotAllowed";
                             FAILWITH }
                           {  };
                         PUSH bool False;
                         DIG 2;
                         DUP;
                         DUG 3;
                         DIG 2;
                         DUP;
                         DUG 3;
                         PAIR;
                         DIG 4;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "AuthorNotExists";
                             FAILWITH }
                           {  };
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         CDR;
                         CDR;
                         DIG 2;
                         DUP;
                         DUG 3;
                         CDR;
                         CDR;
                         CAR;
                         DIG 2;
                         PUSH bool False;
                         SWAP;
                         UPDATE;
                         PAIR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         CAR;
                         PAIR;
                         SWAP;
                         CAR;
                         PAIR;
                         SWAP;
                         PAIR } }
                   { DIG 3;
                     DROP;
                     DIG 3;
                     DROP;
                     IF_LEFT
                       { DROP;
                         DIG 3;
                         DROP;
                         PUSH bool True;
                         SWAP;
                         DUP;
                         DUG 2;
                         DIG 4;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "ContractPaused";
                             FAILWITH }
                           {  };
                         PUSH bool False;
                         SWAP;
                         DUP;
                         DUG 2;
                         SENDER;
                         PAIR;
                         DIG 3;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "OperationNotAllowed";
                             FAILWITH }
                           {  };
                         DUP;
                         CDR;
                         CDR;
                         CDR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         CDR;
                         CAR;
                         PUSH bool False;
                         SENDER;
                         UPDATE;
                         PAIR;
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         CAR;
                         PAIR;
                         SWAP;
                         CAR;
                         PAIR;
                         SWAP;
                         PAIR }
                       { DIG 2;
                         DROP;
                         DIG 2;
                         DROP;
                         PUSH bool False;
                         DIG 2;
                         DUP;
                         DUG 3;
                         DIG 4;
                         SWAP;
                         EXEC;
                         COMPARE;
                         EQ;
                         IF
                           { PUSH string "OperationNotAllowed";
                             FAILWITH }
                           {  };
                         SWAP;
                         DUP;
                         DUG 2;
                         CDR;
                         CDR;
                         SWAP;
                         PAIR;
                         SWAP;
                         CAR;
                         PAIR;
                         SWAP;
                         PAIR } } } }
           { DIG 2;
             DROP;
             DIG 3;
             DROP;
             IF_LEFT
               { IF_LEFT
                   { DIG 5;
                     DROP;
                     PUSH bool True;
                     DIG 2;
                     DUP;
                     DUG 3;
                     DIG 5;
                     SWAP;
                     EXEC;
                     COMPARE;
                     EQ;
                     IF
                       { PUSH string "ContractPaused";
                         FAILWITH }
                       {  };
                     SWAP;
                     DUP;
                     DUG 2;
                     CAR;
                     CDR;
                     SWAP;
                     DUP;
                     DUG 2;
                     CAR;
                     GET;
                     IF_NONE
                       { PUSH string "UnknownPuzzle";
                         FAILWITH }
                       {  };
                     PUSH bool True;
                     DIG 3;
                     DUP;
                     DUG 4;
                     DIG 6;
                     SWAP;
                     EXEC;
                     COMPARE;
                     EQ;
                     IF
                       { PUSH string "OperationNotAllowed";
                         FAILWITH }
                       {  };
                     DUP;
                     CAR;
                     CAR;
                     CAR;
                     SENDER;
                     COMPARE;
                     EQ;
                     IF
                       { PUSH string "OperationNotAllowed";
                         FAILWITH }
                       {  };
                     DUP;
                     CAR;
                     CAR;
                     CDR;
                     SIZE;
                     SWAP;
                     DUP;
                     DUG 2;
                     CDR;
                     CAR;
                     CAR;
                     SUB;
                     ABS;
                     PUSH nat 1;
                     SWAP;
                     DUP;
                     DUG 2;
                     COMPARE;
                     LT;
                     IF
                       { PUSH string "NothingClaimable";
                         FAILWITH }
                       {  };
                     SWAP;
                     DUP;
                     DUG 2;
                     CAR;
                     CAR;
                     CDR;
                     SENDER;
                     GET;
                     IF_NONE
                       {  }
                       { DROP;
                         PUSH string "AlreadyClaimed";
                         FAILWITH };
                     PUSH bool False;
                     DIG 2;
                     DUP;
                     DUG 3;
                     DIG 6;
                     SWAP;
                     EXEC;
                     COMPARE;
                     EQ;
                     PUSH nat 0;
                     DIG 3;
                     DUP;
                     DUG 4;
                     CAR;
                     CAR;
                     CDR;
                     SIZE;
                     COMPARE;
                     EQ;
                     AND;
                     IF
                       { PUSH string "WaitYourTurn";
                         FAILWITH }
                       {  };
                     PUSH nat 1;
                     DIG 2;
                     DUP;
                     DUG 3;
                     CDR;
                     CAR;
                     CAR;
                     ADD;
                     PAIR;
                     SWAP;
                     DUP;
                     DUG 2;
                     CDR;
                     CAR;
                     CDR;
                     DIG 3;
                     CDR;
                     DIG 2;
                     DUP;
                     CDR;
                     SWAP;
                     CAR;
                     DIG 3;
                     DUG 2;
                     SUB;
                     ABS;
                     DIG 2;
                     PUSH int 1;
                     SWAP;
                     PAIR;
                     SWAP;
                     LAMBDA
                       (pair nat (pair bytes int))
                       (pair bool (pair bytes int))
                       { DUP;
                         CDR;
                         SWAP;
                         CAR;
                         SWAP;
                         DUP;
                         CDR;
                         DIG 2;
                         INT;
                         SWAP;
                         DUP;
                         DUG 2;
                         COMPARE;
                         LE;
                         IF
                           { PUSH int 1;
                             ADD;
                             SWAP;
                             CAR;
                             BLAKE2B;
                             PAIR;
                             PUSH bool True;
                             PAIR }
                           { DROP;
                             PUSH bool False;
                             PAIR } };
                     SWAP;
                     APPLY;
                     SWAP;
                     PUSH bool True;
                     LOOP { DIP { DUP };
                            EXEC;
                            DUP;
                            CDR;
                            SWAP;
                            CAR };
                     SWAP;
                     DROP;
                     CAR;
                     COMPARE;
                     EQ;
                     IF
                       {  }
                       { PUSH string "InvalidProof";
                         FAILWITH };
                     PUSH nat 1;
                     SWAP;
                     DUP;
                     DUG 2;
                     CAR;
                     CAR;
                     CDR;
                     SIZE;
                     ADD;
                     SWAP;
                     DUP;
                     DUG 2;
                     CDR;
                     DIG 2;
                     DUP;
                     DUG 3;
                     CAR;
                     CDR;
                     DIG 3;
                     DUP;
                     DUG 4;
                     CAR;
                     CAR;
                     CDR;
                     DIG 3;
                     DUP;
                     DUG 4;
                     SOME;
                     SENDER;
                     UPDATE;
                     DIG 4;
                     CAR;
                     CAR;
                     CAR;
                     PAIR;
                     PAIR;
                     PAIR;
                     DIG 2;
                     DUP;
                     DUG 3;
                     CDR;
                     DIG 3;
                     DUP;
                     DUG 4;
                     CAR;
                     CDR;
                     DIG 2;
                     DUP;
                     DUP;
                     DUG 4;
                     CAR;
                     CDR;
                     CAR;
                     SWAP;
                     SOME;
                     SWAP;
                     UPDATE;
                     DIG 4;
                     CAR;
                     CAR;
                     PAIR;
                     PAIR;
                     SWAP;
                     CAR;
                     CDR;
                     CAR;
                     DIG 2;
                     SENDER;
                     PAIR;
                     PAIR;
                     SWAP;
                     DUP;
                     DUG 2;
                     CDR;
                     CAR;
                     CONTRACT %grantReward (pair (pair (address %addr) (nat %claim)) (nat %puzzle_id));
                     IF_NONE
                       { PUSH string "bad address for get_entrypoint";
                         FAILWITH }
                       {  };
                     PUSH mutez 0;
                     DIG 2;
                     TRANSFER_TOKENS;
                     SWAP;
                     NIL operation;
                     DIG 2;
                     CONS;
                     PAIR }
                   { DROP;
                     SWAP;
                     DROP;
                     SWAP;
                     DROP;
                     PUSH bool False;
                     SWAP;
                     DUP;
                     DUG 2;
                     DIG 3;
                     SWAP;
                     EXEC;
                     COMPARE;
                     EQ;
                     IF
                       { PUSH string "OperationNotAllowed";
                         FAILWITH }
                       {  };
                     DUP;
                     CDR;
                     SWAP;
                     CAR;
                     CDR;
                     PUSH bool False;
                     PAIR;
                     PAIR;
                     SWAP;
                     PAIR } }
               { DIG 2;
                 DROP;
                 DIG 3;
                 DROP;
                 PUSH bool True;
                 DIG 2;
                 DUP;
                 DUG 3;
                 DIG 4;
                 SWAP;
                 EXEC;
                 COMPARE;
                 EQ;
                 IF
                   { PUSH string "ContractPaused";
                     FAILWITH }
                   {  };
                 SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 CDR;
                 SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 CAR;
                 GET;
                 IF_NONE
                   { PUSH string "UnknownPuzzle";
                     FAILWITH }
                   {  };
                 DUP;
                 CAR;
                 CAR;
                 CAR;
                 SENDER;
                 COMPARE;
                 NEQ;
                 IF
                   { PUSH string "OperationNotAllowed";
                     FAILWITH }
                   {  };
                 DUP;
                 CAR;
                 CAR;
                 CDR;
                 SIZE;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CDR;
                 CAR;
                 COMPARE;
                 LT;
                 IF
                   { PUSH string "OperationNotAllowed";
                     FAILWITH }
                   {  };
                 DUP;
                 CDR;
                 CDR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CDR;
                 CDR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CDR;
                 CAR;
                 CAR;
                 PAIR;
                 PAIR;
                 SWAP;
                 CAR;
                 PAIR;
                 DUP;
                 CDR;
                 CDR;
                 SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 CAR;
                 CDR;
                 DIG 3;
                 DUP;
                 DUG 4;
                 CDR;
                 CAR;
                 PAIR;
                 PAIR;
                 SWAP;
                 CAR;
                 PAIR;
                 DUP;
                 CDR;
                 DIG 2;
                 CAR;
                 CDR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CAR;
                 CDR;
                 CAR;
                 PAIR;
                 DIG 2;
                 CAR;
                 CAR;
                 PAIR;
                 PAIR;
                 SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CAR;
                 CDR;
                 DIG 2;
                 DUP;
                 CAR;
                 CDR;
                 CAR;
                 SWAP;
                 SOME;
                 SWAP;
                 UPDATE;
                 DIG 2;
                 CAR;
                 CAR;
                 PAIR;
                 PAIR;
                 SWAP;
                 PAIR } } };
}
