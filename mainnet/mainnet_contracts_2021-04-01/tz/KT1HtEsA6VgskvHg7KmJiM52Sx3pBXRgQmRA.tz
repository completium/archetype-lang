{
  storage (pair (pair (big_map %ledger nat address) (big_map %operators (pair address (pair address nat)) unit)) (big_map %token_metadata nat (pair (nat %token_id) (pair (string %symbol) (pair (string %name) (pair (nat %decimals) (map %extras string string)))))));
  parameter (or (or (pair %balance_of (list %requests (pair (address %owner) (nat %token_id))) (contract %callback (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))) (contract %token_metadata_registry address)) (or (list %transfer (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) (list %update_operators (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id))) (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id)))))));
  code { PUSH string "FA2_TOKEN_UNDEFINED";
         PUSH string "FA2_INSUFFICIENT_BALANCE";
         DIG 2;
         DUP;
         DUG 3;
         CDR;
         DIG 3;
         CAR;
         IF_LEFT
           { DIG 2;
             DROP;
             IF_LEFT
               { SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 CAR;
                 SWAP;
                 PAIR;
                 DUP;
                 CAR;
                 DUP;
                 CAR;
                 MAP { DIG 2;
                       DUP;
                       DUG 3;
                       CDR;
                       SWAP;
                       DUP;
                       DUG 2;
                       CDR;
                       GET;
                       IF_NONE
                         { DROP;
                           DIG 3;
                           DUP;
                           DUG 4;
                           FAILWITH }
                         { SWAP;
                           DUP;
                           DUG 2;
                           CAR;
                           SWAP;
                           COMPARE;
                           EQ;
                           IF
                             { PUSH nat 1 }
                             { PUSH nat 0 };
                           SWAP;
                           PAIR } };
                 DIG 2;
                 DROP;
                 DIG 3;
                 DROP;
                 SWAP;
                 CDR;
                 PUSH mutez 0;
                 DIG 2;
                 TRANSFER_TOKENS;
                 SWAP;
                 NIL operation;
                 DIG 2;
                 CONS;
                 PAIR }
               { DIG 2;
                 DROP;
                 PUSH mutez 0;
                 SELF;
                 ADDRESS;
                 TRANSFER_TOKENS;
                 SWAP;
                 NIL operation;
                 DIG 2;
                 CONS;
                 PAIR } }
           { IF_LEFT
               { SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 CAR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CAR;
                 CDR;
                 PAIR;
                 LAMBDA
                   (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                   unit
                   { DUP;
                     CAR;
                     CAR;
                     SWAP;
                     DUP;
                     DUG 2;
                     CAR;
                     CDR;
                     DUP;
                     DIG 2;
                     DUP;
                     DUG 3;
                     COMPARE;
                     EQ;
                     IF
                       { DROP 3;
                         UNIT }
                       { DIG 2;
                         DUP;
                         DUG 3;
                         CDR;
                         CDR;
                         DIG 3;
                         CDR;
                         CAR;
                         DIG 2;
                         PAIR;
                         DIG 2;
                         PAIR;
                         MEM;
                         IF
                           { UNIT }
                           { PUSH string "FA2_NOT_OPERATOR";
                             FAILWITH } } };
                 DIG 2;
                 PAIR;
                 PAIR;
                 DUP;
                 CDR;
                 CDR;
                 SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 CAR;
                 ITER { DUP;
                        DUG 2;
                        CDR;
                        ITER { DIG 3;
                               DUP;
                               DUG 4;
                               CDR;
                               CAR;
                               SWAP;
                               DUP;
                               DUG 2;
                               CDR;
                               CAR;
                               PAIR;
                               SENDER;
                               DIG 4;
                               DUP;
                               DUG 5;
                               CAR;
                               PAIR;
                               PAIR;
                               DIG 4;
                               DUP;
                               DUG 5;
                               CAR;
                               CDR;
                               SWAP;
                               EXEC;
                               DROP;
                               PUSH nat 0;
                               SWAP;
                               DUP;
                               DUG 2;
                               CDR;
                               CDR;
                               COMPARE;
                               EQ;
                               IF
                                 { DROP }
                                 { PUSH nat 1;
                                   SWAP;
                                   DUP;
                                   DUG 2;
                                   CDR;
                                   CDR;
                                   COMPARE;
                                   NEQ;
                                   IF
                                     { DROP 2;
                                       DIG 3;
                                       DUP;
                                       DUG 4;
                                       FAILWITH }
                                     { SWAP;
                                       DUP;
                                       DUG 2;
                                       SWAP;
                                       DUP;
                                       DUG 2;
                                       CDR;
                                       CAR;
                                       GET;
                                       IF_NONE
                                         { DROP 2;
                                           DIG 4;
                                           DUP;
                                           DUG 5;
                                           FAILWITH }
                                         { DIG 3;
                                           DUP;
                                           DUG 4;
                                           CAR;
                                           SWAP;
                                           COMPARE;
                                           NEQ;
                                           IF
                                             { DROP 2;
                                               DIG 3;
                                               DUP;
                                               DUG 4;
                                               FAILWITH }
                                             { DUP;
                                               DUG 2;
                                               CAR;
                                               SOME;
                                               DIG 2;
                                               CDR;
                                               CAR;
                                               UPDATE } } } } };
                        SWAP;
                        DROP };
                 SWAP;
                 DROP;
                 DIG 2;
                 DROP;
                 DIG 2;
                 DROP;
                 DIP { DUP; CDR; SWAP; CAR; CDR };
                 PAIR;
                 PAIR;
                 NIL operation;
                 PAIR }
               { DIG 2;
                 DROP;
                 DIG 2;
                 DROP;
                 SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 CDR;
                 SWAP;
                 PAIR;
                 SENDER;
                 SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 DIG 2;
                 CAR;
                 ITER { SWAP;
                        PAIR;
                        DUP;
                        CDR;
                        DIG 2;
                        DUP;
                        DUG 3;
                        SWAP;
                        DUP;
                        DUG 2;
                        IF_LEFT
                          {  }
                          {  };
                        CAR;
                        COMPARE;
                        EQ;
                        IF
                          { UNIT }
                          { PUSH string "FA2_NOT_OWNER";
                            FAILWITH };
                        DROP;
                        SWAP;
                        CAR;
                        SWAP;
                        IF_LEFT
                          { SWAP;
                            UNIT;
                            SOME;
                            DIG 2;
                            DUP;
                            DUG 3;
                            CDR;
                            CDR;
                            DIG 3;
                            DUP;
                            DUG 4;
                            CDR;
                            CAR;
                            PAIR;
                            DIG 3;
                            CAR;
                            PAIR;
                            UPDATE }
                          { DUP;
                            DUG 2;
                            CDR;
                            CDR;
                            DIG 2;
                            DUP;
                            DUG 3;
                            CDR;
                            CAR;
                            PAIR;
                            DIG 2;
                            CAR;
                            PAIR;
                            NONE unit;
                            SWAP;
                            UPDATE } };
                 SWAP;
                 DROP;
                 DIP { DUP; CDR; SWAP; CAR; CAR };
                 SWAP;
                 PAIR;
                 PAIR;
                 NIL operation;
                 PAIR } } };
}
