{
  storage (pair (pair (address %issuer) (pair (address %objkt) (nat %objkt_amount))) (pair (pair (nat %objkt_id) (bool %paused)) (pair (address %protocol) (mutez %tz_per_objkt))));
  parameter (or (unit %collect) (unit %redeem_objkts));
  code { DUP;
         CDR;
         SWAP;
         CAR;
         IF_LEFT
           { DROP;
             DUP;
             CDR;
             CAR;
             CDR;
             IF
               { PUSH string "WrongCondition: ~ self.data.paused";
                 FAILWITH }
               {  };
             DUP;
             CDR;
             CDR;
             CAR;
             CONTRACT %swap_objkt (pair (nat %objkt_amount) (pair (nat %objkt_id) (address %to_)));
             IF_NONE
               { PUSH int 678;
                 FAILWITH }
               {  };
             NIL operation;
             SWAP;
             PUSH mutez 0;
             SENDER;
             DIG 4;
             DUP;
             DUG 5;
             CDR;
             CAR;
             CAR;
             PAIR;
             DIG 4;
             DUP;
             DUG 5;
             CDR;
             CDR;
             CDR;
             AMOUNT;
             EDIV;
             IF_NONE
               { PUSH int 679;
                 FAILWITH }
               {  };
             CAR;
             PAIR;
             TRANSFER_TOKENS;
             CONS;
             SWAP;
             DUP;
             DUG 2;
             CAR;
             CAR;
             CONTRACT unit;
             IF_NONE
               { PUSH int 681;
                 FAILWITH }
               {  };
             AMOUNT;
             UNIT;
             TRANSFER_TOKENS;
             CONS;
             SWAP;
             DUP;
             DUG 2;
             DUP;
             CDR;
             SWAP;
             CAR;
             DUP;
             CAR;
             SWAP;
             CDR;
             CAR;
             DIG 4;
             DUP;
             DUG 5;
             CDR;
             CDR;
             CDR;
             AMOUNT;
             EDIV;
             IF_NONE
               { PUSH int 683;
                 FAILWITH }
               {  };
             CAR;
             DIG 5;
             CAR;
             CDR;
             CDR;
             SUB;
             ABS;
             SWAP;
             PAIR;
             SWAP;
             PAIR;
             PAIR;
             SWAP }
           { DROP;
             DUP;
             CAR;
             CAR;
             SENDER;
             COMPARE;
             EQ;
             IF
               { DUP;
                 CDR;
                 CAR;
                 CDR;
                 NOT }
               { PUSH bool False };
             IF
               {  }
               { PUSH string "WrongCondition: (sp.sender == self.data.issuer) & (~ self.data.paused)";
                 FAILWITH };
             DUP;
             CAR;
             CDR;
             CAR;
             CONTRACT %transfer (list (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount))))));
             IF_NONE
               { PUSH int 688;
                 FAILWITH }
               {  };
             NIL operation;
             SWAP;
             PUSH mutez 0;
             NIL (pair (address %from_) (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))));
             NIL (pair (address %to_) (pair (nat %token_id) (nat %amount)));
             DIG 5;
             DUP;
             CAR;
             CDR;
             CDR;
             SWAP;
             DUP;
             DUG 7;
             CDR;
             CAR;
             CAR;
             PAIR;
             SENDER;
             PAIR;
             CONS;
             SELF;
             ADDRESS;
             PAIR;
             CONS;
             TRANSFER_TOKENS;
             CONS;
             SWAP;
             DUP;
             CAR;
             SWAP;
             CDR;
             DUP;
             CDR;
             SWAP;
             CAR;
             CAR;
             PUSH bool True;
             SWAP;
             PAIR;
             PAIR;
             SWAP;
             PAIR;
             SWAP };
         NIL operation;
         SWAP;
         ITER { CONS };
         PAIR };
}
