{ parameter
    (or (or (pair %invite (address %address) (pair (nat %goal) (string %meta)))
            (pair %mint_hicetnuncDAO (address %address) (pair (nat %amount) (nat %token_id))))
        (or (pair %originate_opensource (nat %goal) (string %meta)) (address %update_oracle))) ;
  storage
    (pair (pair (address %fa2) (big_map %opensources address nat))
          (pair (address %oracle) (pair (bool %paused) (nat %tk_counter)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CAR } ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.oracle" ; FAILWITH } ;
                 PUSH mutez 1000000 ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CAR } ;
                 MUL ;
                 COMPARE ;
                 GT ;
                 IF {}
                    { PUSH string "WrongCondition: sp.tez(params.goal) > sp.tez(1)" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR ; CDR } ;
                 DUP ;
                 NOW ;
                 PUSH int 3888000 ;
                 ADD ;
                 PAIR ;
                 SELF ;
                 ADDRESS ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 { CDR ; CAR } ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CDR } ;
                 PUSH mutez 1000000 ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 { CDR ; CAR } ;
                 MUL ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 PUSH mutez 0 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PUSH mutez 0 ;
                 NONE key_hash ;
                 CREATE_CONTRACT
                   { parameter
                       (or (or (unit %contribute) (option %oracle_delegation key_hash))
                           (or (address %update_oracle) (pair %withdraw (address %address) (mutez %amount)))) ;
                     storage
                       (pair (pair (pair (mutez %achieved) (address %admin)) (pair (mutez %goal) (string %meta)))
                             (pair (pair (address %oracle) (address %protocol))
                                   (pair (timestamp %time_lock) (nat %token_id)))) ;
                     code { DUP ;
                            CDR ;
                            SWAP ;
                            CAR ;
                            IF_LEFT
                              { IF_LEFT
                                  { DROP ;
                                    PUSH mutez 1000000 ;
                                    AMOUNT ;
                                    COMPARE ;
                                    GT ;
                                    IF {} { PUSH string "WrongCondition: sp.amount > sp.tez(1)" ; FAILWITH } ;
                                    DUP ;
                                    { CAR ; CAR ; CDR } ;
                                    SENDER ;
                                    COMPARE ;
                                    NEQ ;
                                    IF {}
                                       { PUSH string "WrongCondition: sp.sender != self.data.admin" ; FAILWITH } ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    AMOUNT ;
                                    ADD ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    PUSH mutez 1 ;
                                    AMOUNT ;
                                    EDIV ;
                                    { IF_NONE { PUSH int 38 ; FAILWITH } {} } ;
                                    CAR ;
                                    NIL operation ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    { CDR ; CAR ; CDR } ;
                                    CONTRACT %mint_hicetnuncDAO
                                      (pair (address %address) (pair (nat %amount) (nat %token_id))) ;
                                    { IF_NONE { PUSH int 39 ; FAILWITH } {} } ;
                                    PUSH mutez 0 ;
                                    DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    { CDR ; CDR ; CDR } ;
                                    DIG 4 ;
                                    PAIR ;
                                    SENDER ;
                                    PAIR ;
                                    TRANSFER_TOKENS ;
                                    CONS }
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    { CDR ; CAR ; CAR } ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF {}
                                       { PUSH string "WrongCondition: sp.sender == self.data.oracle" ; FAILWITH } ;
                                    SET_DELEGATE ;
                                    NIL operation ;
                                    SWAP ;
                                    CONS } }
                              { IF_LEFT
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    { CDR ; CAR ; CAR } ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF {}
                                       { PUSH string "WrongCondition: sp.sender == self.data.oracle" ; FAILWITH } ;
                                    SWAP ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    { CAR ; CDR } ;
                                    DIG 3 ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    NIL operation }
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    { CAR ; CAR ; CDR } ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF {}
                                       { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    { CDR ; CDR ; CAR } ;
                                    NOW ;
                                    COMPARE ;
                                    GT ;
                                    IF {}
                                       { PUSH string "WrongCondition: sp.now > self.data.time_lock" ; FAILWITH } ;
                                    DUP ;
                                    CAR ;
                                    CONTRACT unit ;
                                    NIL operation ;
                                    SWAP ;
                                    { IF_NONE { PUSH int 66 ; FAILWITH } {} } ;
                                    DIG 2 ;
                                    CDR ;
                                    UNIT ;
                                    TRANSFER_TOKENS ;
                                    CONS } } ;
                            PAIR } } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 NIL operation ;
                 SWAP ;
                 CONS ;
                 DIG 3 ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 4 ;
                 CDR ;
                 SOME ;
                 { IF_NONE { PUSH int 90 ; FAILWITH } {} } ;
                 DIG 5 ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 PUSH nat 1 ;
                 ADD ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP }
               { NIL operation ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CAR ; CAR } ;
                 CONTRACT %mint
                   (pair (pair (address %address) (nat %amount)) (pair (string %symbol) (nat %token_id))) ;
                 { IF_NONE { PUSH int 109 ; FAILWITH } {} } ;
                 PUSH mutez 0 ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 { CDR ; CDR } ;
                 PUSH string "hicetnuncDAO" ;
                 PAIR ;
                 DIG 4 ;
                 DUP ;
                 { CDR ; CAR } ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 TRANSFER_TOKENS ;
                 CONS } }
           { IF_LEFT
               { PUSH bool False ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CDR ; CAR } ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "WrongCondition: self.data.paused == False" ; FAILWITH } ;
                 PUSH mutez 1000000 ;
                 DUP ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CAR ;
                 MUL ;
                 COMPARE ;
                 GT ;
                 IF {}
                    { PUSH string "WrongCondition: sp.tez(params.goal) > sp.tez(1)" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR ; CDR } ;
                 DUP ;
                 NOW ;
                 PUSH int 3888000 ;
                 ADD ;
                 PAIR ;
                 SELF ;
                 ADDRESS ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 { CDR ; CAR } ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 PUSH mutez 1000000 ;
                 DIG 4 ;
                 CAR ;
                 MUL ;
                 PAIR ;
                 SENDER ;
                 PUSH mutez 0 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 PUSH mutez 0 ;
                 NONE key_hash ;
                 CREATE_CONTRACT
                   { parameter
                       (or (or (unit %contribute) (option %oracle_delegation key_hash))
                           (or (address %update_oracle) (pair %withdraw (address %address) (mutez %amount)))) ;
                     storage
                       (pair (pair (pair (mutez %achieved) (address %admin)) (pair (mutez %goal) (string %meta)))
                             (pair (pair (address %oracle) (address %protocol))
                                   (pair (timestamp %time_lock) (nat %token_id)))) ;
                     code { DUP ;
                            CDR ;
                            SWAP ;
                            CAR ;
                            IF_LEFT
                              { IF_LEFT
                                  { DROP ;
                                    PUSH mutez 1000000 ;
                                    AMOUNT ;
                                    COMPARE ;
                                    GT ;
                                    IF {} { PUSH string "WrongCondition: sp.amount > sp.tez(1)" ; FAILWITH } ;
                                    DUP ;
                                    { CAR ; CAR ; CDR } ;
                                    SENDER ;
                                    COMPARE ;
                                    NEQ ;
                                    IF {}
                                       { PUSH string "WrongCondition: sp.sender != self.data.admin" ; FAILWITH } ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    AMOUNT ;
                                    ADD ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    PUSH mutez 1 ;
                                    AMOUNT ;
                                    EDIV ;
                                    { IF_NONE { PUSH int 38 ; FAILWITH } {} } ;
                                    CAR ;
                                    NIL operation ;
                                    DIG 2 ;
                                    DUP ;
                                    DUG 3 ;
                                    { CDR ; CAR ; CDR } ;
                                    CONTRACT %mint_hicetnuncDAO
                                      (pair (address %address) (pair (nat %amount) (nat %token_id))) ;
                                    { IF_NONE { PUSH int 39 ; FAILWITH } {} } ;
                                    PUSH mutez 0 ;
                                    DIG 4 ;
                                    DUP ;
                                    DUG 5 ;
                                    { CDR ; CDR ; CDR } ;
                                    DIG 4 ;
                                    PAIR ;
                                    SENDER ;
                                    PAIR ;
                                    TRANSFER_TOKENS ;
                                    CONS }
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    { CDR ; CAR ; CAR } ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF {}
                                       { PUSH string "WrongCondition: sp.sender == self.data.oracle" ; FAILWITH } ;
                                    SET_DELEGATE ;
                                    NIL operation ;
                                    SWAP ;
                                    CONS } }
                              { IF_LEFT
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    { CDR ; CAR ; CAR } ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF {}
                                       { PUSH string "WrongCondition: sp.sender == self.data.oracle" ; FAILWITH } ;
                                    SWAP ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    { CAR ; CDR } ;
                                    DIG 3 ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    NIL operation }
                                  { SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    { CAR ; CAR ; CDR } ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF {}
                                       { PUSH string "WrongCondition: sp.sender == self.data.admin" ; FAILWITH } ;
                                    SWAP ;
                                    DUP ;
                                    DUG 2 ;
                                    { CDR ; CDR ; CAR } ;
                                    NOW ;
                                    COMPARE ;
                                    GT ;
                                    IF {}
                                       { PUSH string "WrongCondition: sp.now > self.data.time_lock" ; FAILWITH } ;
                                    DUP ;
                                    CAR ;
                                    CONTRACT unit ;
                                    NIL operation ;
                                    SWAP ;
                                    { IF_NONE { PUSH int 66 ; FAILWITH } {} } ;
                                    DIG 2 ;
                                    CDR ;
                                    UNIT ;
                                    TRANSFER_TOKENS ;
                                    CONS } } ;
                            PAIR } } ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 NIL operation ;
                 SWAP ;
                 CONS ;
                 DIG 3 ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DIG 4 ;
                 CDR ;
                 SOME ;
                 { IF_NONE { PUSH int 90 ; FAILWITH } {} } ;
                 DIG 5 ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 PUSH nat 1 ;
                 ADD ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CAR } ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {}
                    { PUSH string "WrongCondition: sp.sender == self.data.oracle" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CDR } ;
                 DIG 2 ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 NIL operation } } ;
         PAIR } }