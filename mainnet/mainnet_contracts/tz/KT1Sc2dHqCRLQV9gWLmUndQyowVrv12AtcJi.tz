{
  storage (pair (key %coldOwnerKey) (pair (address %ownerKey) (big_map %userToWallet key_hash (pair (mutez %balance) (nat %nonce)))));
  parameter (or (pair %changeOwner (address %newOwnerKey) (signature %signedMessage)) (or (key_hash %feedUserAccount) (pair %sendFunds (pair (mutez %amount) (mutez %feeAmount)) (pair (address %receiver) (pair (signature %signedMessage) (key %userPublicKey))))));
  code { DUP;
         CDR;
         SWAP;
         CAR;
         IF_LEFT
           { SWAP;
             DUP;
             DUG 2;
             CDR;
             CAR;
             SENDER;
             COMPARE;
             EQ;
             IF
               {  }
               { PUSH string "WrongCondition: sp.sender == self.data.ownerKey";
                 FAILWITH };
             DUP;
             CAR;
             PACK;
             SWAP;
             DUP;
             DUG 2;
             CDR;
             DIG 3;
             DUP;
             DUG 4;
             CAR;
             CHECK_SIGNATURE;
             IF
               {  }
               { PUSH string "WrongCondition: sp.check_signature(self.data.coldOwnerKey, params.signedMessage, sp.pack(params.newOwnerKey))";
                 FAILWITH };
             SWAP;
             DUP;
             CAR;
             SWAP;
             CDR;
             CDR;
             DIG 2;
             CAR;
             PAIR;
             SWAP;
             PAIR;
             NIL operation }
           { IF_LEFT
               { SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 CDR;
                 SWAP;
                 DUP;
                 DUG 2;
                 MEM;
                 IF
                   {  }
                   { SWAP;
                     DUP;
                     CAR;
                     SWAP;
                     CDR;
                     DUP;
                     CAR;
                     SWAP;
                     CDR;
                     PUSH (option (pair (mutez %balance) (nat %nonce))) (Some (Pair 0 0));
                     DIG 4;
                     DUP;
                     DUG 5;
                     UPDATE;
                     SWAP;
                     PAIR;
                     SWAP;
                     PAIR;
                     SWAP };
                 SWAP;
                 DUP;
                 DUG 2;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 DUP;
                 DIG 4;
                 DUP;
                 DUG 2;
                 GET;
                 IF_NONE
                   { PUSH string "set_in_top-any";
                     FAILWITH }
                   {  };
                 CDR;
                 AMOUNT;
                 DIG 6;
                 CDR;
                 CDR;
                 DIG 3;
                 DUP;
                 DUG 4;
                 GET;
                 IF_NONE
                   { PUSH string "Get-item:39";
                     FAILWITH }
                   {  };
                 CAR;
                 ADD;
                 PAIR;
                 SOME;
                 SWAP;
                 UPDATE;
                 SWAP;
                 PAIR;
                 SWAP;
                 PAIR;
                 NIL operation }
               { SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 CAR;
                 SENDER;
                 COMPARE;
                 EQ;
                 IF
                   {  }
                   { PUSH string "WrongCondition: sp.sender == self.data.ownerKey";
                     FAILWITH };
                 SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 CDR;
                 SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 CDR;
                 CDR;
                 HASH_KEY;
                 MEM;
                 IF
                   {  }
                   { PUSH string "WrongCondition: self.data.userToWallet.contains(sp.hash_key(params.userPublicKey))";
                     FAILWITH };
                 DUP;
                 CDR;
                 CAR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CDR;
                 CDR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CDR;
                 CDR;
                 CDR;
                 HASH_KEY;
                 GET;
                 IF_NONE
                   { PUSH string "Get-item:56";
                     FAILWITH }
                   {  };
                 CDR;
                 PAIR;
                 SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 CAR;
                 PAIR;
                 PACK;
                 SWAP;
                 DUP;
                 DUG 2;
                 CDR;
                 CDR;
                 CAR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CDR;
                 CDR;
                 CDR;
                 CHECK_SIGNATURE;
                 IF
                   {  }
                   { PUSH string "WrongCondition: sp.check_signature(params.userPublicKey, params.signedMessage, sp.pack(sp.record(a = params.amount, c = self.data.userToWallet[sp.hash_key(params.userPublicKey)].nonce, r = params.receiver)))";
                     FAILWITH };
                 DUP;
                 CAR;
                 CDR;
                 SWAP;
                 DUP;
                 DUG 2;
                 CAR;
                 CAR;
                 ADD;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CDR;
                 CDR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CDR;
                 CDR;
                 CDR;
                 HASH_KEY;
                 GET;
                 IF_NONE
                   { PUSH string "Get-item:56";
                     FAILWITH }
                   {  };
                 CAR;
                 COMPARE;
                 GE;
                 IF
                   {  }
                   { PUSH string "WrongCondition: self.data.userToWallet[sp.hash_key(params.userPublicKey)].balance >= (params.amount + params.feeAmount)";
                     FAILWITH };
                 DUP;
                 CAR;
                 CDR;
                 PUSH mutez 0;
                 SWAP;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CAR;
                 CAR;
                 ADD;
                 BALANCE;
                 SUB;
                 COMPARE;
                 GE;
                 IF
                   {  }
                   { PUSH string "WrongCondition: (sp.balance - (params.amount + params.feeAmount)) >= sp.tez(0)";
                     FAILWITH };
                 SWAP;
                 DUP;
                 DUG 2;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 DUP;
                 DIG 4;
                 DUP;
                 DUG 5;
                 CDR;
                 CDR;
                 CDR;
                 HASH_KEY;
                 DUP;
                 DUG 2;
                 GET;
                 IF_NONE
                   { PUSH string "set_in_top-any";
                     FAILWITH }
                   {  };
                 CDR;
                 DIG 5;
                 DUP;
                 DUG 6;
                 CAR;
                 CDR;
                 DIG 6;
                 DUP;
                 DUG 7;
                 CAR;
                 CAR;
                 ADD;
                 DIG 7;
                 CDR;
                 CDR;
                 DIG 7;
                 DUP;
                 DUG 8;
                 CDR;
                 CDR;
                 CDR;
                 HASH_KEY;
                 GET;
                 IF_NONE
                   { PUSH string "Get-item:56";
                     FAILWITH }
                   {  };
                 CAR;
                 SUB;
                 PAIR;
                 SOME;
                 SWAP;
                 UPDATE;
                 SWAP;
                 PAIR;
                 SWAP;
                 PAIR;
                 DUP;
                 DUG 2;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 DUP;
                 DIG 4;
                 DUP;
                 DUG 5;
                 CDR;
                 CDR;
                 CDR;
                 HASH_KEY;
                 DUP;
                 DUG 2;
                 GET;
                 IF_NONE
                   { PUSH string "set_in_top-any";
                     FAILWITH }
                   {  };
                 CAR;
                 PUSH nat 1;
                 DIG 7;
                 CDR;
                 CDR;
                 DIG 7;
                 DUP;
                 DUG 8;
                 CDR;
                 CDR;
                 CDR;
                 HASH_KEY;
                 GET;
                 IF_NONE
                   { PUSH string "Get-item:56";
                     FAILWITH }
                   {  };
                 CDR;
                 ADD;
                 SWAP;
                 PAIR;
                 SOME;
                 SWAP;
                 UPDATE;
                 SWAP;
                 PAIR;
                 SWAP;
                 PAIR;
                 SWAP;
                 DUP;
                 CDR;
                 CAR;
                 CONTRACT unit;
                 NIL operation;
                 SWAP;
                 IF_NONE
                   { UNIT;
                     FAILWITH }
                   {  };
                 DIG 2;
                 DUP;
                 DUG 3;
                 CAR;
                 CAR;
                 UNIT;
                 TRANSFER_TOKENS;
                 CONS;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CDR;
                 CAR;
                 CONTRACT unit;
                 IF_NONE
                   { UNIT;
                     FAILWITH }
                   {  };
                 DIG 2;
                 CAR;
                 CDR;
                 UNIT;
                 TRANSFER_TOKENS;
                 CONS } };
         NIL operation;
         SWAP;
         ITER { CONS };
         PAIR };
}
