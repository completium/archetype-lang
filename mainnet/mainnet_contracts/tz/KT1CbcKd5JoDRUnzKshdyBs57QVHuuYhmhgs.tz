{
  storage (pair key_hash (pair :storage (timestamp %auction_end) (pair (mutez %highest_bid) (key_hash %bidder))));
  parameter (or (lambda %do unit (list operation)) (key_hash %default));
  code { DUP;
         CAR;
         IF_LEFT
           { PUSH mutez 0;
             AMOUNT;
             COMPARE;
             EQ;
             IF
               {  }
               { UNIT;
                 FAILWITH };
             DIP { DUP };
             SWAP;
             CDR;
             CAR;
             IMPLICIT_ACCOUNT;
             ADDRESS;
             SENDER;
             COMPARE;
             NEQ;
             IF
               { SENDER;
                 PUSH string "Only the owner can operate.";
                 PAIR;
                 FAILWITH }
               { UNIT;
                 EXEC;
                 DIP { CDR };
                 PAIR } }
           { DIP { CDR; DUP; CDR };
             PAIR;
             DUP;
             DIP { CDR };
             CAR;
             DIP { DUP };
             SWAP;
             CAR;
             NOW;
             COMPARE;
             GT;
             IF
               { PUSH string "Auction has already ended";
                 FAILWITH }
               { UNIT };
             DROP;
             AMOUNT;
             DIP { DIP { DUP }; SWAP };
             SWAP;
             CDR;
             CAR;
             DIP { DUP };
             SWAP;
             COMPARE;
             LE;
             IF
               { PUSH string "Insufficient bid";
                 FAILWITH }
               { UNIT };
             DROP;
             DIP { DIP { DUP }; SWAP };
             SWAP;
             CDR;
             CDR;
             IMPLICIT_ACCOUNT;
             DIP { DIP { DIP { DUP }; SWAP }; SWAP };
             SWAP;
             CDR;
             CAR;
             UNIT;
             TRANSFER_TOKENS;
             DIP { DIP { DIP { DUP }; SWAP }; SWAP };
             SWAP;
             DUP;
             CAR;
             SWAP;
             CDR;
             CDR;
             DIP { DIP { DIP { DUP }; SWAP }; SWAP };
             SWAP;
             DIP { DIP { DIP { DIP { DROP } } } };
             DIP { DIP { DIP { DIP { DIP { DROP } } } } };
             PAIR;
             SWAP;
             PAIR;
             DUP;
             CAR;
             SWAP;
             CDR;
             CAR;
             DIP { DIP { DIP { DUP }; SWAP }; SWAP };
             SWAP;
             DIP { DIP { DIP { DIP { DROP } } } };
             SWAP;
             PAIR;
             SWAP;
             PAIR;
             NIL operation;
             DIP { DIP { DUP }; SWAP };
             SWAP;
             DIP { DIP { DIP { DROP } } };
             CONS;
             PAIR;
             SWAP;
             CAR;
             SWAP;
             DUP;
             CAR;
             DIP { CDR };
             DIP { SWAP; PAIR };
             PAIR } };
}
