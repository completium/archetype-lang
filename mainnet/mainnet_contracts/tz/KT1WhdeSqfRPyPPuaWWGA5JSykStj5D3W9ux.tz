{ storage
    (pair (pair (pair (address %administrator) (pair (nat %all_players) (nat %all_tokens)))
                (pair (big_map %ledger address (set nat))
                      (pair (map %matches
                               nat
                               (pair (pair (bool %active) (pair (string %date) (timestamp %ends)))
                                     (pair (bool %finished) (pair (string %teamA) (string %teamB)))))
                            (string %metadata_string))))
          (pair (pair (big_map %operators (pair (address %owner) (address %operator)) unit)
                      (pair (bool %paused)
                            (big_map %players nat (pair (nat %player_id) (pair (string %name) (string %metadata))))))
                (pair (map %selected_tokens address (set nat))
                      (pair (big_map %tokens
                               nat
                               (pair (nat %token_id)
                                     (pair (nat %card_score)
                                           (pair (bool %inMatch) (pair (nat %player_id) (map %extras string string))))))
                            (big_map %tokens_on_sale nat (pair (address %owner) (mutez %price))))))) ;
  parameter
    (or (or (or (pair %activateMatch (timestamp %ends) (nat %match_id))
                (or (pair %addMatch
                       (pair (string %date) (nat %match_id))
                       (pair (string %teamA) (string %teamB)))
                    (pair %addPlayer
                       (pair (address %address) (int %amount))
                       (pair (string %metadata) (pair (string %name) (nat %player_id))))))
            (or (or (nat %buyToken) (nat %endMatch))
                (or (pair %mint
                       (pair (address %address) (int %amount))
                       (pair (nat %player_id) (nat %token_id)))
                    (pair %selectTeam (nat %match_id) (list %tokens nat)))))
        (or (or (or (pair %sellToken (mutez %price) (nat %token_id)) (address %set_administrator))
                (or (bool %set_pause)
                    (pair %token_metadata
                       (list %token_ids nat)
                       (lambda %handler
                          (list (pair (nat %token_id)
                                      (pair (nat %card_score)
                                            (pair (bool %inMatch) (pair (nat %player_id) (map %extras string string))))))
                          unit))))
            (or (or (contract %token_metadata_registry address)
                    (list %transfer
                       (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id))))))
                (or (nat %unlistToken)
                    (list %update_operators
                       (or (pair %add_operator (address %owner) (address %operator))
                           (pair %remove_operator (address %owner) (address %operator)))))))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Only Admin Can Start/End a Match." ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     MEM ;
                     IF {} { PUSH string "Match Does not exist." ; FAILWITH } ;
                     PUSH bool False ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 714 ; FAILWITH } {} ;
                     CAR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Match is already Active" ; FAILWITH } ;
                     PUSH bool False ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     GET ;
                     IF_NONE { PUSH int 716 ; FAILWITH } {} ;
                     CDR ;
                     CAR ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Match is finished." ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     ITER { CDR ;
                            CAR ;
                            CAR ;
                            PUSH bool True ;
                            COMPARE ;
                            EQ ;
                            IF { PUSH string "Two Matches Cannot be Active at the same time" ; FAILWITH }
                               {} } ;
                     SWAP ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 721 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     CDR ;
                     PUSH bool True ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     DIG 6 ;
                     DUP ;
                     DUG 7 ;
                     CDR ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH int 723 ; FAILWITH } {} ;
                     DUP ;
                     CDR ;
                     SWAP ;
                     CAR ;
                     DUP ;
                     CAR ;
                     SWAP ;
                     CDR ;
                     CAR ;
                     DIG 9 ;
                     CAR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     SWAP ;
                     PAIR ;
                     PAIR }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "Only Admin Can Start/End a Match." ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         MEM ;
                         IF { PUSH string "Match Already Exists." ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DIG 5 ;
                         DUP ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CAR ;
                         PAIR %teamA %teamB ;
                         PUSH bool False ;
                         PAIR %finished ;
                         PUSH timestamp "0" ;
                         DIG 8 ;
                         CAR ;
                         CAR ;
                         PAIR %date %ends ;
                         PUSH bool False ;
                         PAIR %active ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 632 ; FAILWITH } ;
                         DUP ;
                         CAR ;
                         CDR ;
                         PUSH int 1 ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "NFT-asset: amount <> 1" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "NFT-asset: cannot mint twice same token" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP ;
                         PUSH nat 1 ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         ADD ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         LE ;
                         IF { DROP } { SWAP ; DROP } ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         MEM ;
                         IF { DROP }
                            { SWAP ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DIG 5 ;
                              DUP ;
                              CDR ;
                              CDR ;
                              CDR ;
                              SWAP ;
                              DUP ;
                              CDR ;
                              CAR ;
                              SWAP ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              PAIR %name %metadata ;
                              DIG 7 ;
                              CDR ;
                              CDR ;
                              CDR ;
                              PAIR %player_id ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP ;
                              PAIR } } } ;
                 NIL operation }
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF {} { PUSH string "Invalid Token ID." ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF {} { PUSH string "Token is not on Sale." ; FAILWITH } ;
                         SENDER ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         GET ;
                         IF_NONE { PUSH int 674 ; FAILWITH } {} ;
                         CAR ;
                         COMPARE ;
                         NEQ ;
                         IF {} { PUSH string "Owner cannot buy already owned token." ; FAILWITH } ;
                         AMOUNT ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         GET ;
                         IF_NONE { PUSH int 673 ; FAILWITH } {} ;
                         CDR ;
                         COMPARE ;
                         LE ;
                         IF {} { PUSH string "Pay proper amount for the token." ; FAILWITH } ;
                         NIL operation ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         GET ;
                         IF_NONE { PUSH int 674 ; FAILWITH } {} ;
                         CAR ;
                         CONTRACT unit ;
                         IF_NONE { PUSH int 679 ; FAILWITH } {} ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         GET ;
                         IF_NONE { PUSH int 673 ; FAILWITH } {} ;
                         CDR ;
                         UNIT ;
                         TRANSFER_TOKENS ;
                         CONS ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         DIG 7 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         GET ;
                         IF_NONE { PUSH int 674 ; FAILWITH } {} ;
                         CAR ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 680 ; FAILWITH } {} ;
                         PUSH bool False ;
                         DIG 8 ;
                         DUP ;
                         DUG 9 ;
                         UPDATE ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         NONE (pair (address %owner) (mutez %price)) ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         MEM ;
                         IF { DIG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              SENDER ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 683 ; FAILWITH } {} ;
                              PUSH bool True ;
                              DIG 8 ;
                              UPDATE ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            { DIG 2 ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              PUSH (option (set nat)) (Some { 1 }) ;
                              SENDER ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              SENDER ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 686 ; FAILWITH } {} ;
                              PUSH bool True ;
                              DIG 8 ;
                              UPDATE ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "Only Admin Can Start/End a Match." ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF {} { PUSH string "Match does not exists." ; FAILWITH } ;
                         PUSH bool True ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         GET ;
                         IF_NONE { PUSH int 732 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "Match is Not Active." ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         ITER { DUP ;
                                CDR ;
                                ITER { DIG 3 ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       SWAP ;
                                       CAR ;
                                       DUP ;
                                       DIG 6 ;
                                       DUP ;
                                       DUG 7 ;
                                       DUP ;
                                       DUG 2 ;
                                       GET ;
                                       IF_NONE { PUSH int 741 ; FAILWITH } {} ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       CDR ;
                                       PUSH bool False ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       SOME ;
                                       SWAP ;
                                       UPDATE ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       DUP ;
                                       DUG 4 ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       SWAP ;
                                       CAR ;
                                       DUP ;
                                       DIG 6 ;
                                       DUP ;
                                       DUG 2 ;
                                       GET ;
                                       IF_NONE { PUSH int 742 ; FAILWITH } {} ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       SWAP ;
                                       CAR ;
                                       DIG 11 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       DIG 4 ;
                                       DUP ;
                                       DUG 5 ;
                                       GET ;
                                       IF_NONE { PUSH int 737 ; FAILWITH } {} ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       ADD ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       SOME ;
                                       SWAP ;
                                       UPDATE ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       DUG 2 } ;
                                DIG 2 ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                NONE (set nat) ;
                                DIG 5 ;
                                CAR ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP } ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 7 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 744 ; FAILWITH } {} ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         PUSH bool False ;
                         PAIR ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         DIG 6 ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 745 ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         PUSH bool True ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         NIL operation } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 515 ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         LT ;
                         IF { PUSH string "NFT-asset: cannot mint twice same token" ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         MEM ;
                         IF {} { PUSH string "Invalid Player ID" ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CAR ;
                         DIG 5 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP ;
                         PUSH nat 1 ;
                         DIG 7 ;
                         DUP ;
                         DUG 8 ;
                         CDR ;
                         CDR ;
                         ADD ;
                         DUP ;
                         DUG 2 ;
                         COMPARE ;
                         LE ;
                         IF { DROP } { SWAP ; DROP } ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         MEM ;
                         IF { SWAP ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CAR ;
                              CAR ;
                              DUP ;
                              DUG 2 ;
                              GET ;
                              IF_NONE { PUSH int 529 ; FAILWITH } {} ;
                              PUSH bool True ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              CDR ;
                              UPDATE ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP }
                            { SWAP ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DIG 4 ;
                              DUP ;
                              DUG 5 ;
                              CAR ;
                              CAR ;
                              EMPTY_SET nat ;
                              PUSH bool True ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              CDR ;
                              UPDATE ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              PAIR ;
                              SWAP } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         MEM ;
                         IF { DROP }
                            { SWAP ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              SWAP ;
                              CDR ;
                              DUP ;
                              CDR ;
                              SWAP ;
                              CAR ;
                              DIG 5 ;
                              DUP ;
                              DUG 6 ;
                              CDR ;
                              CDR ;
                              EMPTY_MAP string string ;
                              DIG 7 ;
                              DUP ;
                              DUG 8 ;
                              CDR ;
                              CAR ;
                              PAIR %player_id %extras ;
                              PUSH bool False ;
                              PAIR %inMatch ;
                              PUSH nat 1 ;
                              PAIR %card_score ;
                              DIG 7 ;
                              CDR ;
                              CDR ;
                              PAIR %token_id ;
                              SOME ;
                              SWAP ;
                              UPDATE ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR ;
                              SWAP ;
                              PAIR } }
                       { PUSH bool True ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 749 ; FAILWITH } {} ;
                         CAR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "Match either does not exists or is inacitve." ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH int 751 ; FAILWITH } {} ;
                         CAR ;
                         CDR ;
                         CDR ;
                         PUSH timestamp "1601160863" ;
                         COMPARE ;
                         LE ;
                         IF {} { PUSH string "Fantasy Play for the match has ended." ; FAILWITH } ;
                         DUP ;
                         CDR ;
                         SIZE ;
                         PUSH nat 5 ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH string "Only Five Tokens are Allowed." ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         MEM ;
                         IF { PUSH string "You have already staked Cards for the match." ; FAILWITH }
                            {} ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         PUSH (option (set nat)) (Some {}) ;
                         SENDER ;
                         UPDATE ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         ITER { DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                CDR ;
                                CAR ;
                                SENDER ;
                                GET ;
                                IF_NONE { PUSH int 760 ; FAILWITH } {} ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                MEM ;
                                IF {} { PUSH string "You can only select owned tokens." ; FAILWITH } ;
                                DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CDR ;
                                CDR ;
                                CDR ;
                                CDR ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                MEM ;
                                IF { PUSH string "Cannot Play with a token on Sale. Unlist the token to continue." ;
                                     FAILWITH }
                                   {} ;
                                DIG 2 ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                DIG 6 ;
                                DUP ;
                                DUG 7 ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 764 ; FAILWITH } {} ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                CDR ;
                                PUSH bool True ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CAR ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CDR ;
                                SWAP ;
                                CAR ;
                                DUP ;
                                SENDER ;
                                DUP ;
                                DUG 2 ;
                                GET ;
                                IF_NONE { PUSH int 765 ; FAILWITH } {} ;
                                PUSH bool True ;
                                DIG 7 ;
                                UPDATE ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP ;
                                PAIR ;
                                SWAP } ;
                         DROP } ;
                     NIL operation } } }
           { IF_LEFT
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         MEM ;
                         IF {} { PUSH string "Invalid Token ID." ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SENDER ;
                         GET ;
                         IF_NONE { PUSH int 656 ; FAILWITH } {} ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         MEM ;
                         IF {} { PUSH string "Token Not Owned." ; FAILWITH } ;
                         PUSH bool False ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         GET ;
                         IF_NONE { PUSH int 658 ; FAILWITH } {} ;
                         CDR ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "Cannot Sell a Active Token. Please wait until match finishes." ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         MEM ;
                         IF { PUSH string "Token is Already on Sale." ; FAILWITH } {} ;
                         DUP ;
                         CAR ;
                         PUSH mutez 0 ;
                         COMPARE ;
                         NEQ ;
                         IF {} { PUSH string "Please Enter a valid price." ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DIG 5 ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         SENDER ;
                         PAIR %owner %price ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 510 ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         PAIR } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH int 505 ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         IF { PUSH int 591 ; FAILWITH } {} ;
                         DUP ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         MAP { DIG 3 ;
                               DUP ;
                               DUG 4 ;
                               CDR ;
                               CDR ;
                               CDR ;
                               CAR ;
                               SWAP ;
                               GET ;
                               IF_NONE { PUSH int 602 ; FAILWITH } {} } ;
                         EXEC ;
                         DROP 2 } } ;
                 NIL operation }
               { IF_LEFT
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         IF { PUSH int 585 ; FAILWITH } {} ;
                         NIL operation ;
                         SWAP ;
                         PUSH mutez 0 ;
                         SELF ;
                         ADDRESS ;
                         TRANSFER_TOKENS ;
                         CONS }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         IF { PUSH int 545 ; FAILWITH } {} ;
                         DUP ;
                         ITER { DIG 2 ;
                                DUP ;
                                DUG 3 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                SENDER ;
                                COMPARE ;
                                EQ ;
                                IF { PUSH bool True } { DUP ; CAR ; SENDER ; COMPARE ; EQ } ;
                                IF { PUSH bool True }
                                   { DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CDR ;
                                     CAR ;
                                     CAR ;
                                     SENDER ;
                                     DIG 2 ;
                                     DUP ;
                                     DUG 3 ;
                                     CAR ;
                                     PAIR %owner %operator ;
                                     MEM } ;
                                IF {} { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } ;
                                DUP ;
                                CDR ;
                                ITER { DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       CDR ;
                                       CDR ;
                                       CDR ;
                                       CAR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       MEM ;
                                       IF {} { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } ;
                                       DIG 3 ;
                                       DUP ;
                                       DUG 4 ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       DIG 2 ;
                                       DUP ;
                                       DUG 3 ;
                                       CAR ;
                                       GET ;
                                       IF_NONE { PUSH int 570 ; FAILWITH } {} ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CDR ;
                                       MEM ;
                                       IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                       DIG 3 ;
                                       DUP ;
                                       CDR ;
                                       SWAP ;
                                       CAR ;
                                       DUP ;
                                       CAR ;
                                       SWAP ;
                                       CDR ;
                                       DUP ;
                                       CDR ;
                                       SWAP ;
                                       CAR ;
                                       DUP ;
                                       DIG 6 ;
                                       DUP ;
                                       DUG 7 ;
                                       CAR ;
                                       DUP ;
                                       DUG 2 ;
                                       GET ;
                                       IF_NONE { PUSH int 576 ; FAILWITH } {} ;
                                       PUSH bool False ;
                                       DIG 7 ;
                                       DUP ;
                                       DUG 8 ;
                                       CDR ;
                                       UPDATE ;
                                       SOME ;
                                       SWAP ;
                                       UPDATE ;
                                       PAIR ;
                                       SWAP ;
                                       PAIR ;
                                       PAIR ;
                                       DUP ;
                                       DUG 4 ;
                                       CAR ;
                                       CDR ;
                                       CAR ;
                                       SWAP ;
                                       DUP ;
                                       DUG 2 ;
                                       CAR ;
                                       MEM ;
                                       IF { DIG 3 ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP ;
                                            DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            CAR ;
                                            DUP ;
                                            DUG 2 ;
                                            GET ;
                                            IF_NONE { PUSH int 578 ; FAILWITH } {} ;
                                            PUSH bool True ;
                                            DIG 7 ;
                                            CDR ;
                                            UPDATE ;
                                            SOME ;
                                            SWAP ;
                                            UPDATE ;
                                            PAIR ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            DUG 2 }
                                          { DIG 3 ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DIG 4 ;
                                            DUP ;
                                            DUG 5 ;
                                            CAR ;
                                            PUSH (option (set nat)) (Some { 1 }) ;
                                            SWAP ;
                                            UPDATE ;
                                            PAIR ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP ;
                                            CAR ;
                                            SWAP ;
                                            CDR ;
                                            DUP ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP ;
                                            DIG 5 ;
                                            DUP ;
                                            DUG 6 ;
                                            CAR ;
                                            DUP ;
                                            DUG 2 ;
                                            GET ;
                                            IF_NONE { PUSH int 581 ; FAILWITH } {} ;
                                            PUSH bool True ;
                                            DIG 7 ;
                                            CDR ;
                                            UPDATE ;
                                            SOME ;
                                            SWAP ;
                                            UPDATE ;
                                            PAIR ;
                                            SWAP ;
                                            PAIR ;
                                            PAIR ;
                                            DUG 2 } } ;
                                DROP } ;
                         DROP ;
                         NIL operation } }
                   { IF_LEFT
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF {} { PUSH string "Invalid Token ID." ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         MEM ;
                         IF {} { PUSH string "Token is not on Sale." ; FAILWITH } ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         GET ;
                         IF_NONE { PUSH int 694 ; FAILWITH } {} ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {}
                            { PUSH string "Only Token Owner can unlist the token from marketplace." ;
                              FAILWITH } ;
                         SWAP ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         DUP ;
                         CAR ;
                         SWAP ;
                         CDR ;
                         NONE (pair (address %owner) (mutez %price)) ;
                         DIG 6 ;
                         UPDATE ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { DUP ;
                         ITER { DUP ;
                                IF_LEFT
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { DIG 3 ; DUP ; DUG 4 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                    IF { SWAP ; DROP } { PUSH int 615 ; FAILWITH } ;
                                    DIG 2 ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DIG 4 ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    PAIR %owner %operator ;
                                    PUSH (option unit) (Some Unit) ;
                                    SWAP ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP }
                                  { DUP ;
                                    CAR ;
                                    SENDER ;
                                    COMPARE ;
                                    EQ ;
                                    IF { PUSH bool True }
                                       { DIG 3 ; DUP ; DUG 4 ; CAR ; CAR ; CAR ; SENDER ; COMPARE ; EQ } ;
                                    IF { SWAP ; DROP } { PUSH int 621 ; FAILWITH } ;
                                    DIG 2 ;
                                    DUP ;
                                    CAR ;
                                    SWAP ;
                                    CDR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    NONE unit ;
                                    DIG 5 ;
                                    DUP ;
                                    CDR ;
                                    SWAP ;
                                    CAR ;
                                    PAIR %owner %operator ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    SWAP ;
                                    PAIR ;
                                    SWAP } } ;
                         DROP } ;
                     NIL operation } } } ;
         PAIR } }