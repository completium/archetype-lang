{ parameter
    (pair (or (lambda unit operation) (set key_hash)) (pair nat (list (pair key signature)))) ;
  storage (pair (set key_hash) nat) ;
  code { AMOUNT ;
         PUSH mutez 0 ;
         COMPARE ;
         EQ ;
         IF {} { UNIT ; PUSH string "NonzeroAmountReceived" ; PAIR ; FAILWITH } ;
         DUP ;
         CAR ;
         DIP { CDR } ;
         DUP ;
         DIP { DIP { DUP ; CDR ; PUSH nat 1 ; ADD ; DUP } ;
               CDR ;
               CAR ;
               COMPARE ;
               EQ ;
               IF { DIP { DUP ; DIP { CAR } ; CDR } ; DIP { DROP } ; SWAP ; PAIR }
                  { UNIT ; PUSH string "InvalidNonce" ; PAIR ; FAILWITH } } ;
         DIP { DUP } ;
         SWAP ;
         DIP { DUP } ;
         SWAP ;
         DUP ;
         SELF ;
         ADDRESS ;
         DIP { DUP ; CDR ; CAR ; DIP { DUP ; CAR } ; PAIR } ;
         PAIR ;
         DIP { DROP } ;
         PACK ;
         SWAP ;
         CDR ;
         CDR ;
         DIP 2 { CAR } ;
         MAP { DUP ;
               CAR ;
               DIP { CDR } ;
               DIP 3 { DUP } ;
               DIG 3 ;
               DIP { DUP } ;
               SWAP ;
               DUP ;
               HASH_KEY ;
               DIP { SWAP } ;
               MEM ;
               IF { DROP } { PUSH string "InvalidSignature" ; PAIR ; FAILWITH } ;
               DIP 2 { DUP } ;
               DUP ;
               DIP { DUP ;
                     DIP { CHECK_SIGNATURE } ;
                     SWAP ;
                     IF { DROP } { PUSH string "InvalidSignature" ; PAIR ; FAILWITH } } ;
               HASH_KEY } ;
         DIP { DROP } ;
         DIP { EMPTY_SET key_hash } ;
         ITER { DIP { PUSH bool True } ; UPDATE } ;
         DIP {} ;
         DIP { SIZE } ;
         SIZE ;
         PUSH nat 2 ;
         MUL ;
         COMPARE ;
         GT ;
         IF {} { UNIT ; PUSH string "MajorityQuorumNotReached" ; PAIR ; FAILWITH } ;
         CAR ;
         IF_LEFT
           { UNIT ; EXEC ; DIP { NIL operation } ; CONS ; PAIR }
           { DIP { DUP ; DIP { CDR } ; CAR } ;
             DIP { DROP } ;
             PAIR ;
             NIL operation ;
             PAIR } } }