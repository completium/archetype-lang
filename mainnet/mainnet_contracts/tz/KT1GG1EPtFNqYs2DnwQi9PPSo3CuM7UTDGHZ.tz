{
  storage (big_map address (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role)));
  parameter (or (or (or (pair %append (pair (pair (option %accreditation nat) (address %address)) (pair (string %domicile) (bool %frozen))) (nat %role)) (address %remove)) (or (pair %setAccreditation (option %accreditation nat) (address %address)) (pair %setDomicile (address %address) (string %domicile)))) (or (or (pair %setFrozen (address %address) (bool %frozen)) (address %validateAccount)) (pair %validateAccounts (pair (pair (pair %addresses address address) (pair %balances nat nat)) (pair (bool %issuance) (pair %values nat nat))) (contract %callback (pair (pair (pair (pair %accounts (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role)) (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role))) (pair %addresses address address)) (pair (pair %balances nat nat) (bool %issuance))) (pair (address %sender) (pair %values nat nat)))))));
  code { PUSH nat 1;
         PUSH nat 3;
         PUSH nat 5;
         EMPTY_MAP nat nat;
         DIG 3;
         DUP;
         DUG 4;
         SOME;
         PUSH nat 2;
         UPDATE;
         DIG 1;
         DUP;
         DUG 2;
         SOME;
         PUSH nat 6;
         UPDATE;
         DIG 3;
         DUP;
         DUG 4;
         SOME;
         PUSH nat 7;
         UPDATE;
         DIG 3;
         DUP;
         DUG 4;
         DIG 3;
         DUP;
         DUG 4;
         SWAP;
         SOME;
         SWAP;
         UPDATE;
         DIG 2;
         DUP;
         DUG 3;
         SOME;
         PUSH nat 4;
         UPDATE;
         DIG 2;
         DUP;
         DUG 3;
         DIG 2;
         DUP;
         DUG 3;
         SWAP;
         SOME;
         SWAP;
         UPDATE;
         DIG 3;
         DUP;
         DUG 4;
         DIG 4;
         DUP;
         DUG 5;
         SWAP;
         SOME;
         SWAP;
         UPDATE;
         LAMBDA
           (pair address (big_map address (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role))))
           (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role))
           { DUP;
             CDR;
             DIG 1;
             DUP;
             DUG 2;
             CAR;
             GET;
             IF_NONE
               { PUSH string "InvalidAddress";
                 FAILWITH }
               { DUP;
                 DIP { DROP } };
             DIP { DROP } };
         DUP;
         LAMBDA
           (pair (lambda (pair address (big_map address (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role)))) (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role))) (pair address (big_map address (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role)))))
           (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role))
           { DUP;
             CAR;
             SWAP;
             CDR;
             DUP;
             DIG 2;
             DUP;
             DUG 3;
             SWAP;
             EXEC;
             DUP;
             CAR;
             CDR;
             CAR;
             IF
               { PUSH string "FrozenAccount";
                 FAILWITH }
               { DUP };
             DIP { DROP 3 } };
         SWAP;
         APPLY;
         DIP { DIP { DIP { DIP { DIP { DUP }; SWAP }; SWAP }; SWAP }; DUP; DIP { PAIR }; SWAP };
         DUP;
         DIP { PAIR };
         SWAP;
         LAMBDA
           (pair (pair (lambda (pair address (big_map address (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role)))) (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role))) (pair (lambda (pair address (big_map address (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role)))) (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role))) nat)) (pair address (big_map address (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role)))))
           (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role))
           { DUP;
             CAR;
             SWAP;
             CDR;
             DIP { DUP; CDR; SWAP; CAR; DIP { DUP; CDR; SWAP; CAR } };
             DUP;
             CDR;
             DUP;
             SENDER;
             PAIR;
             DIG 3;
             DUP;
             DUG 4;
             SWAP;
             EXEC;
             DIG 1;
             DUP;
             DUG 2;
             DIG 3;
             DUP;
             DUG 4;
             CAR;
             PAIR;
             DIG 5;
             DUP;
             DUG 6;
             SWAP;
             EXEC;
             SENDER;
             DIG 1;
             DUP;
             DUG 2;
             CAR;
             CDR;
             CDR;
             COMPARE;
             NEQ;
             DIG 7;
             DUP;
             DUG 8;
             DIG 3;
             DUP;
             DUG 4;
             CDR;
             COMPARE;
             NEQ;
             AND;
             IF
               { PUSH string "InvalidParent";
                 FAILWITH }
               { DUP };
             DIP { DROP 7 } };
         SWAP;
         APPLY;
         DIG 7;
         DUP;
         DUG 8;
         CDR;
         DIG 8;
         DUP;
         DUG 9;
         CAR;
         IF_LEFT
           { DUP;
             IF_LEFT
               { DUP;
                 IF_LEFT
                   { DIG 3;
                     DUP;
                     DUG 4;
                     SENDER;
                     PAIR;
                     DIG 6;
                     DUP;
                     DUG 7;
                     SWAP;
                     EXEC;
                     PUSH bool True;
                     DIG 9;
                     DUP;
                     DUG 10;
                     DIG 3;
                     DUP;
                     DUG 4;
                     CDR;
                     GET;
                     IF_NONE
                       { PUSH string "MAP FIND";
                         FAILWITH }
                       {  };
                     DIG 2;
                     DUP;
                     DUG 3;
                     CDR;
                     COMPARE;
                     EQ;
                     COMPARE;
                     NEQ;
                     IF
                       { PUSH string "InvalidRole";
                         FAILWITH }
                       { DIG 1;
                         DUP;
                         DUG 2;
                         CDR;
                         SENDER;
                         DIG 3;
                         DUP;
                         DUG 4;
                         CAR;
                         CDR;
                         CDR;
                         PAIR;
                         DIG 3;
                         DUP;
                         DUG 4;
                         CAR;
                         CDR;
                         CAR;
                         DIG 4;
                         DUP;
                         DUG 5;
                         CAR;
                         CAR;
                         CAR;
                         PAIR;
                         PAIR;
                         PAIR;
                         DIG 5;
                         DUP;
                         DUG 6;
                         DIG 3;
                         DUP;
                         DUG 4;
                         CAR;
                         CAR;
                         CDR;
                         GET;
                         IF_NONE
                           { DIG 5;
                             DUP;
                             DUG 6;
                             DIG 1;
                             DUP;
                             DUG 2;
                             DIG 4;
                             DUP;
                             DUG 5;
                             CAR;
                             CAR;
                             CDR;
                             SWAP;
                             SOME;
                             SWAP;
                             UPDATE;
                             NIL operation;
                             PAIR }
                           { SENDER;
                             DIG 1;
                             DUP;
                             DUG 2;
                             CAR;
                             CDR;
                             CDR;
                             COMPARE;
                             NEQ;
                             IF
                               { PUSH string "Exists";
                                 FAILWITH }
                               { DIG 6;
                                 DUP;
                                 DUG 7;
                                 DIG 2;
                                 DUP;
                                 DUG 3;
                                 SOME;
                                 DIG 5;
                                 DUP;
                                 DUG 6;
                                 CAR;
                                 CAR;
                                 CDR;
                                 UPDATE;
                                 NIL operation;
                                 PAIR };
                             DIP { DROP } };
                         DIP { DROP } };
                     DIP { DROP 2 } }
                   { DIG 3;
                     DUP;
                     DUG 4;
                     SENDER;
                     PAIR;
                     DIG 6;
                     DUP;
                     DUG 7;
                     SWAP;
                     EXEC;
                     DIG 4;
                     DUP;
                     DUG 5;
                     DIG 2;
                     DUP;
                     DUG 3;
                     PAIR;
                     DIG 8;
                     DUP;
                     DUG 9;
                     SWAP;
                     EXEC;
                     SENDER;
                     DIG 1;
                     DUP;
                     DUG 2;
                     CAR;
                     CDR;
                     CDR;
                     COMPARE;
                     NEQ;
                     IF
                       { PUSH string "InvalidParent";
                         FAILWITH }
                       { DIG 5;
                         DUP;
                         DUG 6;
                         DIG 3;
                         DUP;
                         DUG 4;
                         NONE (pair (pair (pair (option %accreditation nat) (string %domicile)) (pair (bool %frozen) (address %parent))) (nat %role));
                         SWAP;
                         UPDATE;
                         NIL operation;
                         PAIR };
                     DIP { DROP 3 } };
                 DIP { DROP } }
               { DUP;
                 IF_LEFT
                   { DIG 3;
                     DUP;
                     DUG 4;
                     DIG 1;
                     DUP;
                     DUG 2;
                     CDR;
                     PAIR;
                     DIG 5;
                     DUP;
                     DUG 6;
                     SWAP;
                     EXEC;
                     DIG 4;
                     DUP;
                     DUG 5;
                     DIG 1;
                     DUP;
                     DUG 2;
                     DIG 3;
                     DUP;
                     DUG 4;
                     CAR;
                     DIP { DUP; CDR; SWAP; CAR; DUP; CDR; SWAP; CAR; CDR };
                     PAIR;
                     PAIR;
                     PAIR;
                     SOME;
                     DIG 3;
                     DUP;
                     DUG 4;
                     CDR;
                     UPDATE;
                     NIL operation;
                     PAIR;
                     DIP { DROP 2 } }
                   { DIG 3;
                     DUP;
                     DUG 4;
                     DIG 1;
                     DUP;
                     DUG 2;
                     CAR;
                     PAIR;
                     DIG 5;
                     DUP;
                     DUG 6;
                     SWAP;
                     EXEC;
                     DIG 4;
                     DUP;
                     DUG 5;
                     DIG 1;
                     DUP;
                     DUG 2;
                     DIG 3;
                     DUP;
                     DUG 4;
                     CDR;
                     DIP { DUP; CDR; SWAP; CAR; DUP; CDR; SWAP; CAR; CAR };
                     SWAP;
                     PAIR;
                     PAIR;
                     PAIR;
                     SOME;
                     DIG 3;
                     DUP;
                     DUG 4;
                     CAR;
                     UPDATE;
                     NIL operation;
                     PAIR;
                     DIP { DROP 2 } };
                 DIP { DROP } };
             DIP { DROP } }
           { DUP;
             IF_LEFT
               { DUP;
                 IF_LEFT
                   { DIG 3;
                     DUP;
                     DUG 4;
                     DIG 1;
                     DUP;
                     DUG 2;
                     CAR;
                     PAIR;
                     DIG 5;
                     DUP;
                     DUG 6;
                     SWAP;
                     EXEC;
                     DIG 4;
                     DUP;
                     DUG 5;
                     DIG 1;
                     DUP;
                     DUG 2;
                     DIG 3;
                     DUP;
                     DUG 4;
                     CDR;
                     DIP { DUP; CDR; SWAP; CAR; DUP; CAR; SWAP; CDR; CDR };
                     PAIR;
                     SWAP;
                     PAIR;
                     PAIR;
                     SOME;
                     DIG 3;
                     DUP;
                     DUG 4;
                     CAR;
                     UPDATE;
                     NIL operation;
                     PAIR;
                     DIP { DROP 2 } }
                   { DIG 3;
                     DUP;
                     DUG 4;
                     DIG 1;
                     DUP;
                     DUG 2;
                     PAIR;
                     DIG 7;
                     DUP;
                     DUG 8;
                     SWAP;
                     EXEC;
                     DIG 4;
                     DUP;
                     DUG 5;
                     NIL operation;
                     PAIR;
                     DIP { DROP 2 } };
                 DIP { DROP } }
               { DUP;
                 CAR;
                 CDR;
                 CDR;
                 SENDER;
                 PAIR;
                 DIG 1;
                 DUP;
                 DUG 2;
                 CAR;
                 CDR;
                 CAR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CAR;
                 CAR;
                 CDR;
                 PAIR;
                 DIG 2;
                 DUP;
                 DUG 3;
                 CAR;
                 CAR;
                 CAR;
                 DIG 5;
                 DUP;
                 DUG 6;
                 DIG 4;
                 DUP;
                 DUG 5;
                 CAR;
                 CAR;
                 CAR;
                 CDR;
                 PAIR;
                 DIG 9;
                 DUP;
                 DUG 10;
                 SWAP;
                 EXEC;
                 DIG 6;
                 DUP;
                 DUG 7;
                 DIG 5;
                 DUP;
                 DUG 6;
                 CAR;
                 CAR;
                 CAR;
                 CAR;
                 PAIR;
                 DIG 10;
                 DUP;
                 DUG 11;
                 SWAP;
                 EXEC;
                 PAIR;
                 PAIR;
                 PAIR;
                 PAIR;
                 DIG 3;
                 DUP;
                 DUG 4;
                 NIL operation;
                 DIG 3;
                 DUP;
                 DUG 4;
                 CDR;
                 PUSH mutez 0;
                 DIG 4;
                 DUP;
                 DUG 5;
                 TRANSFER_TOKENS;
                 CONS;
                 PAIR;
                 DIP { DROP 2 } };
             DIP { DROP } };
         DIP { DROP 9 } };
}
