{
  storage (pair (pair (pair (mutez %buyPrice) (key %currentDelegate)) (pair (map %ledger address nat) (nat %minimalPurchase))) (pair (pair (string %name) (address %owner)) (pair (mutez %sellPrice) (string %symbol))));
  parameter (or (or (or (nat %buy) (unit %deposit)) (or (nat %sell) (key %setDelegate))) (or (or (nat %setMinimalPurchase) (pair %updatePrices mutez mutez)) (mutez %withdraw)));
  code { DUP;
         CDR;
         DIG 1;
         DUP;
         DUG 2;
         CAR;
         IF_LEFT
           { DUP;
             IF_LEFT
               { DUP;
                 IF_LEFT
                   { DIG 3;
                     DUP;
                     DUG 4;
                     CAR;
                     CAR;
                     CAR;
                     DIG 4;
                     DUP;
                     DUG 5;
                     CAR;
                     CDR;
                     CDR;
                     MUL;
                     AMOUNT;
                     COMPARE;
                     LT;
                     DIG 4;
                     DUP;
                     DUG 5;
                     CAR;
                     CDR;
                     CDR;
                     DIG 2;
                     DUP;
                     DUG 3;
                     COMPARE;
                     LT;
                     OR;
                     IF
                       { PUSH string "MinimalPurchaseRequired";
                         FAILWITH }
                       { DIG 3;
                         DUP;
                         DUG 4;
                         CAR;
                         CAR;
                         CAR;
                         DIG 1;
                         DUP;
                         DUG 2;
                         MUL;
                         AMOUNT;
                         COMPARE;
                         NEQ;
                         IF
                           { PUSH string "InsufficientFunds";
                             FAILWITH }
                           { DIG 3;
                             DUP;
                             DUG 4;
                             CAR;
                             CDR;
                             CAR;
                             SOURCE;
                             GET;
                             IF_NONE
                               { DIG 3;
                                 DUP;
                                 DUG 4;
                                 DIG 4;
                                 DUP;
                                 DUG 5;
                                 CAR;
                                 CDR;
                                 CAR;
                                 DIG 2;
                                 DUP;
                                 DUG 3;
                                 SOME;
                                 SOURCE;
                                 UPDATE;
                                 DIP { DUP; CDR; SWAP; CAR; DUP; CAR; SWAP; CDR; CDR };
                                 PAIR;
                                 SWAP;
                                 PAIR;
                                 PAIR }
                               { DIG 4;
                                 DUP;
                                 DUG 5;
                                 DIG 5;
                                 DUP;
                                 DUG 6;
                                 CAR;
                                 CDR;
                                 CAR;
                                 DIG 3;
                                 DUP;
                                 DUG 4;
                                 DIG 3;
                                 DUP;
                                 DUG 4;
                                 ADD;
                                 SOME;
                                 SOURCE;
                                 UPDATE;
                                 DIP { DUP; CDR; SWAP; CAR; DUP; CAR; SWAP; CDR; CDR };
                                 PAIR;
                                 SWAP;
                                 PAIR;
                                 PAIR;
                                 DIP { DROP } } } };
                     NIL operation;
                     PAIR;
                     DIP { DROP } }
                   { DIG 3;
                     DUP;
                     DUG 4;
                     CDR;
                     CAR;
                     CDR;
                     SOURCE;
                     COMPARE;
                     NEQ;
                     IF
                       { PUSH string "UnauthorizedAction";
                         FAILWITH }
                       { DIG 3;
                         DUP;
                         DUG 4;
                         NIL operation;
                         PAIR };
                     DIP { DROP } };
                 DIP { DROP } }
               { DUP;
                 IF_LEFT
                   { DIG 3;
                     DUP;
                     DUG 4;
                     CAR;
                     CDR;
                     CAR;
                     SOURCE;
                     GET;
                     IF_NONE
                       { PUSH string "NoAccount";
                         FAILWITH }
                       { DIG 1;
                         DUP;
                         DUG 2;
                         DIG 1;
                         DUP;
                         DUG 2;
                         COMPARE;
                         LT;
                         IF
                           { PUSH string "NotEnoughTokens";
                             FAILWITH }
                           { DIG 4;
                             DUP;
                             DUG 5;
                             CDR;
                             CDR;
                             CAR;
                             DIG 2;
                             DUP;
                             DUG 3;
                             MUL;
                             BALANCE;
                             DIG 1;
                             DUP;
                             DUG 2;
                             COMPARE;
                             GT;
                             IF
                               { PUSH string "InsufficientContractBalance";
                                 FAILWITH }
                               { SOURCE;
                                 CONTRACT unit;
                                 IF_NONE
                                   { PUSH string "InvalidAddress";
                                     FAILWITH }
                                   { DUP;
                                     DIP { DROP } };
                                 DIG 6;
                                 DUP;
                                 DUG 7;
                                 DIG 7;
                                 DUP;
                                 DUG 8;
                                 CAR;
                                 CDR;
                                 CAR;
                                 DIG 5;
                                 DUP;
                                 DUG 6;
                                 DIG 5;
                                 DUP;
                                 DUG 6;
                                 SUB;
                                 ABS;
                                 SOME;
                                 SOURCE;
                                 UPDATE;
                                 DIP { DUP; CDR; SWAP; CAR; DUP; CAR; SWAP; CDR; CDR };
                                 PAIR;
                                 SWAP;
                                 PAIR;
                                 PAIR;
                                 NIL operation;
                                 DIG 2;
                                 DUP;
                                 DUG 3;
                                 DIG 4;
                                 DUP;
                                 DUG 5;
                                 PUSH unit Unit;
                                 TRANSFER_TOKENS;
                                 CONS;
                                 PAIR;
                                 DIP { DROP } };
                             DIP { DROP } };
                         DIP { DROP } };
                     DIP { DROP } }
                   { DIG 3;
                     DUP;
                     DUG 4;
                     CDR;
                     CAR;
                     CDR;
                     SOURCE;
                     COMPARE;
                     NEQ;
                     IF
                       { PUSH string "UnauthorizedAction";
                         FAILWITH }
                       { DIG 3;
                         DUP;
                         DUG 4;
                         DIG 1;
                         DUP;
                         DUG 2;
                         DIP { DUP; CDR; SWAP; CAR; DUP; CDR; SWAP; CAR; CAR };
                         SWAP;
                         PAIR;
                         PAIR;
                         PAIR;
                         NIL operation;
                         DIG 2;
                         DUP;
                         DUG 3;
                         HASH_KEY;
                         SOME;
                         SET_DELEGATE;
                         CONS;
                         PAIR };
                     DIP { DROP } };
                 DIP { DROP } };
             DIP { DROP } }
           { DUP;
             IF_LEFT
               { DUP;
                 IF_LEFT
                   { DIG 3;
                     DUP;
                     DUG 4;
                     CDR;
                     CAR;
                     CDR;
                     SOURCE;
                     COMPARE;
                     NEQ;
                     IF
                       { PUSH string "UnauthorizedAction";
                         FAILWITH }
                       { DIG 3;
                         DUP;
                         DUG 4;
                         DIG 1;
                         DUP;
                         DUG 2;
                         DIP { DUP; CDR; SWAP; CAR; DUP; CAR; SWAP; CDR; CAR };
                         SWAP;
                         PAIR;
                         SWAP;
                         PAIR;
                         PAIR };
                     NIL operation;
                     PAIR;
                     DIP { DROP } }
                   { DIG 3;
                     DUP;
                     DUG 4;
                     DIG 1;
                     DUP;
                     DUG 2;
                     CDR;
                     DIG 2;
                     DUP;
                     DUG 3;
                     CAR;
                     DUP;
                     LAMBDA
                       (pair mutez mutez)
                       (lambda (pair (pair (pair mutez key) (pair (map address nat) nat)) (pair (pair string address) (pair mutez string))) (pair (pair (pair mutez key) (pair (map address nat) nat)) (pair (pair string address) (pair mutez string))))
                       { DUP;
                         CAR;
                         SWAP;
                         CDR;
                         DIP { DUP };
                         DUP;
                         DIP { PAIR };
                         SWAP;
                         LAMBDA
                           (pair (pair mutez mutez) (pair (pair (pair mutez key) (pair (map address nat) nat)) (pair (pair string address) (pair mutez string))))
                           (pair (pair (pair mutez key) (pair (map address nat) nat)) (pair (pair string address) (pair mutez string)))
                           { DUP;
                             CAR;
                             SWAP;
                             CDR;
                             DIP { DUP; CDR; SWAP; CAR };
                             DUP;
                             CDR;
                             CAR;
                             CDR;
                             SOURCE;
                             COMPARE;
                             NEQ;
                             IF
                               { PUSH string "UnauthorizedAction";
                                 FAILWITH }
                               { DIG 1;
                                 DUP;
                                 DUG 2;
                                 DIG 3;
                                 DUP;
                                 DUG 4;
                                 COMPARE;
                                 LT;
                                 IF
                                   { PUSH string "InsufficientBuyPrice";
                                     FAILWITH }
                                   { DUP;
                                     DIG 3;
                                     DUP;
                                     DUG 4;
                                     DIP { DUP; CDR; SWAP; CAR; DUP; CDR; SWAP; CAR; CDR };
                                     PAIR;
                                     PAIR;
                                     PAIR;
                                     DIG 2;
                                     DUP;
                                     DUG 3;
                                     DIP { DUP; CAR; SWAP; CDR; DUP; CAR; SWAP; CDR; CDR };
                                     PAIR;
                                     SWAP;
                                     PAIR;
                                     SWAP;
                                     PAIR } };
                             DIP { DROP 3 } };
                         SWAP;
                         APPLY;
                         DIP { DROP 2 } };
                     SWAP;
                     APPLY;
                     DIP { DROP };
                     SWAP;
                     EXEC;
                     SWAP;
                     EXEC;
                     NIL operation;
                     PAIR;
                     DIP { DROP } };
                 DIP { DROP } }
               { DIG 2;
                 DUP;
                 DUG 3;
                 CDR;
                 CAR;
                 CDR;
                 SOURCE;
                 COMPARE;
                 NEQ;
                 IF
                   { PUSH string "UnauthorizedAction";
                     FAILWITH }
                   { DIG 2;
                     DUP;
                     DUG 3;
                     CDR;
                     CAR;
                     CDR;
                     CONTRACT unit;
                     IF_NONE
                       { PUSH string "InvalidAddress";
                         FAILWITH }
                       { DUP;
                         DIP { DROP } };
                     DIG 3;
                     DUP;
                     DUG 4;
                     NIL operation;
                     DIG 2;
                     DUP;
                     DUG 3;
                     DIG 4;
                     DUP;
                     DUG 5;
                     PUSH unit Unit;
                     TRANSFER_TOKENS;
                     CONS;
                     PAIR;
                     DIP { DROP } };
                 DIP { DROP } };
             DIP { DROP } };
         DIP { DROP 2 } };
}
