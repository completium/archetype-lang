{ parameter
    (or (string %accept)
        (or (pair %createProposal
               (pair (address %address) (address %contractAddr))
               (pair (string %operation) (string %proposalId)))
            (string %reject))) ;
  storage
    (pair (pair (set %authOps string) (int %openProposals))
          (pair (big_map %proposals
                   string
                   (pair (pair (address %address) (pair (set %approvals address) (address %contractAddr)))
                         (pair (string %operation) (pair (set %rejects address) (bool %status)))))
                (pair (int %restriction) (set %signers address)))) ;
  code { DUP ;
         CDR ;
         SWAP ;
         CAR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             { CDR ; CDR ; CDR } ;
             SENDER ;
             MEM ;
             IF {} { PUSH string "01" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             { CDR ; CAR } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             MEM ;
             IF {} { PUSH string "03" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             { CDR ; CAR } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             { IF_NONE { PUSH int 25 ; FAILWITH } {} } ;
             { CDR ; CDR ; CDR } ;
             IF { PUSH string "05" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             { CDR ; CAR } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET ;
             { IF_NONE { PUSH int 49 ; FAILWITH } {} } ;
             { CAR ; CDR ; CAR } ;
             SENDER ;
             MEM ;
             IF { PUSH string "07" ; FAILWITH } {} ;
             SWAP ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             DIG 4 ;
             DUP ;
             DUG 5 ;
             DUP ;
             DUG 2 ;
             GET ;
             { IF_NONE { PUSH int 50 ; FAILWITH } {} } ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             DUP ;
             CAR ;
             SWAP ;
             CDR ;
             DUP ;
             CDR ;
             SWAP ;
             CAR ;
             PUSH bool True ;
             SENDER ;
             UPDATE ;
             PAIR ;
             SWAP ;
             PAIR ;
             PAIR ;
             SOME ;
             SWAP ;
             UPDATE ;
             PAIR ;
             SWAP ;
             PAIR ;
             DUP ;
             DUG 2 ;
             { CDR ; CDR ; CDR } ;
             SIZE ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             { CDR ; CAR } ;
             DIG 2 ;
             DUP ;
             DUG 3 ;
             GET ;
             { IF_NONE { PUSH int 51 ; FAILWITH } {} } ;
             { CAR ; CDR ; CAR } ;
             SIZE ;
             COMPARE ;
             EQ ;
             IF { PUSH string "setMinter" ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  { CDR ; CAR } ;
                  DIG 2 ;
                  DUP ;
                  DUG 3 ;
                  GET ;
                  { IF_NONE { PUSH int 52 ; FAILWITH } {} } ;
                  { CDR ; CAR } ;
                  COMPARE ;
                  EQ ;
                  IF { NIL operation ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       { CDR ; CAR } ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       GET ;
                       { IF_NONE { PUSH int 80 ; FAILWITH } {} } ;
                       { CAR ; CDR ; CDR } ;
                       CONTRACT %setMinter address ;
                       { IF_NONE { PUSH int 80 ; FAILWITH } {} } ;
                       PUSH mutez 0 ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       { CDR ; CAR } ;
                       DIG 4 ;
                       DUP ;
                       DUG 5 ;
                       GET ;
                       { IF_NONE { PUSH int 79 ; FAILWITH } {} } ;
                       { CAR ; CAR } ;
                       TRANSFER_TOKENS ;
                       CONS }
                     { PUSH string "setAdministrator" ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       { CDR ; CAR } ;
                       DIG 2 ;
                       DUP ;
                       DUG 3 ;
                       GET ;
                       { IF_NONE { PUSH int 55 ; FAILWITH } {} } ;
                       { CDR ; CAR } ;
                       COMPARE ;
                       EQ ;
                       IF { NIL operation ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            { CDR ; CAR } ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            GET ;
                            { IF_NONE { PUSH int 80 ; FAILWITH } {} } ;
                            { CAR ; CDR ; CDR } ;
                            CONTRACT %setAdministrator address ;
                            { IF_NONE { PUSH int 80 ; FAILWITH } {} } ;
                            PUSH mutez 0 ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            { CDR ; CAR } ;
                            DIG 4 ;
                            DUP ;
                            DUG 5 ;
                            GET ;
                            { IF_NONE { PUSH int 79 ; FAILWITH } {} } ;
                            { CAR ; CAR } ;
                            TRANSFER_TOKENS ;
                            CONS }
                          { PUSH string "setReserve" ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            { CDR ; CAR } ;
                            DIG 2 ;
                            DUP ;
                            DUG 3 ;
                            GET ;
                            { IF_NONE { PUSH int 58 ; FAILWITH } {} } ;
                            { CDR ; CAR } ;
                            COMPARE ;
                            EQ ;
                            IF { NIL operation ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 { CDR ; CAR } ;
                                 DIG 2 ;
                                 DUP ;
                                 DUG 3 ;
                                 GET ;
                                 { IF_NONE { PUSH int 80 ; FAILWITH } {} } ;
                                 { CAR ; CDR ; CDR } ;
                                 CONTRACT %setReserve address ;
                                 { IF_NONE { PUSH int 80 ; FAILWITH } {} } ;
                                 PUSH mutez 0 ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 { CDR ; CAR } ;
                                 DIG 4 ;
                                 DUP ;
                                 DUG 5 ;
                                 GET ;
                                 { IF_NONE { PUSH int 79 ; FAILWITH } {} } ;
                                 { CAR ; CAR } ;
                                 TRANSFER_TOKENS ;
                                 CONS }
                               { NIL operation } } } ;
                  DIG 2 ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DUP ;
                  DIG 5 ;
                  DUP ;
                  DUG 2 ;
                  GET ;
                  { IF_NONE { PUSH int 60 ; FAILWITH } {} } ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  { CDR ; CAR } ;
                  PUSH bool True ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  SOME ;
                  SWAP ;
                  UPDATE ;
                  PAIR ;
                  SWAP ;
                  PAIR ;
                  DUP ;
                  CDR ;
                  SWAP ;
                  CAR ;
                  DUP ;
                  CAR ;
                  SWAP ;
                  CDR ;
                  PUSH int 1 ;
                  SWAP ;
                  SUB ;
                  SWAP ;
                  PAIR ;
                  PAIR ;
                  SWAP }
                { DROP ; NIL operation } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR ; CDR } ;
                 SENDER ;
                 MEM ;
                 IF {} { PUSH string "01" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 { CAR ; CDR } ;
                 SWAP ;
                 DUP ;
                 DUG 3 ;
                 { CDR ; CDR ; CAR } ;
                 COMPARE ;
                 GT ;
                 IF {} { PUSH string "04" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CAR ; CAR } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CAR } ;
                 MEM ;
                 IF {} { PUSH string "06" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CAR } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR } ;
                 MEM ;
                 IF { PUSH string "02" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 { CDR ; CDR } ;
                 PUSH (pair (set %rejects address) (bool %status)) (Pair {} False) ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 { CDR ; CAR } ;
                 PAIR %operation ;
                 DIG 5 ;
                 DUP ;
                 DUG 6 ;
                 { CAR ; CDR } ;
                 EMPTY_SET address ;
                 PAIR %approvals %contractAddr ;
                 DIG 6 ;
                 DUP ;
                 DUG 7 ;
                 { CAR ; CAR } ;
                 PAIR %address ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 DIG 4 ;
                 { CDR ; CDR } ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 { IF_NONE { PUSH int 41 ; FAILWITH } {} } ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PUSH bool True ;
                 SENDER ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 PUSH int 1 ;
                 ADD ;
                 SWAP ;
                 PAIR ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CDR ; CDR } ;
                 SENDER ;
                 MEM ;
                 IF {} { PUSH string "01" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CAR } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 MEM ;
                 IF {} { PUSH string "03" ; FAILWITH } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CAR } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 { IF_NONE { PUSH int 25 ; FAILWITH } {} } ;
                 { CDR ; CDR ; CDR } ;
                 IF { PUSH string "05" ; FAILWITH } {} ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 5 ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 { IF_NONE { PUSH int 68 ; FAILWITH } {} } ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 PUSH bool True ;
                 SENDER ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 DUG 2 ;
                 { CDR ; CAR } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 { IF_NONE { PUSH int 69 ; FAILWITH } {} } ;
                 { CAR ; CDR ; CAR } ;
                 SENDER ;
                 MEM ;
                 IF { SWAP ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      DIG 4 ;
                      DUP ;
                      DUG 5 ;
                      DUP ;
                      DUG 2 ;
                      GET ;
                      { IF_NONE { PUSH int 70 ; FAILWITH } {} } ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      DUP ;
                      CDR ;
                      SWAP ;
                      CAR ;
                      PUSH bool False ;
                      SENDER ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      PAIR ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      SWAP ;
                      PAIR ;
                      SWAP }
                    {} ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 DIG 4 ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 { IF_NONE { PUSH int 71 ; FAILWITH } {} } ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 { CDR ; CAR } ;
                 PUSH bool True ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 CAR ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 PUSH int 1 ;
                 SWAP ;
                 SUB ;
                 SWAP ;
                 PAIR ;
                 PAIR } ;
             NIL operation } ;
         PAIR } }