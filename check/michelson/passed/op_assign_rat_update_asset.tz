{ storage
    (map nat
         (pair (pair %r1 int nat) (pair %r2 int nat) (pair %r3 int nat) (pair %r4 int nat))) ;
  parameter (unit %exec) ;
  code { CDR ;
         DUP ;
         PUSH nat 0 ;
         GET ;
         IF_NONE
           { PUSH string "ledger" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
           {} ;
         DUP 2 ;
         DUP 3 ;
         PUSH nat 0 ;
         GET ;
         IF_NONE
           { PUSH string "ledger" ; PUSH string "ASSET_NOT_FOUND" ; PAIR ; FAILWITH }
           {} ;
         CDR ;
         UNIT ;
         LEFT unit ;
         PUSH nat 1 ;
         PUSH int 1 ;
         PAIR ;
         DUP 5 ;
         GET 1 ;
         PAIR ;
         PAIR ;
         UNPAIR ;
         UNPAIR ;
         DIP 1 { UNPAIR ; SWAP ; DUP } ;
         UNPAIR ;
         SWAP ;
         DUP ;
         DIG 3 ;
         MUL ;
         DUP ;
         PUSH nat 0 ;
         COMPARE ;
         EQ ;
         IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
         DUG 4 ;
         DIG 3 ;
         MUL ;
         DIP 1 { MUL } ;
         DIG 3 ;
         IF_LEFT { DROP 1 ; ADD } { DROP 1 ; SWAP ; SUB } ;
         PAIR ;
         SWAP ;
         CDR ;
         UNIT ;
         RIGHT unit ;
         PUSH nat 1 ;
         PUSH int 1 ;
         PAIR ;
         DUP 6 ;
         GET 3 ;
         PAIR ;
         PAIR ;
         UNPAIR ;
         UNPAIR ;
         DIP 1 { UNPAIR ; SWAP ; DUP } ;
         UNPAIR ;
         SWAP ;
         DUP ;
         DIG 3 ;
         MUL ;
         DUP ;
         PUSH nat 0 ;
         COMPARE ;
         EQ ;
         IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
         DUG 4 ;
         DIG 3 ;
         MUL ;
         DIP 1 { MUL } ;
         DIG 3 ;
         IF_LEFT { DROP 1 ; ADD } { DROP 1 ; SWAP ; SUB } ;
         PAIR ;
         SWAP ;
         CDR ;
         PUSH nat 10 ;
         PUSH int 9 ;
         PAIR ;
         DUP 6 ;
         GET 5 ;
         PAIR ;
         UNPAIR ;
         DIP 1 { UNPAIR } ;
         UNPAIR ;
         DIP 1 { SWAP } ;
         MUL ;
         DIP 1
             { MUL ;
               DUP ;
               PUSH nat 0 ;
               COMPARE ;
               EQ ;
               IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} } ;
         PAIR ;
         SWAP ;
         DROP 1 ;
         PUSH nat 10 ;
         PUSH int 9 ;
         PAIR ;
         DUP 6 ;
         GET 6 ;
         PAIR ;
         UNPAIR ;
         DIP 1 { UNPAIR } ;
         UNPAIR ;
         DIG 3 ;
         DUP ;
         DIG 3 ;
         DUP ;
         DUG 4 ;
         MUL ;
         PUSH nat 0 ;
         COMPARE ;
         EQ ;
         IF { PUSH string "DIV_BY_ZERO" ; FAILWITH } {} ;
         PUSH int 0 ;
         DIG 4 ;
         DUP ;
         DUG 5 ;
         COMPARE ;
         GE ;
         IF { INT } { NEG } ;
         MUL ;
         DIP 1 { MUL ; ABS } ;
         PAIR ;
         SWAP ;
         PAIR ;
         SWAP ;
         PAIR ;
         SWAP ;
         PAIR ;
         SOME ;
         PUSH nat 0 ;
         UPDATE ;
         DIP 1 { SWAP ; DROP 1 } ;
         SWAP ;
         DROP 1 ;
         NIL operation ;
         PAIR } }
