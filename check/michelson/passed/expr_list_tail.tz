{ storage (list string) ;
  parameter (pair %exec (list %l string) (nat %n)) ;
  code { LAMBDA
           (pair (list string) nat)
           (list string)
           { UNPAIR ;
             NIL string ;
             SWAP ;
             ITER { CONS } ;
             DUP 2 ;
             DUP 2 ;
             SIZE ;
             PAIR ;
             DUP ;
             UNPAIR ;
             COMPARE ;
             LT ;
             IF { CAR } { CDR } ;
             NIL string ;
             DUP 2 ;
             INT ;
             PUSH int 0 ;
             DUP 2 ;
             DUP 2 ;
             COMPARE ;
             LT ;
             LOOP { DIG 2 ;
                    DUP 5 ;
                    IF_CONS {} { PUSH string "ERROR" ; FAILWITH } ;
                    SWAP ;
                    DIG 6 ;
                    DROP 1 ;
                    DUG 5 ;
                    CONS ;
                    DUG 2 ;
                    PUSH int 1 ;
                    DUP 2 ;
                    ADD ;
                    SWAP ;
                    DROP 1 ;
                    DUP 2 ;
                    DUP 2 ;
                    COMPARE ;
                    LT } ;
             DROP 2 ;
             DIP 1 { DROP 3 } } ;
         SWAP ;
         UNPAIR ;
         UNPAIR ;
         SWAP ;
         DUP 4 ;
         DUP 2 ;
         DUP 4 ;
         PAIR ;
         EXEC ;
         DIP 1 { DIG 2 ; DROP 1 } ;
         DUG 2 ;
         DROP 2 ;
         NIL operation ;
         PAIR ;
         DIP 1 { DROP 1 } } }
