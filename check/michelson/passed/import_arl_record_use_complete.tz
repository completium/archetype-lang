{ storage
    (pair (option %res_imported (pair (nat %a) (string %b)))
          (option %res_top (pair (string %x) (nat %y) (bytes %z)))) ;
  parameter (unit %exec) ;
  code { UNPAIR ;
         DIP 1 { UNPAIR } ;
         DROP 1 ;
         PUSH string "mystr" ;
         PUSH nat 0 ;
         PAIR ;
         PUSH nat 0 ;
         DUP 2 ;
         GET 1 ;
         COMPARE ;
         EQ ;
         IF { PUSH string "mystr" ;
              DUP 2 ;
              GET 2 ;
              COMPARE ;
              EQ ;
              IF { PUSH bool True } { PUSH bool False } }
            { PUSH bool False } ;
         NOT ;
         IF { PUSH string "error" ; FAILWITH } {} ;
         PUSH string "" ;
         PUSH nat 0 ;
         PAIR ;
         DUP 2 ;
         UNPAIR ;
         SWAP ;
         DROP 1 ;
         PUSH string "" ;
         SWAP ;
         PAIR ;
         COMPARE ;
         EQ ;
         NOT ;
         IF { PUSH string "error" ; FAILWITH } {} ;
         DUP ;
         CDR ;
         PUSH nat 2 ;
         PAIR ;
         SWAP ;
         DROP 1 ;
         PUSH bytes 0x ;
         PUSH nat 0 ;
         PAIR ;
         PUSH string "" ;
         PAIR ;
         PUSH string "" ;
         DUP 2 ;
         GET 1 ;
         COMPARE ;
         EQ ;
         IF { PUSH nat 0 ;
              DUP 2 ;
              GET 3 ;
              COMPARE ;
              EQ ;
              IF { PUSH bool True } { PUSH bool False } }
            { PUSH bool False } ;
         IF { PUSH bytes 0x ;
              DUP 2 ;
              GET 4 ;
              COMPARE ;
              EQ ;
              IF { PUSH bool True } { PUSH bool False } }
            { PUSH bool False } ;
         NOT ;
         IF { PUSH string "error" ; FAILWITH } {} ;
         PUSH bytes 0x02 ;
         PUSH nat 0 ;
         PAIR ;
         PUSH string "" ;
         PAIR ;
         DUP 2 ;
         UNPAIR ;
         SWAP ;
         UNPAIR ;
         SWAP ;
         DROP 1 ;
         PUSH bytes 0x02 ;
         SWAP ;
         PAIR ;
         SWAP ;
         PAIR ;
         COMPARE ;
         EQ ;
         NOT ;
         IF { PUSH string "error" ; FAILWITH } {} ;
         DUP ;
         UNPAIR ;
         SWAP ;
         UNPAIR ;
         SWAP ;
         DROP 1 ;
         PUSH bytes 0x02 ;
         SWAP ;
         PAIR ;
         SWAP ;
         PAIR ;
         SWAP ;
         DROP 1 ;
         DUP 2 ;
         SOME ;
         DIP 1 { DIG 2 ; DROP 1 } ;
         DUG 2 ;
         DUP ;
         SOME ;
         DIP 1 { DIG 3 ; DROP 1 } ;
         DUG 3 ;
         DROP 2 ;
         PAIR ;
         NIL operation ;
         PAIR } }
