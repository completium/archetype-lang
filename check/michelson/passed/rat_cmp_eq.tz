{ storage bool ;
  parameter (pair %exec int nat) ;
  code { LAMBDA
           (pair (pair (pair int nat) (pair int nat)) (or unit (or (or unit unit) (or unit unit))))
           bool
           { UNPAIR ;
             UNPAIR ;
             DIP 1 { UNPAIR } ;
             UNPAIR ;
             DUG 3 ;
             MUL ;
             DIP 1 { MUL } ;
             SWAP ;
             COMPARE ;
             SWAP ;
             IF_LEFT
               { DROP 1 ; EQ }
               { IF_LEFT
                   { IF_LEFT { DROP 1 ; LT } { DROP 1 ; LE } }
                   { IF_LEFT { DROP 1 ; GT } { DROP 1 ; GE } } } } ;
         DIG 1 ;
         UNPAIR ;
         DUP 3 ;
         UNIT ;
         LEFT (or (or unit unit) (or unit unit)) ;
         PUSH nat 4 ;
         PUSH int 1 ;
         PAIR ;
         DUP 4 ;
         PAIR ;
         PAIR ;
         EXEC ;
         DIP 1 { DIG 1 ; DROP 1 } ;
         DUG 1 ;
         DROP 1 ;
         NIL operation ;
         PAIR ;
         DIP 1 { DROP 1 } } }
