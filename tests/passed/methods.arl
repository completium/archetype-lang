archetype methods

asset asset_0 identified by id0 {
  id0 : string;
  value0 : int;
}

asset my_asset identified by id {
  id : string;
  value : int;
  col : asset_0 partition;
}

action main {
  effect {
    let asset0_id = "id0" in
    let asset0_var : asset_0 = { id0 = asset0_id; value0 = 0 } in

    let my_asset_id = "id" in
    let my_asset_var : my_asset = { id = my_asset_id; value = 0; col = [] } in
    my_asset.add(my_asset_var);
    my_asset.remove(my_asset_id);
    my_asset.clear();
    my_asset.reverse();
    my_asset_var.col.add(asset0_var);
    my_asset_var.col.remove(asset0_id);
    my_asset_var.col.clear ();
    my_asset_var.col.reverse();
    let v1 = my_asset.get(my_asset_id) in
    let v2 = my_asset.select(the.value > 0) in
    let v3 = my_asset.sort(value) in
    let v4 = my_asset.contains(my_asset_id) in
    let v5 = my_asset.nth(0) in
    let v6 = my_asset.count() in
    let v7 = my_asset.sum(the.value) in
    let v8 = my_asset.min(the.value) in
    let v9 = my_asset.max(the.value) in
    let v10 = my_asset.head(2) in
    let v11 = my_asset.tail(2) in
    require (true)
  }
}
