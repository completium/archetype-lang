archetype miles_with_expiration_simple

constant admin : address = @tz1aazS5ms5cbGkb6FN1wvWmN7yrMTTcr6wB

asset mile identified by id {
  id : string;
  expiration : date;
  quantity : int
} with {
  i0: quantity > 0;
}

asset owner identified by addr {
  addr : address;
  miles : partition<mile> = [];
}

entry add (ow : address, newmile_id : string, newmile_expiration : date, newmile_quantity : int) {
  called by admin
  fail if {
    f1: mile.contains(newmile_id)
  }
  effect {
    owner.add_update(ow, { miles += [{id = newmile_id; expiration = newmile_expiration; quantity = newmile_quantity}] })
  }
}

entry consume (ow : address, qty : int) {
    called by admin
    require {
        r2: qty > 0;
        r3: owner.contains(ow)
    }
    effect {
        var valid_miles = owner[ow].miles.select(the.expiration > now);
        do_require (valid_miles.sum(the.quantity) >= qty, "NotEnoughMiles");
        var remainder = qty;
        for:loop m in valid_miles do
            if remainder > 0 then (
                if mile[m].quantity <= remainder then (
                    remainder -= mile[m].quantity;
                    owner[ow].miles.remove(m)
                ) else (
                    mile.update(m, { quantity -= remainder });
                    remainder := 0
                )
            )
        done
    }
}

security {
    s0 : only_by_role (anyentry, admin);
    s1 : no_storage_fail (add);
}
