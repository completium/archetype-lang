{
  storage (pair :storage (map %asks bytes (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) address)) (pair (map %bids bytes (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) address)) (map %deals nat (pair :liability (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) (pair (address %liability_promisee) (pair (address %liability_promisor) (option %liability_report bytes)))))));
  parameter (or :_entries (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) (or (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) (pair :report (nat %report_ix) (bytes %report_data))));
  code { DUP;
         DIP { CDR };
         CAR;
         LAMBDA
           (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost)))
           bytes
           { RENAME;
             NIL bytes;
             DIP { DUP };
             SWAP;
             CDR;
             CDR;
             PACK;
             BLAKE2B;
             CONS;
             DIP { DUP };
             SWAP;
             CDR;
             CAR;
             BLAKE2B;
             CONS;
             SWAP;
             CAR;
             BLAKE2B;
             CONS;
             CONCAT;
             BLAKE2B };
         LAMBDA
           (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) (pair address address))
           (pair :liability (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) (pair (address %liability_promisee) (pair (address %liability_promisor) (option %liability_report bytes))))
           { RENAME;
             NONE bytes;
             DIP { DUP };
             SWAP;
             CDR;
             CDR;
             PAIR;
             DIP { DUP };
             SWAP;
             CDR;
             CAR;
             PAIR;
             SWAP;
             CAR;
             PAIR };
         DIP 2 { DUP };
         DIG 3;
         IF_LEFT
           { RENAME;
             DIP 4 { DUP };
             DIG 5;
             DIP 3 { DUP };
             DIG 4;
             DIP 2 { DUP };
             DIG 3;
             EXEC;
             DIP { DUP };
             SWAP;
             CDR;
             CAR;
             DIP { DUP };
             SWAP;
             GET;
             IF_NONE
               { DIP { DUP };
                 SWAP;
                 CDR;
                 DIP 2 { DUP };
                 DIG 3;
                 CAR;
                 SENDER;
                 DIP 5 { DUP };
                 DIG 6;
                 PAIR;
                 DIP 3 { DUP };
                 DIG 4;
                 DIP { SOME };
                 UPDATE;
                 PAIR;
                 NIL operation;
                 PAIR }
               { DIP 2 { DUP };
                 DIG 3;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 CAR;
                 DIP 4 { DUP };
                 DIG 5;
                 CDR;
                 CDR;
                 DIP 7 { DUP };
                 DIG 8;
                 DIP 4 { DUP };
                 DIG 5;
                 CDR;
                 SENDER;
                 PAIR;
                 DIP 8 { DUP };
                 DIG 9;
                 PAIR;
                 EXEC;
                 DIP 6 { DUP };
                 DIG 7;
                 CDR;
                 CDR;
                 SIZE;
                 DIP { SOME };
                 UPDATE;
                 SWAP;
                 PAIR;
                 SWAP;
                 PAIR;
                 DUP;
                 DUP;
                 CAR;
                 SWAP;
                 CDR;
                 CDR;
                 DIP 2 { DUP };
                 DIG 3;
                 CDR;
                 CAR;
                 DIP 5 { DUP };
                 DIG 6;
                 DIP { NONE (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) address) };
                 DIP 5 { DROP; DROP };
                 UPDATE;
                 PAIR;
                 SWAP;
                 PAIR;
                 NIL operation;
                 PAIR };
             DIP { DROP; DROP; DROP } }
           { IF_LEFT
               { RENAME;
                 DIP 4 { DUP };
                 DIG 5;
                 DIP 3 { DUP };
                 DIG 4;
                 DIP 2 { DUP };
                 DIG 3;
                 EXEC;
                 DIP { DUP };
                 SWAP;
                 CAR;
                 DIP { DUP };
                 SWAP;
                 GET;
                 IF_NONE
                   { DIP { DUP };
                     SWAP;
                     DUP;
                     CAR;
                     SWAP;
                     CDR;
                     CDR;
                     DIP 3 { DUP };
                     DIG 4;
                     CDR;
                     CAR;
                     SENDER;
                     DIP 6 { DUP };
                     DIG 7;
                     PAIR;
                     DIP 4 { DUP };
                     DIG 5;
                     DIP { SOME };
                     UPDATE;
                     PAIR;
                     SWAP;
                     PAIR;
                     NIL operation;
                     PAIR }
                   { DIP 2 { DUP };
                     DIG 3;
                     DUP;
                     CAR;
                     SWAP;
                     CDR;
                     CAR;
                     DIP 4 { DUP };
                     DIG 5;
                     CDR;
                     CDR;
                     DIP 7 { DUP };
                     DIG 8;
                     SENDER;
                     DIP 5 { DUP };
                     DIG 6;
                     CDR;
                     PAIR;
                     DIP 8 { DUP };
                     DIG 9;
                     PAIR;
                     EXEC;
                     DIP 6 { DUP };
                     DIG 7;
                     CDR;
                     CDR;
                     SIZE;
                     DIP { SOME };
                     UPDATE;
                     SWAP;
                     PAIR;
                     SWAP;
                     PAIR;
                     DUP;
                     CDR;
                     DIP { DUP };
                     SWAP;
                     CAR;
                     DIP 4 { DUP };
                     DIG 5;
                     DIP { NONE (pair (pair :order (bytes %order_model) (pair (bytes %order_objective) (nat %order_cost))) address) };
                     DIP 4 { DROP; DROP };
                     UPDATE;
                     PAIR;
                     NIL operation;
                     PAIR };
                 DIP { DROP; DROP; DROP } }
               { RENAME;
                 DIP 4 { DUP };
                 DIG 5;
                 DUP;
                 CDR;
                 CDR;
                 DIP 2 { DUP };
                 DIG 3;
                 CAR;
                 GET;
                 IF_NONE
                   { PUSH string "Wrong liability index";
                     FAILWITH }
                   { DUP;
                     CDR;
                     CDR;
                     CDR;
                     IF_NONE
                       { PUSH string "Liability already finalized";
                         FAILWITH }
                       { SENDER;
                         DIP 2 { DUP };
                         DIG 3;
                         CDR;
                         CDR;
                         CAR;
                         COMPARE;
                         NEQ;
                         IF
                           { PUSH string "Wrong report sender";
                             FAILWITH }
                           { DIP 2 { DUP };
                             DIG 3;
                             DUP;
                             CAR;
                             SWAP;
                             CDR;
                             CAR;
                             DIP 4 { DUP };
                             DIG 5;
                             CDR;
                             CDR;
                             DIP 4 { DUP };
                             DIG 5;
                             DUP;
                             CAR;
                             SWAP;
                             CDR;
                             DUP;
                             CAR;
                             SWAP;
                             CDR;
                             CAR;
                             DIP 9 { DUP };
                             DIG 10;
                             CDR;
                             SOME;
                             SWAP;
                             PAIR;
                             SWAP;
                             PAIR;
                             SWAP;
                             PAIR;
                             SOME;
                             DIP 7 { DUP };
                             DIG 8;
                             CAR;
                             UPDATE;
                             SWAP;
                             PAIR;
                             SWAP;
                             PAIR;
                             NIL operation;
                             PAIR };
                         DIP { DROP } };
                     DIP { DROP } };
                 DIP { DROP; DROP } } };
         DIP { DROP; DROP; DROP; DROP } };
}
