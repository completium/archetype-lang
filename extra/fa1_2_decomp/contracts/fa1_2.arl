archetype fa1_2(
ledger : big_map<address, (nat * map<address, nat>)>,
token_metadata : big_map<nat, (nat * map<string, bytes>)>)

entry getAllowance (owner : address, spender : address, callback : contract<nat>) {
  var x93 : nat = 0;
  var x88 : list<operation> = make_list<operation> (([]));
  x88 := make_list<operation> (([]));
  for x131 in operations do
    (x88 := prepend (x88, x131))
  done;
  match (ledger[owner]) with
  | some x120 -> (match ((x120[1])[spender]) with
  | some x105 -> (x93 := x105)
  | none -> (x93 := 0)
  end)
  | none -> (x93 := 0)
  end;
  x88 := prepend (x88, (make_operation (transferred, callback, x93)));
  for x85 in prepend (x88, (make_operation (transferred, callback, x93))) do
    (operations := prepend (operations, x85))
  done
}

entry getBalance (owner : address, callback : contract<nat>) {
  var x154 : nat = 0;
  var x149 : list<operation> = make_list<operation> (([]));
  x149 := make_list<operation> (([]));
  for x182 in operations do
    (x149 := prepend (x149, x182))
  done;
  match (ledger[owner]) with
  | some x171 -> (x154 := (x171[0]))
  | none -> (x154 := 0)
  end;
  x149 := prepend (x149, (make_operation (transferred, callback, x154)));
  for x146 in prepend (x149, (make_operation (transferred, callback, x154))) do
    (operations := prepend (operations, x146))
  done
}

entry getTotalSupply (x224 : unit, callback : contract<nat>) {
  var x204 : list<operation> = make_list<operation> (([]));
  x204 := make_list<operation> (([]));
  for x217 in operations do
    (x204 := prepend (x204, x217))
  done;
  x204 := prepend (x204, (make_operation (transferred, callback, 10000000)));
  for x201 in prepend (x204, (make_operation (transferred, callback, 10000000))) do
    (operations := prepend (operations, x201))
  done
}

entry set_token_metadata (tid : nat, tdata : map<string, bytes>) {
  if not (caller = tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb)
  then ((fail ("INVALID_CALLER")))  else (()) ;
  token_metadata := update (token_metadata, tid, (some(((tid, tdata)))))
}

entry %transfer (%from : address, %to : address, value : nat) {
  var x298 : map<address, nat> = make_map<address, nat> (([]));
  var x317 : ((nat * map<address, nat>)) = (0, []);
  var x424 : map<address, nat> = make_map<address, nat> (([]));
  var x422 : nat = 0;
  var x491 : ((nat * map<address, nat>)) = (0, []);
  var x662 : nat = 0;
  var x705 : map<address, nat> = make_map<address, nat> (([]));
  var x765 : nat = 0;
  match (ledger[%from]) with
  | some (x785, x786) -> (x765 := x785)
  | none -> (fail ((("ASSET_NOT_FOUND",
  "ledger"))))
  end;
  if not (x765 >= value) then ((fail ("NotEnoughBalance")))  else (()) ;
  if caller <> %from
  then (match (ledger[%from]) with
  | some (x723, x724) -> (x705 := x724)
  | none -> (fail ((("ASSET_NOT_FOUND",
  "ledger"))))
  end;
  match (x705[caller]) with
  | some x701 -> (x662 := x701)
  | none -> (x662 := 0)
  end;
  match int_to_nat ((x662 - value)) with
  | some x679 -> ()
  | none -> (fail ((("NotEnoughAllowance", ((value,
  x662))))))
  end;
  match (ledger[%from]) with
  | some (x639, x640) -> ()
  | none -> (fail ((("ASSET_NOT_FOUND",
  "ledger"))))
  end;
  match (ledger[%from]) with
  | some (x596, x597) -> ()
  | none -> (fail ((("ASSET_NOT_FOUND", "ledger"))))
  end)  else (()) ;
  match (ledger[%from]) with
  | some x534 -> (x491 := x534)
  | none -> (fail ((("ASSET_NOT_FOUND",
  "ledger"))))
  end;
  match (ledger[%from]) with
  | some (x502, x503) -> (x424 := x503)
  | none -> (fail ((("ASSET_NOT_FOUND",
  "ledger"))))
  end;
  if x491[0] - value >= 0i then (x422 := abs ((x491[0] - value)))
   else ((fail ("NAT_NEG_ASSIGN"))) ;
  if contains ((update (ledger, %from, (some(((x422, x424)))))), %to)
  then (match ((update (ledger, %from, (some(((x422,
  x424))))))[%to]) with
  | some x364 -> (x317 := x364)
  | none -> (fail ((("ASSET_NOT_FOUND",
  "ledger"))))
  end;
  match ((update (ledger, %from, (some(((x422,
  x424))))))[%to]) with
  | some (x328, x329) -> (x298 := x329)
  | none -> (fail ((("ASSET_NOT_FOUND",
  "ledger"))))
  end;
  ledger := update ((update (ledger, %from, (some(((x422,
  x424)))))), %to, (some((((x317[0] + value), x298))))))
   else (ledger := update ((update (ledger, %from, (some(((x422,
  x424)))))), %to, (some((((0 + value),
  (make_map<address, nat> (([])))))))))
}

entry approve (spender : address, value : nat) {
  var x829 : map<address, nat> = make_map<address, nat> (([]));
  var x842 : nat = 0;
  var x958 : bool = false;
  var x941 : nat = 0;
  match (ledger[caller]) with
  | some x996 -> (match ((x996[1])[spender]) with
  | some x981 -> (x941 := x981)
  | none -> (x941 := 0)
  end)
  | none -> (x941 := 0)
  end;
  if x941 > 0
  then ((if value > 0 then (x958 := true)  else (x958 := false) ))
   else (x958 := false) ;
  if x958 then ((fail ((("UnsafeAllowanceChange", x941)))))  else (()) ;
  if contains (ledger, caller)
  then (match (ledger[caller]) with
  | some (x891, x892) -> (x842 := x891)
  | none -> (fail ((("ASSET_NOT_FOUND",
  "ledger"))))
  end;
  match (ledger[caller]) with
  | some (x854, x855) -> (x829 := x855)
  | none -> (fail ((("ASSET_NOT_FOUND",
  "ledger"))))
  end;
  ledger := update (ledger, caller, (some(((x842,
  (update (x829, spender, (some(value))))))))))
   else (ledger := update (ledger, caller, (some(((0,
  (update ((make_map<address, nat> (([]))), spender, (some(value))))))))))
}

