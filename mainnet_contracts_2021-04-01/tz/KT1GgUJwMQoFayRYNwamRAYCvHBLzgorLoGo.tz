{
  storage (pair key_hash (pair :storage (option %game (pair :game (nat %number) (pair (mutez %bet) (key_hash %player)))) (address %oracle_id)));
  parameter (or (lambda %do unit (list operation)) (or %default (pair %_Liq_entry_play nat key_hash) (or (nat %_Liq_entry_finish) (unit %_Liq_entry_fund))));
  code { DUP;
         CAR;
         IF_LEFT
           { PUSH mutez 0;
             AMOUNT;
             COMPARE;
             EQ;
             IF
               {  }
               { UNIT;
                 FAILWITH };
             DIP { DUP };
             SWAP;
             CDR;
             CAR;
             IMPLICIT_ACCOUNT;
             ADDRESS;
             SENDER;
             COMPARE;
             NEQ;
             IF
               { SENDER;
                 PUSH string "Only the owner can operate.";
                 PAIR;
                 FAILWITH }
               { UNIT;
                 EXEC;
                 DIP { CDR };
                 PAIR } }
           { DIP { CDR; DUP; CDR };
             PAIR;
             DUP;
             DIP { CDR };
             CAR;
             DUP;
             IF_LEFT
               { RENAME;
                 DIP { DIP { DUP }; SWAP };
                 SWAP;
                 DIP { DUP };
                 SWAP;
                 CAR;
                 PUSH nat 100;
                 DIP { DUP };
                 SWAP;
                 COMPARE;
                 GT;
                 IF
                   { PUSH string "number must be <= 100";
                     FAILWITH }
                   { UNIT };
                 DROP;
                 PUSH mutez 0;
                 AMOUNT;
                 COMPARE;
                 EQ;
                 IF
                   { PUSH string "bet cannot be 0tz";
                     FAILWITH }
                   { UNIT };
                 DROP;
                 BALANCE;
                 AMOUNT;
                 PUSH nat 2;
                 MUL;
                 COMPARE;
                 GT;
                 IF
                   { PUSH string "I don't have enough money for this bet";
                     FAILWITH }
                   { UNIT };
                 DROP;
                 DIP { DUP };
                 SWAP;
                 CAR;
                 IF_NONE
                   { DIP { DUP };
                     SWAP;
                     CDR;
                     DIP { DIP { DIP { DUP }; SWAP }; SWAP };
                     SWAP;
                     CDR;
                     AMOUNT;
                     PAIR;
                     DIP { DIP { DUP }; SWAP };
                     SWAP;
                     PAIR;
                     SOME;
                     PAIR;
                     NIL operation;
                     PAIR }
                   { DUP;
                     PUSH string "Game already started with";
                     PAIR;
                     FAILWITH };
                 DIP { DROP; DROP; DROP } }
               { IF_LEFT
                   { RENAME;
                     DIP { DIP { DUP }; SWAP };
                     SWAP;
                     DUP;
                     CDR;
                     SENDER;
                     COMPARE;
                     NEQ;
                     IF
                       { PUSH string "Random numbers cannot be generated";
                         FAILWITH }
                       { UNIT };
                     DROP;
                     DUP;
                     CAR;
                     IF_NONE
                       { PUSH string "No game already started";
                         FAILWITH }
                       { DIP { DUP };
                         SWAP;
                         CDR;
                         NONE (pair :game (nat %number) (pair (mutez %bet) (key_hash %player)));
                         PAIR;
                         DIP { DUP };
                         SWAP;
                         CAR;
                         PUSH nat 101;
                         DIP { DIP { DIP { DIP { DIP { DUP }; SWAP }; SWAP }; SWAP }; SWAP };
                         SWAP;
                         EDIV;
                         IF_NONE
                           { UNIT;
                             FAILWITH }
                           { CDR };
                         RENAME;
                         COMPARE;
                         LT;
                         IF
                           { NIL operation;
                             DIP { DIP { DUP }; SWAP };
                             SWAP;
                             CDR;
                             CDR;
                             IMPLICIT_ACCOUNT;
                             PUSH mutez 1;
                             UNIT;
                             TRANSFER_TOKENS;
                             CONS }
                           { NIL operation;
                             DIP { DIP { DUP }; SWAP };
                             SWAP;
                             CDR;
                             CDR;
                             IMPLICIT_ACCOUNT;
                             PUSH nat 100;
                             DIP { DIP { DIP { DIP { DUP }; SWAP }; SWAP }; SWAP };
                             SWAP;
                             CAR;
                             DIP { DIP { DIP { DIP { DIP { DUP }; SWAP }; SWAP }; SWAP }; SWAP };
                             SWAP;
                             CDR;
                             CAR;
                             MUL;
                             EDIV;
                             IF_NONE
                               { PUSH mutez 0 }
                               { CAR };
                             RENAME;
                             DIP { DIP { DIP { DIP { DUP }; SWAP }; SWAP }; SWAP };
                             SWAP;
                             CDR;
                             CAR;
                             ADD;
                             UNIT;
                             TRANSFER_TOKENS;
                             CONS };
                         DIP { DIP { DROP } };
                         RENAME;
                         PAIR };
                     DIP { DROP; DROP } }
                   { DROP;
                     DIP { DUP };
                     SWAP;
                     NIL operation;
                     PAIR } };
             DIP { DROP; DROP };
             SWAP;
             CAR;
             SWAP;
             DUP;
             CAR;
             DIP { CDR };
             DIP { SWAP; PAIR };
             PAIR } };
}
