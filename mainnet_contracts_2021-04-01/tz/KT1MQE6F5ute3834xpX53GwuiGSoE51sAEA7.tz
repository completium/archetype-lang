{
  storage (pair (map address mutez) (pair (pair string (pair string nat)) (pair (map address int) (pair address (pair address (pair timestamp bool))))));
  parameter bytes;
  code { DUP;
         CDR;
         NIL operation;
         PAIR;
         SWAP;
         CAR;
         DUP;
         PUSH nat 4;
         PUSH nat 0;
         SLICE;
         IF_NONE
           { PUSH nat 100;
             FAILWITH }
           {  };
         DUP;
         PUSH bytes 0x19308cc0;
         COMPARE;
         EQ;
         IF
           { DROP;
             DUP;
             SIZE;
             PUSH nat 4;
             SWAP;
             SUB;
             DUP;
             GT;
             IF
               {  }
               { PUSH nat 102;
                 FAILWITH };
             ABS;
             PUSH nat 4;
             SLICE;
             IF_NONE
               { PUSH nat 101;
                 FAILWITH }
               {  };
             UNPACK (pair address (pair mutez (option bytes)));
             IF_NONE
               { PUSH nat 103;
                 FAILWITH }
               {  };
             PAIR;
             NONE mutez;
             PAIR;
             DUP;
             CDR;
             CDR;
             CDR;
             CDR;
             CDR;
             CDR;
             CDR;
             CDR;
             CDR;
             DIP { SENDER; DIP { DUP; CDR; CDR; CDR; CDR; CDR; CDR; CAR }; COMPARE; EQ };
             OR;
             DIP { SENDER; DIP { DUP; CDR; CDR; CDR; CDR; CDR; CDR; CDR; CAR }; COMPARE; EQ };
             OR;
             IF
               {  }
               { PUSH string "Failed assert";
                 FAILWITH };
             SENDER;
             DIP { DUP; CDR; CDR; CDR; CDR; CDR; CAR };
             MEM;
             DIP { PUSH bool True };
             COMPARE;
             NEQ;
             IF
               {  }
               { PUSH string "Failed assert";
                 FAILWITH };
             SENDER;
             DIP { DUP; CDR; CDR; CDR; CAR };
             MEM;
             DIP { PUSH bool True };
             COMPARE;
             EQ;
             IF
               {  }
               { PUSH string "Failed assert";
                 FAILWITH };
             SENDER;
             DIP { DUP; CDR; CDR; CDR; CAR };
             GET;
             IF_NONE
               { PUSH string "Key not found in map";
                 FAILWITH }
               {  };
             SWAP;
             CDR;
             SWAP;
             PAIR;
             DUP;
             CAR;
             DIP { DUP; CDR; CAR; CDR; CAR };
             COMPARE;
             GE;
             IF
               {  }
               { PUSH string "Failed assert";
                 FAILWITH };
             SENDER;
             DIP { DUP; CAR; DIP { DUP; CDR; CAR; CDR; CAR }; SUB; SOME };
             DIP { DIP { DUP; CDR; CDR; CDR; CAR } };
             UPDATE;
             SWAP;
             DUP;
             DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; CDR; SWAP; PAIR }; CAR; PAIR }; CAR; PAIR };
             CAR;
             PAIR;
             PUSH mutez 0;
             SWAP;
             CDR;
             SWAP;
             PAIR;
             DUP;
             CDR;
             CAR;
             CAR;
             DIP { DUP; CDR; CDR; CDR; CAR };
             MEM;
             DIP { PUSH bool True };
             COMPARE;
             EQ;
             IF
               { DUP;
                 CDR;
                 CAR;
                 CAR;
                 DIP { DUP; CDR; CDR; CDR; CAR };
                 GET;
                 IF_NONE
                   { PUSH string "Key not found in map";
                     FAILWITH }
                   {  };
                 SWAP;
                 CDR;
                 SWAP;
                 PAIR }
               {  };
             DUP;
             CDR;
             CAR;
             CAR;
             DIP { DUP; CAR; DIP { DUP; CDR; CAR; CDR; CAR }; ADD; SOME };
             DIP { DIP { DUP; CDR; CDR; CDR; CAR } };
             UPDATE;
             SWAP;
             DUP;
             DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; CDR; SWAP; PAIR }; CAR; PAIR }; CAR; PAIR };
             CAR;
             PAIR;
             DUP;
             CDR;
             CAR;
             CDR;
             CDR;
             IF_NONE
               { PUSH bool False }
               { DROP;
                 PUSH bool True };
             DIP { PUSH bool True };
             COMPARE;
             EQ;
             IF
               { DUP;
                 CDR;
                 CAR;
                 CDR;
                 CDR;
                 IF_NONE
                   { PUSH string "Optional value is empty";
                     FAILWITH }
                   {  };
                 DIP { DUP; CDR; CAR; CDR; CAR };
                 SWAP;
                 PAIR;
                 DIP { SENDER };
                 SWAP;
                 PAIR;
                 DIP { PUSH mutez 0 };
                 DIP { DIP { DUP;
                             CDR;
                             CAR;
                             CAR;
                             CONTRACT (pair address (pair mutez bytes));
                             IF_NONE
                               { PUSH string "Invalid contract";
                                 FAILWITH }
                               {  } } };
                 TRANSFER_TOKENS;
                 DIP { DUP; CDR; CDR; CAR };
                 CONS;
                 SWAP;
                 DUP;
                 DIP { CDR; DUP; DIP { CDR; CDR; SWAP; PAIR }; CAR; PAIR };
                 CAR;
                 PAIR }
               {  };
             CDR;
             CDR }
           { DUP;
             PUSH bytes 0x10f1f22a;
             COMPARE;
             EQ;
             IF
               { DROP;
                 DROP;
                 DUP;
                 CDR;
                 CDR;
                 CDR;
                 CDR;
                 CDR;
                 CDR;
                 CDR;
                 DIP { PUSH bool True };
                 COMPARE;
                 NEQ;
                 IF
                   {  }
                   { PUSH string "Failed assert";
                     FAILWITH };
                 SENDER;
                 DIP { DUP; CDR; CDR; CDR; CDR; CAR };
                 COMPARE;
                 EQ;
                 IF
                   {  }
                   { PUSH string "Failed assert";
                     FAILWITH };
                 DUP;
                 CDR;
                 CDR;
                 CDR;
                 CDR;
                 CAR;
                 DIP { NONE mutez };
                 DIP { DIP { DUP; CDR; CAR } };
                 UPDATE;
                 SWAP;
                 DUP;
                 DIP { CDR; CDR; SWAP; PAIR };
                 CAR;
                 PAIR;
                 PUSH bool True;
                 SWAP;
                 DUP;
                 DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; CAR; PAIR }; CAR; PAIR }; CAR; PAIR }; CAR; PAIR }; CAR; PAIR }; CAR; PAIR };
                 CAR;
                 PAIR;
                 NOW;
                 SWAP;
                 DUP;
                 DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; CDR; SWAP; PAIR }; CAR; PAIR }; CAR; PAIR }; CAR; PAIR }; CAR; PAIR }; CAR; PAIR };
                 CAR;
                 PAIR }
               { DUP;
                 PUSH bytes 0x05072bb4;
                 COMPARE;
                 EQ;
                 IF
                   { DROP;
                     DUP;
                     SIZE;
                     PUSH nat 4;
                     SWAP;
                     SUB;
                     DUP;
                     GT;
                     IF
                       {  }
                       { PUSH nat 102;
                         FAILWITH };
                     ABS;
                     PUSH nat 4;
                     SLICE;
                     IF_NONE
                       { PUSH nat 101;
                         FAILWITH }
                       {  };
                     UNPACK address;
                     IF_NONE
                       { PUSH nat 103;
                         FAILWITH }
                       {  };
                     PAIR;
                     DUP;
                     CDR;
                     CDR;
                     CDR;
                     CDR;
                     CDR;
                     CDR;
                     CDR;
                     CDR;
                     DIP { PUSH bool True };
                     COMPARE;
                     EQ;
                     IF
                       {  }
                       { PUSH string "Failed assert";
                         FAILWITH };
                     DUP;
                     CAR;
                     DIP { DUP; CDR; CDR; CDR; CDR; CAR };
                     MEM;
                     DIP { PUSH bool True };
                     COMPARE;
                     EQ;
                     IF
                       {  }
                       { PUSH string "Failed assert";
                         FAILWITH };
                     NOW;
                     DIP { DUP;
                           CDR;
                           CDR;
                           CDR;
                           CDR;
                           CDR;
                           CDR;
                           CDR;
                           CAR;
                           DIP { DUP;
                                 CAR;
                                 DIP { DUP; CDR; CDR; CDR; CDR; CAR };
                                 GET;
                                 IF_NONE
                                   { PUSH string "Key not found in map";
                                     FAILWITH }
                                   {  } };
                           ADD };
                     COMPARE;
                     GE;
                     IF
                       {  }
                       { PUSH string "Failed assert";
                         FAILWITH };
                     DUP;
                     CAR;
                     DIP { NONE int };
                     DIP { DIP { DUP; CDR; CDR; CDR; CDR; CAR } };
                     UPDATE;
                     SWAP;
                     DUP;
                     DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; CDR; SWAP; PAIR }; CAR; PAIR }; CAR; PAIR }; CAR; PAIR };
                     CAR;
                     PAIR;
                     CDR }
                   { DUP;
                     PUSH bytes 0x85ab8897;
                     COMPARE;
                     EQ;
                     IF
                       { DROP;
                         DUP;
                         SIZE;
                         PUSH nat 4;
                         SWAP;
                         SUB;
                         DUP;
                         GT;
                         IF
                           {  }
                           { PUSH nat 102;
                             FAILWITH };
                         ABS;
                         PUSH nat 4;
                         SLICE;
                         IF_NONE
                           { PUSH nat 101;
                             FAILWITH }
                           {  };
                         UNPACK mutez;
                         IF_NONE
                           { PUSH nat 103;
                             FAILWITH }
                           {  };
                         PAIR;
                         NONE mutez;
                         PAIR;
                         DUP;
                         CDR;
                         CDR;
                         CDR;
                         CDR;
                         CDR;
                         CDR;
                         CDR;
                         CDR;
                         CDR;
                         DIP { SENDER; DIP { DUP; CDR; CDR; CDR; CDR; CDR; CDR; CAR }; COMPARE; EQ };
                         OR;
                         DIP { SENDER; DIP { DUP; CDR; CDR; CDR; CDR; CDR; CDR; CDR; CAR }; COMPARE; EQ };
                         OR;
                         IF
                           {  }
                           { PUSH string "Failed assert";
                             FAILWITH };
                         SENDER;
                         DIP { DUP; CDR; CDR; CDR; CDR; CDR; CAR };
                         MEM;
                         DIP { PUSH bool True };
                         COMPARE;
                         NEQ;
                         IF
                           {  }
                           { PUSH string "Failed assert";
                             FAILWITH };
                         SENDER;
                         DIP { DUP; CDR; CDR; CDR; CAR };
                         MEM;
                         DIP { PUSH bool True };
                         COMPARE;
                         EQ;
                         IF
                           {  }
                           { PUSH string "Failed assert";
                             FAILWITH };
                         SENDER;
                         DIP { DUP; CDR; CDR; CDR; CAR };
                         GET;
                         IF_NONE
                           { PUSH string "Key not found in map";
                             FAILWITH }
                           {  };
                         SWAP;
                         CDR;
                         SWAP;
                         PAIR;
                         DUP;
                         CAR;
                         DIP { DUP; CDR; CAR };
                         COMPARE;
                         GE;
                         IF
                           {  }
                           { PUSH string "Failed assert";
                             FAILWITH };
                         SENDER;
                         DIP { DUP; CAR; DIP { DUP; CDR; CAR }; SUB; SOME };
                         DIP { DIP { DUP; CDR; CDR; CDR; CAR } };
                         UPDATE;
                         SWAP;
                         DUP;
                         DIP { CDR; DUP; DIP { CDR; DUP; DIP { CDR; CDR; SWAP; PAIR }; CAR; PAIR }; CAR; PAIR };
                         CAR;
                         PAIR;
                         CDR;
                         CDR }
                       { DROP;
                         PUSH nat 400;
                         FAILWITH } } } } };
}
